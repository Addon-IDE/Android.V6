类 编辑器_行为编辑器_可视 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1]])
	变量 自适应布局1 : 自适应布局
	@布局配置([[父布局=自适应布局1,宽度=-1,高度=-1,@横坐标比例=-9.0E-4,@纵坐标比例=-4.0E-4,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,背景颜色=-1,纵向布局=假]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=50,高度DP=50,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/back/default_backicon.png",水波纹效果=真,可获取焦点=真]])
	变量 退出界面 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388627,宽度=-1]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,字体大小=20,粗体=假,@左外边距DP=10,字体颜色=-16777216,可视=真,内容="可视化预览",@下外边距DP=5]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-1,@左外边距DP=10,@右外边距DP=50,高度=-1,背景颜色=-1,提示文本="搜索项名称",内容="",左内边距DP=5,右内边距DP=5,字体大小=17,可视=假,单行显示=真]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388629,宽度=-1]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度DP=50,高度DP=50,对齐方式=17,水波纹效果=真,纵向布局=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/editor/resource_editor/menu.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388691]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,@左外边距DP=10,字体颜色=-16777216,字体大小=12,@下外边距DP=3]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-1,分割线高度=0,上内边距DP=5,下内边距DP=5,始终显示快速滚动条=真]])
	变量 自定义列表框1 : 自定义列表框

	//声明
	变量 设置_设定  : 设置_设定
	变量 可视化功能 : 编辑器_行为编辑器_可视_功能
	//变量
	变量 文件路径 : 文本
	变量 文件内容 : 文本
	变量 jsonObject : JSON对象
	变量 jsonArray : JSON数组
	//列表
	变量 JSON对象list : 文本集合
	变量 JSON数组list : 文本集合
	//上一级
	变量 上一级数组 : 文本集合
	变量 上一级数量 : 整数 = 0

	事件 编辑器_行为编辑器_可视:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局5,设置相关路径)
			结束 如果
		结束 如果
		//退出按钮事件
		事件 退出界面:被单击()
			关闭窗口()
		结束 事件
		//加载方法
		加载文件()
		菜单()
		//订阅事件
		订阅事件()
	结束 事件
	
	方法 加载文件()
		文件路径 = 其他_其他.读缓存("behaviour_editor_path_code")
		文本框1.内容 = 取文件名(文件路径)
		文件内容 = 读入文本文件(文件路径)
		如果 可视化功能.判断是否为对象(文件内容) 则
			变量 jsonlist : JSON对象 = 文件内容
			jsonObject = jsonlist
			加载对象(jsonlist)
		否则
			变量 jsonlist : JSON数组 = 文件内容
			jsonArray = jsonlist
			加载数组(jsonlist)
		结束 如果
	结束 方法

	方法 菜单()
		事件 线性布局7:被单击()
			变量 XPopup : XPopup附着弹窗
			变量 项目 : 文本[] = {"重新加载","上一级","退出"}
			XPopup.列表项目 = 项目
			XPopup.附着组件 = 线性布局7
			XPopup.动画(XPopup动画.滑动_右上)
			XPopup.半透明(假)
			XPopup.亮色状态栏(真)
			//设置夜间模式
			如果 设置_设定.获取开关("NightMode") 则
				XPopup.暗色主题(真)
			结束 如果
			XPopup.显示()
			//项目被点击
			事件 XPopup:列表被单击(索引 : 整数,文本 : 文本)
				假如 索引
					是 0
						加载文件()
					是 1
						上一级数量 = 上一级数量 - 1
						如果 上一级数量 >= 0 则
							变量 jsonlist : JSON对象 = 上一级数组[上一级数量].到文本()
							jsonObject = jsonlist
							加载对象(jsonlist)
						结束 如果
					是 2
						关闭窗口()
				结束 假如
			结束 事件
		结束 事件
	结束 方法

	方法 加载对象(对象内容 : JSON对象)
		//初始化
		JSON对象list.清空()
		//循环
		循环(i, 0, 取数组长度(对象内容.键名))
			JSON对象list.添加成员(数组到集合(对象内容.键名).取成员(i).到文本())
		结束 循环
		//加载列表
		事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 编辑器_行为编辑器_可视_列表?
			如果 项目布局 == 空 则
				布局 = 创建 编辑器_行为编辑器_可视_列表
			否则
				布局 = 项目布局
			结束 如果
			//设置列表内容
			变量 Text : 文本 = JSON对象list[索引]
			布局.文本框1.内容 = Text
			如果 可视化功能.判断是否为对象(jsonObject[Text].到文本()) 则
				布局.文本框2.内容 = ""
				布局.图片框1.图片资源 = 编辑器_行为编辑器_可视_资源.文件夹
			否则
				如果 jsonObject[Text].到文本() ? "[" 则
					布局.图片框1.图片资源 = 编辑器_行为编辑器_可视_资源.文件夹
					布局.文本框2.内容 = "[...]"
				否则
					布局.图片框1.图片资源 = 编辑器_行为编辑器_可视_资源.文件
					布局.文本框2.内容 = jsonObject[Text].到文本()
				结束 如果
			结束 如果
			//列表被单击
			事件 布局.线性布局1:被单击()
				//List
				如果 可视化功能.判断是否为对象(jsonObject[Text].到文本()) 则
					变量 jsonlist : JSON对象 = jsonObject[Text]
					jsonObject = jsonlist
					//用来加载上一级
					上一级数组.添加成员(jsonObject.到文本())
					上一级数量 = 上一级数组.长度
					加载对象(jsonlist)
				否则
					如果 jsonObject[Text].到文本() ? "[" 则
						变量 jsona : JSON数组 = jsonObject[Text].到文本()
						jsonArray = jsona
						//用来加载上一级
						上一级数组.添加成员(jsonObject.到文本())
						上一级数量 = 上一级数组.长度
						加载数组(jsona)
					否则
						弹出提示2(jsonObject[Text].到文本())
					结束 如果
				结束 如果
			结束 事件
			返回 布局
		结束 事件
		//更新列表
		自定义列表框1.更新项目(JSON对象list.长度)
	结束 方法

	方法 加载数组(数组内容 : JSON数组)
		//初始化
		JSON数组list.清空()
		//循环
		循环(i, 0, 数组内容.长度)
			JSON数组list.添加成员(数组内容.取文本(i).到文本())
		结束 循环
		//加载列表
		事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 编辑器_行为编辑器_可视_列表?
			如果 项目布局 == 空 则
				布局 = 创建 编辑器_行为编辑器_可视_列表
			否则
				布局 = 项目布局
			结束 如果
			//设置列表内容
			变量 Text : 文本 = JSON数组list[索引]
			布局.文本框1.内容 = "数组：" + 索引.到文本()
			布局.文本框2.内容 = Text
			布局.图片框1.图片资源 = 编辑器_行为编辑器_可视_资源.文件夹
			//列表被单击
			事件 布局.线性布局1:被单击()
				如果 可视化功能.判断是否为对象(jsonArray[索引].到文本()) 则
					变量 jsonlist : JSON对象 = jsonArray[索引]
					jsonObject = jsonlist
					//用来加载上一级
					上一级数组.添加成员(jsonObject.到文本())
					上一级数量 = 上一级数组.长度
					加载对象(jsonlist)
				结束 如果
			结束 事件
			返回 布局
		结束 事件
		//更新列表
		自定义列表框1.更新项目(JSON数组list.长度)
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		编辑框1.背景颜色 = 0XFF333333
		退出界面.图片资源 = 编辑器_行为编辑器_资源.白色返回图标
		图片框1.图片资源 = 编辑器_行为编辑器_资源.白色菜单图标
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
		线性布局5.背景颜色 = 0XFF222222
		编辑框1.提示文本颜色 = 0XFF999999
		编辑框1.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类

//json
@导入Java("org.json.JSONArray")
@导入Java("org.json.JSONObject")
@导入Java("org.json.JSONException")
类 编辑器_行为编辑器_可视_功能

	方法 判断是否为对象(jsonString : 文本) : 逻辑型
		@code
		try {
            new JSONObject(#jsonString);
            return true;
        } catch (JSONException e) {
            return false;
        }
		@end
	结束 方法

结束 类

类 编辑器_行为编辑器_可视_列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,水波纹效果=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,圆角=1,@左外边距DP=5,@右外边距DP=5,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-1,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=45,高度=-1,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=30,高度DP=30]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388627]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,@左外边距DP=5,字体大小=14,字体颜色=-16777216,单行显示=真,宽度DP=150,对齐方式=8388611]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,@左外边距DP=0,字体大小=14,字体颜色=-16777216,单行显示=真,@右外边距DP=10,宽度DP=150,对齐方式=8388613]])
	变量 文本框2 : 文本框

	//声明
	变量 设置_设定 : 设置_设定

	事件 编辑器_行为编辑器_可视_列表:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		卡片布局1.卡片背景颜色 = 0XFF333333
		线性布局2.背景颜色 = 0XFF333333
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类

类 编辑器_行为编辑器_可视_资源
	
	@静态
	变量 文件夹 : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/list_preview/group.png"
	
	@静态
	变量 文件 : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/list_preview/piece.png"
	
结束 类