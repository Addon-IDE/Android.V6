类 编辑器_行为编辑器_主页 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=80,对齐方式=8388627]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=20,字体大小=19,内容="行为包编辑器",字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局10 : 线性布局
	@布局配置([[父布局=线性布局10,@左外边距DP=20,字体大小=16,内容="最近",字体颜色=-16777216]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=100,显示滑块条=假,分割线高度=0,左内边距DP=20,右内边距DP=20]])
	变量 自定义列表框1 : 自定义列表框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局13 : 线性布局
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局14 : 线性布局
	@布局配置([[父布局=线性布局14,@左外边距DP=20,字体大小=16,内容="功能",字体颜色=-16777216]])
	变量 文本框6 : 文本框
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=65]])
	变量 横向滚动布局2 : 横向滚动布局
	@布局配置([[父布局=横向滚动布局2,宽度=-1,高度DP=65,右内边距DP=20,左内边距DP=20,对齐方式=17]])
	变量 线性布局15 : 线性布局
	@布局配置([[父布局=线性布局15,宽度DP=55,高度DP=55,圆角=25,卡片阴影=0,@右外边距DP=5]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,背景颜色=-1,对齐方式=17,纵向布局=真,水波纹效果=真]])
	变量 线性布局11 : 线性布局
	@布局配置([[父布局=线性布局11,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/editor/behavior_editor/home/help.xml"]])
	变量 图片框2 : 图片框
	@布局配置([[父布局=线性布局11,字体大小=11,@上外边距DP=3,字体颜色=-16777216,对齐方式=17,内容="帮助"]])
	变量 文本框7 : 文本框
	@布局配置([[父布局=线性布局15,宽度DP=55,高度DP=55,圆角=25,卡片阴影=0,@左外边距DP=5,@右外边距DP=5]])
	变量 卡片布局3 : 卡片布局
	@布局配置([[父布局=卡片布局3,宽度=-1,高度=-1,背景颜色=-1,对齐方式=17,纵向布局=真,水波纹效果=真]])
	变量 线性布局16 : 线性布局
	@布局配置([[父布局=线性布局16,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/editor/behavior_editor/home/repair.xml"]])
	变量 图片框3 : 图片框
	@布局配置([[父布局=线性布局16,字体大小=11,@上外边距DP=3,字体颜色=-16777216,对齐方式=17,内容="修复"]])
	变量 文本框8 : 文本框
	@布局配置([[父布局=线性布局15,宽度DP=55,高度DP=55,圆角=25,卡片阴影=0,@右外边距DP=5,@左外边距DP=5]])
	变量 卡片布局4 : 卡片布局
	@布局配置([[父布局=卡片布局4,宽度=-1,高度=-1,背景颜色=-1,对齐方式=17,纵向布局=真,水波纹效果=真]])
	变量 线性布局17 : 线性布局
	@布局配置([[父布局=线性布局17,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/editor/behavior_editor/home/set.xml"]])
	变量 图片框4 : 图片框
	@布局配置([[父布局=线性布局17,字体大小=11,@上外边距DP=3,字体颜色=-16777216,对齐方式=17,内容="设置"]])
	变量 文本框9 : 文本框
	@布局配置([[父布局=线性布局15,宽度DP=55,高度DP=55,圆角=25,卡片阴影=0,@左外边距DP=5,@右外边距DP=5]])
	变量 卡片布局5 : 卡片布局
	@布局配置([[父布局=卡片布局5,宽度=-1,高度=-1,背景颜色=-1,对齐方式=17,纵向布局=真,水波纹效果=真]])
	变量 线性布局18 : 线性布局
	@布局配置([[父布局=线性布局18,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/editor/behavior_editor/home/clear.xml"]])
	变量 图片框5 : 图片框
	@布局配置([[父布局=线性布局18,字体大小=11,@上外边距DP=3,字体颜色=-16777216,对齐方式=17,内容="清除最近"]])
	变量 文本框10 : 文本框
	@布局配置([[父布局=线性布局15,宽度DP=55,高度DP=55,圆角=25,卡片阴影=0,@左外边距DP=5,@右外边距DP=5,可视=假]])
	变量 卡片布局6 : 卡片布局
	@布局配置([[父布局=卡片布局6,宽度=-1,高度=-1,背景颜色=-1,对齐方式=17,纵向布局=真,水波纹效果=真]])
	变量 线性布局19 : 线性布局
	@布局配置([[父布局=线性布局19,宽度DP=25,高度DP=25]])
	变量 图片框6 : 图片框
	@布局配置([[父布局=线性布局19,字体大小=11,@上外边距DP=3,字体颜色=-16777216,对齐方式=17,内容="敬请期待"]])
	变量 文本框11 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,@左外边距DP=20,字体大小=16,内容="编辑",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局3,宽度=-1,高度=-1]])
	变量 滚动布局3 : 滚动布局
	@布局配置([[父布局=滚动布局3,宽度=-1,高度=-1,纵向布局=真,右内边距DP=20,左内边距DP=20,下内边距DP=10,上内边距DP=10]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=65,圆角=20,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,对齐方式=8388627,水波纹效果=真,背景颜色=-769226]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度DP=80,高度DP=80,对齐方式=17]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/behavior_editor/icons/items.xml"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局6,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,字体大小=18,内容="物品",字体颜色=-1]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局8,@上外边距DP=3,字体大小=13,内容="名称：items  版本：vanilla  项目数：0",字体颜色=-1,@右外边距DP=5]])
	变量 文本框4 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=65,圆角=20,卡片阴影=0,@上外边距DP=5]])
	变量 卡片布局7 : 卡片布局
	@布局配置([[父布局=卡片布局7,宽度=-1,高度=-1,对齐方式=8388627,水波纹效果=真,背景颜色=-1499549]])
	变量 线性布局20 : 线性布局
	@布局配置([[父布局=线性布局20,宽度DP=80,高度DP=80,对齐方式=17]])
	变量 线性布局26 : 线性布局
	@布局配置([[父布局=线性布局26,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/behavior_editor/icons/entities.xml"]])
	变量 图片框7 : 图片框
	@布局配置([[父布局=线性布局20,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局32 : 线性布局
	@布局配置([[父布局=线性布局32,字体大小=18,内容="实体",字体颜色=-1]])
	变量 文本框12 : 文本框
	@布局配置([[父布局=线性布局32,@上外边距DP=3,字体大小=13,内容="名称：entities  版本：vanilla  项目数：0",字体颜色=-1,@右外边距DP=5]])
	变量 文本框19 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=65,圆角=20,卡片阴影=0,@上外边距DP=5]])
	变量 卡片布局8 : 卡片布局
	@布局配置([[父布局=卡片布局8,宽度=-1,高度=-1,对齐方式=8388627,水波纹效果=真,背景颜色=-14575885]])
	变量 线性布局21 : 线性布局
	@布局配置([[父布局=线性布局21,宽度DP=80,高度DP=80,对齐方式=17]])
	变量 线性布局27 : 线性布局
	@布局配置([[父布局=线性布局27,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/behavior_editor/icons/recipes.xml"]])
	变量 图片框8 : 图片框
	@布局配置([[父布局=线性布局21,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局33 : 线性布局
	@布局配置([[父布局=线性布局33,字体大小=18,内容="配方",字体颜色=-1]])
	变量 文本框13 : 文本框
	@布局配置([[父布局=线性布局33,@上外边距DP=3,字体大小=13,内容="名称：recipes  版本：vanilla  项目数：0",字体颜色=-1,@右外边距DP=5]])
	变量 文本框18 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=65,圆角=20,卡片阴影=0,@上外边距DP=5,可视=真]])
	变量 卡片布局9 : 卡片布局
	@布局配置([[父布局=卡片布局9,宽度=-1,高度=-1,对齐方式=8388627,水波纹效果=真,背景颜色=-16728876]])
	变量 线性布局22 : 线性布局
	@布局配置([[父布局=线性布局22,宽度DP=80,高度DP=80,对齐方式=17]])
	变量 线性布局28 : 线性布局
	@布局配置([[父布局=线性布局28,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/behavior_editor/icons/behavior_trees.xml"]])
	变量 图片框9 : 图片框
	@布局配置([[父布局=线性布局22,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真,@上外边距DP=0]])
	变量 线性布局34 : 线性布局
	@布局配置([[父布局=线性布局34,字体大小=18,内容="行为树",字体颜色=-1]])
	变量 文本框14 : 文本框
	@布局配置([[父布局=线性布局34,@上外边距DP=3,字体大小=13,内容="名称：behavior_trees  版本：vanilla  项目数：0",字体颜色=-1,@右外边距DP=5]])
	变量 文本框20 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=65,圆角=20,卡片阴影=0,@上外边距DP=5]])
	变量 卡片布局10 : 卡片布局
	@布局配置([[父布局=卡片布局10,宽度=-1,高度=-1,对齐方式=8388627,水波纹效果=真,背景颜色=-16738680]])
	变量 线性布局23 : 线性布局
	@布局配置([[父布局=线性布局23,宽度DP=80,高度DP=80,对齐方式=17]])
	变量 线性布局29 : 线性布局
	@布局配置([[父布局=线性布局29,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/behavior_editor/icons/loot_tables.xml"]])
	变量 图片框10 : 图片框
	@布局配置([[父布局=线性布局23,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局35 : 线性布局
	@布局配置([[父布局=线性布局35,字体大小=18,内容="战利品表",字体颜色=-1]])
	变量 文本框15 : 文本框
	@布局配置([[父布局=线性布局35,@上外边距DP=3,字体大小=13,内容="名称：loot_tables  版本：vanilla  项目数：0",字体颜色=-1,@右外边距DP=5]])
	变量 文本框21 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=65,圆角=20,卡片阴影=0,@上外边距DP=5]])
	变量 卡片布局11 : 卡片布局
	@布局配置([[父布局=卡片布局11,宽度=-1,高度=-1,对齐方式=8388627,水波纹效果=真,背景颜色=-43230]])
	变量 线性布局24 : 线性布局
	@布局配置([[父布局=线性布局24,宽度DP=80,高度DP=80,对齐方式=17]])
	变量 线性布局30 : 线性布局
	@布局配置([[父布局=线性布局30,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/behavior_editor/icons/spawn_rules.xml"]])
	变量 图片框11 : 图片框
	@布局配置([[父布局=线性布局24,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局36 : 线性布局
	@布局配置([[父布局=线性布局36,字体大小=18,内容="生成规则",字体颜色=-1]])
	变量 文本框16 : 文本框
	@布局配置([[父布局=线性布局36,@上外边距DP=3,字体大小=13,内容="名称：spawn_rules  版本：vanilla  项目数：0",字体颜色=-1,@右外边距DP=5]])
	变量 文本框22 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=65,圆角=20,卡片阴影=0,@上外边距DP=5]])
	变量 卡片布局12 : 卡片布局
	@布局配置([[父布局=卡片布局12,宽度=-1,高度=-1,对齐方式=8388627,水波纹效果=真,背景颜色=-10453621]])
	变量 线性布局25 : 线性布局
	@布局配置([[父布局=线性布局25,宽度DP=80,高度DP=80,对齐方式=17]])
	变量 线性布局31 : 线性布局
	@布局配置([[父布局=线性布局31,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/behavior_editor/icons/trading.xml"]])
	变量 图片框12 : 图片框
	@布局配置([[父布局=线性布局25,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局37 : 线性布局
	@布局配置([[父布局=线性布局37,字体大小=18,内容="交易",字体颜色=-1]])
	变量 文本框17 : 文本框
	@布局配置([[父布局=线性布局37,@上外边距DP=3,字体大小=13,内容="名称：trading  版本：vanilla  项目数：0",字体颜色=-1,@右外边距DP=5]])
	变量 文本框23 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=65,圆角=20,卡片阴影=0,@上外边距DP=5]])
	变量 卡片布局13 : 卡片布局
	@布局配置([[父布局=卡片布局13,宽度=-1,高度=-1,对齐方式=8388627,水波纹效果=真,背景颜色=-8825528]])
	变量 线性布局38 : 线性布局
	@布局配置([[父布局=线性布局38,宽度DP=80,高度DP=80,对齐方式=17]])
	变量 线性布局42 : 线性布局
	@布局配置([[父布局=线性布局42,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/behavior_editor/icons/features.xml"]])
	变量 图片框13 : 图片框
	@布局配置([[父布局=线性布局38,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局46 : 线性布局
	@布局配置([[父布局=线性布局46,字体大小=18,内容="特征",字体颜色=-1]])
	变量 文本框24 : 文本框
	@布局配置([[父布局=线性布局46,@上外边距DP=3,字体大小=13,内容="名称：features  版本：vanilla_1.17.0  项目数：0",字体颜色=-1,@右外边距DP=5]])
	变量 文本框28 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=65,圆角=20,卡片阴影=0,@上外边距DP=5]])
	变量 卡片布局14 : 卡片布局
	@布局配置([[父布局=卡片布局14,宽度=-1,高度=-1,对齐方式=8388627,水波纹效果=真,背景颜色=-10395295]])
	变量 线性布局39 : 线性布局
	@布局配置([[父布局=线性布局39,宽度DP=80,高度DP=80,对齐方式=17]])
	变量 线性布局43 : 线性布局
	@布局配置([[父布局=线性布局43,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/behavior_editor/icons/feature_rules.xml"]])
	变量 图片框14 : 图片框
	@布局配置([[父布局=线性布局39,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局47 : 线性布局
	@布局配置([[父布局=线性布局47,字体大小=18,内容="特征规则",字体颜色=-1]])
	变量 文本框25 : 文本框
	@布局配置([[父布局=线性布局47,@上外边距DP=3,字体大小=13,内容="名称：feature_rules  版本：vanilla_1.17.0  项目数：0",字体颜色=-1,@右外边距DP=5]])
	变量 文本框29 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=65,圆角=20,卡片阴影=0,@上外边距DP=5,@下外边距DP=5]])
	变量 卡片布局15 : 卡片布局
	@布局配置([[父布局=卡片布局15,宽度=-1,高度=-1,对齐方式=8388627,水波纹效果=真,背景颜色=-13124]])
	变量 线性布局40 : 线性布局
	@布局配置([[父布局=线性布局40,宽度DP=80,高度DP=80,对齐方式=17]])
	变量 线性布局44 : 线性布局
	@布局配置([[父布局=线性布局44,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/behavior_editor/icons/biomes.xml"]])
	变量 图片框15 : 图片框
	@布局配置([[父布局=线性布局40,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局48 : 线性布局
	@布局配置([[父布局=线性布局48,字体大小=18,内容="生物群落",字体颜色=-1]])
	变量 文本框26 : 文本框
	@布局配置([[父布局=线性布局48,@上外边距DP=3,字体大小=13,内容="名称：biomes  版本：vanilla_1.18.20  项目数：0",字体颜色=-1,@右外边距DP=5]])
	变量 文本框30 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=65,圆角=20,卡片阴影=0,@上外边距DP=5,可视=假]])
	变量 卡片布局16 : 卡片布局
	@布局配置([[父布局=卡片布局16,宽度=-1,高度=-1,对齐方式=8388627,水波纹效果=真,背景颜色=-10453621]])
	变量 线性布局41 : 线性布局
	@布局配置([[父布局=线性布局41,宽度DP=80,高度DP=80,对齐方式=17]])
	变量 线性布局45 : 线性布局
	@布局配置([[父布局=线性布局45,宽度DP=30,高度DP=30]])
	变量 图片框16 : 图片框
	@布局配置([[父布局=线性布局41,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局49 : 线性布局
	@布局配置([[父布局=线性布局49,字体大小=18,内容="交易",字体颜色=-1]])
	变量 文本框27 : 文本框
	@布局配置([[父布局=线性布局49,@上外边距DP=3,字体大小=13,内容="名称：trading  项目数：0",字体颜色=-1,@右外边距DP=5]])
	变量 文本框31 : 文本框

	//声明
	变量 设置_设定 : 设置_设定
	变量 其他_功能 : 其他_功能
	变量 文件选择器 : 文件选择器

	变量 列表数组 : 文本集合

	事件 编辑器_行为编辑器_主页:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0X00FFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		否则
			//五颜六色
			如果 设置_设定.获取开关("BehaviourEditorHomeListGorgeousColors") 则
			否则
				关闭五颜六色()
			结束 如果
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局1,设置相关路径)
			结束 如果
		结束 如果
		//加载方法
		功能按钮事件()
		编辑功能事件()
		统计项目数量()
		如果 文件是否存在(其他_变量.数据目录 + "behaviour/behaviour") 则
		否则
			初始化()
		结束 如果
		//加载操作记录列表
		操作记录列表()
		//订阅事件
		订阅事件()
	结束 事件

	//窗口被重新启动时触发该事件
	事件 编辑器_行为编辑器_主页:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
		//加载操作记录列表
		操作记录列表()
	结束 事件

	//初始化
	变量 加载对话框 : DX加载
	变量 初始化i : 整数 = 0
	@异步方法
	方法 初始化()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			加载对话框.主题(DX主题.暗色)
		否则
			加载对话框.主题(DX主题.自动)
		结束 如果
		加载对话框.显示()
		加载对话框.内容("预处理中...")
		//输出文件
		变量 jsonlist : JSON数组 = 读入资源文件(本对象,"behaviour/contents.json")
		提交到新线程运行()
		循环(i, 0, jsonlist.长度)
			初始化i = i
			变量 资源路径 : 文本 = "behaviour/" + jsonlist.取文本(i) + ".zip"
			变量 输出位置 : 文本 = 其他_变量.数据目录 + 资源路径
			加载对话框.内容("正在写出：(" + 初始化i + "/" + jsonlist.长度 + ")")
			等待 写出资源文件(本对象,资源路径,输出位置)
			加载对话框.内容("正在解压：(" + 初始化i + "/" + jsonlist.长度 + ")")
			等待 ZIP解压(输出位置,其他_变量.数据目录 + "behaviour")
		结束 循环
		结束提交到新线程()
		//写出完成文件,防止重复解压和下载
		加载对话框.内容("开始写出textures文件")
		等待 写出文本文件(其他_变量.数据目录 + "behaviour/behaviour","")
		//提示并关闭对话框
		加载对话框.内容("初始化完毕！")
		加载对话框.关闭()
	结束 方法

	方法 统计项目数量()
		提交到新线程运行()
		提交到主线程运行(本对象)
		如果 设置_设定.获取开关("BehaviourEditorHomeDisplayVersion") 则
			变量 主路径 : 文本 = 其他_变量.数据目录 + "behaviour/"
			文本框4.内容 = "名称：items  版本：vanilla  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "items")
			文本框19.内容 = "名称：entities  版本：vanilla  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "entities")
			文本框18.内容 = "名称：recipes  版本：vanilla  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "recipes")
			文本框20.内容 = "名称：behavior_trees  版本：vanilla  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "behavior_trees")
			文本框21.内容 = "名称：loot_tables  版本：vanilla  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "loot_tables")
			文本框22.内容 = "名称：spawn_rules  版本：vanilla  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "spawn_rules")
			文本框23.内容 = "名称：trading  版本：vanilla  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "trading")
			文本框28.内容 = "名称：features  版本：vanilla_1.17.0  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "features")
			文本框29.内容 = "名称：feature_rules  版本：vanilla_1.17.0  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "feature_rules")
			文本框30.内容 = "名称：biomes  版本：vanilla_1.18.20  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "biomes")
		否则
			变量 主路径 : 文本 = 其他_变量.数据目录 + "behaviour/"
			文本框4.内容 = "名称：items  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "items")
			文本框19.内容 = "名称：entities  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "entities")
			文本框18.内容 = "名称：recipes  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "recipes")
			文本框20.内容 = "名称：behavior_trees  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "behavior_trees")
			文本框21.内容 = "名称：loot_tables  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "loot_tables")
			文本框22.内容 = "名称：spawn_rules  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "spawn_rules")
			文本框23.内容 = "名称：trading  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "trading")
			文本框28.内容 = "名称：features  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "features")
			文本框29.内容 = "名称：feature_rules  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "feature_rules")
			文本框30.内容 = "名称：biomes  项目数：" + 其他_功能.统计文件夹内文件数量(主路径 + "biomes")
		结束 如果
		结束提交到主线程()
		结束提交到新线程()
	结束 方法

	//功能栏按钮的事件
	方法 功能按钮事件()
		//帮助
		事件 线性布局11:被单击()
			//帮助
			变量 help : 文本 = "最近：\n这里会显示，刚刚保存的一些记录，你可以对它重新修改和删除\n"
			变量 help2 : 文本 = "功能：\n①帮助：可以查看帮助\n②修复：可以用来修复资源文件缺失\n③导入：点击之后会让你选择Minecraft安装包，选择完毕后，程序将会自动获取里面的资源，来更新当时的资源\n④删除最近：删除最近的操作\n"
			变量 help3 : 文本 = "编辑：\n这里可以对游戏的一些行为包项目进行修改\n"
			//对话框
			变量 帮助对话框 : XPopup对话弹窗
			帮助对话框.标题 = "帮助"
			帮助对话框.内容 = help + help2 + help3
			如果 设置_设定.获取开关("NightMode") 则
				帮助对话框.暗色主题(真)
			结束 如果
			帮助对话框.显示()
		结束 事件
		//修复
		事件 线性布局16:被单击()
			如果 删除文件(其他_变量.数据目录 + "behaviour/behaviour") 则
				弹出提示("修复成功！")
				关闭窗口()
			否则
				弹出提示("修复失败！")
			结束 如果
		结束 事件
		//设置
		事件 线性布局17:被单击()
			切换窗口(设置_行为编辑器)
		结束 事件
		//清除最近
		事件 线性布局18:被单击()
			变量 项目名称 : 文本 = 其他_其他.读缓存("ProjectName")
			变量 操作输出路径 : 文本 = 其他_变量.项目目录 + 项目名称 + "/data/behaviour/behavior_record.json"
			变量 jsonlist : JSON数组 = 读入文本文件(操作输出路径)
			如果 jsonlist.长度 <= 0 则
				弹出警告通知("没有可以清除的最近！")
			否则
				变量 索引 : 整数 = jsonlist.长度 -1
				变量 json : JSON对象 = jsonlist[索引]
				变量 输出路径 : 文本 = 其他_变量.项目目录 + 项目名称 + "/behaviour/" + json["path"].到文本()
				jsonlist.移除(索引)
				删除文件(输出路径)
				弹出成功通知("已清除最近！")
				写出文本文件(操作输出路径,jsonlist.到文本(4))
				//刷新列表
				操作记录列表()
			结束 如果
		结束 事件
		//敬请期待
		事件 线性布局19:被单击()
			
		结束 事件
	结束 方法

	//编辑区域的按钮事件
	方法 编辑功能事件()
		//物品
		事件 线性布局6:被单击()
			其他_其他.写缓存("behaviour_editor_path","behaviour/items")
			其他_其他.写缓存("behaviour_editor_name","物品")
			切换窗口(编辑器_行为编辑器_选择)
		结束 事件
		//实体
		事件 线性布局20:被单击()
			其他_其他.写缓存("behaviour_editor_path","behaviour/entities")
			其他_其他.写缓存("behaviour_editor_name","实体")
			切换窗口(编辑器_行为编辑器_选择)
		结束 事件
		//配方
		事件 线性布局21:被单击()
			其他_其他.写缓存("behaviour_editor_path","behaviour/recipes")
			其他_其他.写缓存("behaviour_editor_name","配方")
			切换窗口(编辑器_行为编辑器_选择)
		结束 事件
		//行为树
		事件 线性布局22:被单击()
			其他_其他.写缓存("behaviour_editor_path","behaviour/behavior_trees")
			其他_其他.写缓存("behaviour_editor_name","行为树")
			切换窗口(编辑器_行为编辑器_选择)
		结束 事件
		//战利品表
		事件 线性布局23:被单击()
			其他_其他.写缓存("behaviour_editor_path","behaviour/loot_tables")
			其他_其他.写缓存("behaviour_editor_name","战利品表")
			切换窗口(编辑器_行为编辑器_选择)
		结束 事件
		//生成规则
		事件 线性布局24:被单击()
			其他_其他.写缓存("behaviour_editor_path","behaviour/spawn_rules")
			其他_其他.写缓存("behaviour_editor_name","生成规则")
			切换窗口(编辑器_行为编辑器_选择)
		结束 事件
		//交易
		事件 线性布局25:被单击()
			其他_其他.写缓存("behaviour_editor_path","behaviour/trading")
			其他_其他.写缓存("behaviour_editor_name","交易")
			切换窗口(编辑器_行为编辑器_选择)
		结束 事件
		//特征
		事件 线性布局38:被单击()
			其他_其他.写缓存("behaviour_editor_path","behaviour/features")
			其他_其他.写缓存("behaviour_editor_name","特征")
			切换窗口(编辑器_行为编辑器_选择)
		结束 事件
		//特征规则
		事件 线性布局39:被单击()
			其他_其他.写缓存("behaviour_editor_path","behaviour/feature_rules")
			其他_其他.写缓存("behaviour_editor_name","特征规则")
			切换窗口(编辑器_行为编辑器_选择)
		结束 事件
		//生物群落
		事件 线性布局40:被单击()
			其他_其他.写缓存("behaviour_editor_path","behaviour/biomes")
			其他_其他.写缓存("behaviour_editor_name","生物群落")
			切换窗口(编辑器_行为编辑器_选择)
		结束 事件
	结束 方法

	//加载操作记录列表
	方法 操作记录列表()
		变量 项目名称 : 文本 = 其他_其他.读缓存("ProjectName")
		变量 操作记录文件路径 : 文本 = 其他_变量.项目目录 + 项目名称 + "/data/behaviour/behavior_record.json"
		如果 文件是否存在(操作记录文件路径) 则
			变量 jaonlist : JSON数组 = 读入文本文件(操作记录文件路径)
			操作记录列表S(jaonlist)
		否则
			写出文本文件(操作记录文件路径,"[]")
			变量 jaonlist : JSON数组 = 读入文本文件(操作记录文件路径)
			操作记录列表S(jaonlist)
		结束 如果
	结束 方法

	方法 操作记录列表S(数组内容 : JSON数组)
		//初始化
		列表数组.清空()
		//循环
		循环(i, 0, 数组内容.长度)
			列表数组.添加成员(数组内容.取文本(i).到文本())
		结束 循环
		//加载列表
		事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 编辑器_行为编辑器_记录列表?
			如果 项目布局 == 空 则
				布局 = 创建 编辑器_行为编辑器_记录列表
			否则
				布局 = 项目布局
			结束 如果
			//设置列表内容
			变量 列表数据内容 : 文本 = 列表数组[索引]
			变量 json : JSON对象 = 列表数据内容
			布局.文本框1.内容 = json["name"].到文本()
			布局.文本框2.内容 = json["time"].到文本()
			如果 json["type"].到文本() == "write" 则
				布局.文本框3.内容 = "[写入]"
			否则
				布局.文本框3.内容 = "[未知]"
			结束 如果
			//列表被单击
			事件 布局.线性布局2:被单击()
				变量 XPopup : XPopup附着弹窗
				变量 项目 : 文本[] = {"编辑","删除"}
				XPopup.列表项目 = 项目
				XPopup.附着组件 = 布局.线性布局2
				XPopup.动画(XPopup动画.滑动_左上)
				XPopup.半透明(假)
				XPopup.亮色状态栏(真)
				//设置夜间模式
				如果 设置_设定.获取开关("NightMode") 则
					XPopup.暗色主题(真)
				结束 如果
				XPopup.显示()
				//项目被点击
				事件 XPopup:列表被单击(索引 : 整数,文本 : 文本)
					变量 项目名称 : 文本 = 其他_其他.读缓存("ProjectName")
					变量 输出路径 : 文本 = 其他_变量.项目目录 + 项目名称 + "/behaviour/" + json["path"].到文本()
					假如 索引
						是 0
							其他_其他.写缓存("behaviour_editor_path_code",输出路径)
							变量 转为可以保存的路径 : 文本 = json["path"].到文本()
							其他_其他.写缓存("behaviour_editor_outputpath",转为可以保存的路径)
							切换窗口(编辑器_行为编辑器_编辑)
						是 1
							变量 删除对话框 : XPopup对话弹窗
							删除对话框.标题 = "提示"
							删除对话框.内容 = "此操作将会删除对应的文件，是否移除：" + json["name"].到文本()
							如果 设置_设定.获取开关("NightMode") 则
								删除对话框.暗色主题(真)
							结束 如果
							删除对话框.显示()
							事件 删除对话框:确定()
								如果 删除文件(输出路径) 则
									编辑器_行为编辑器_功能.删除(json["path"].到文本())
									弹出成功通知("移除对应文件成功！")
									操作记录列表()
								否则
									弹出错误通知("移除对应文件失败！")
								结束 如果
							结束 事件
					结束 假如
				结束 事件
			结束 事件
			返回 布局
		结束 事件
		//更新列表
		自定义列表框1.更新项目(列表数组.长度)
		//计算列表框的宽度
		如果 列表数组.长度 <= 4 则
			变量 高度 : 整数 = 列表数组.长度 * 50
			自定义列表框1.高度DP = 高度
		否则
			自定义列表框1.高度DP = 200
		结束 如果
	结束 方法

	//用来关闭五颜六色的按钮的方法，让它变得简洁
	方法 关闭五颜六色()
		线性布局6.背景颜色 = 0XFFFFFFFF
		线性布局20.背景颜色 = 0XFFFFFFFF
		线性布局21.背景颜色 = 0XFFFFFFFF
		线性布局22.背景颜色 = 0XFFFFFFFF
		线性布局23.背景颜色 = 0XFFFFFFFF
		线性布局24.背景颜色 = 0XFFFFFFFF
		线性布局25.背景颜色 = 0XFFFFFFFF
		线性布局38.背景颜色 = 0XFFFFFFFF
		线性布局39.背景颜色 = 0XFFFFFFFF
		线性布局40.背景颜色 = 0XFFFFFFFF
		图片框1.图片资源 = 编辑器_行为编辑器_主页_资源.items
		图片框7.图片资源 = 编辑器_行为编辑器_主页_资源.entities
		图片框8.图片资源 = 编辑器_行为编辑器_主页_资源.recipes
		图片框9.图片资源 = 编辑器_行为编辑器_主页_资源.behavior_trees
		图片框10.图片资源 = 编辑器_行为编辑器_主页_资源.loot_tables
		图片框11.图片资源 = 编辑器_行为编辑器_主页_资源.spawn_rules
		图片框12.图片资源 = 编辑器_行为编辑器_主页_资源.trading
		图片框13.图片资源 = 编辑器_行为编辑器_主页_资源.features
		图片框14.图片资源 = 编辑器_行为编辑器_主页_资源.feature_rules
		图片框15.图片资源 = 编辑器_行为编辑器_主页_资源.biomes
		//图片框16.图片资源 = 编辑器_行为编辑器_主页_资源
		文本框3.字体颜色 = 0XFF000000
		文本框4.字体颜色 = 0XFF000000
		文本框12.字体颜色 = 0XFF000000
		文本框19.字体颜色 = 0XFF000000
		文本框13.字体颜色 = 0XFF000000
		文本框18.字体颜色 = 0XFF000000
		文本框14.字体颜色 = 0XFF000000
		文本框20.字体颜色 = 0XFF000000
		文本框15.字体颜色 = 0XFF000000
		文本框21.字体颜色 = 0XFF000000
		文本框16.字体颜色 = 0XFF000000
		文本框22.字体颜色 = 0XFF000000
		文本框17.字体颜色 = 0XFF000000
		文本框23.字体颜色 = 0XFF000000
		文本框24.字体颜色 = 0XFF000000
		文本框28.字体颜色 = 0XFF000000
		文本框25.字体颜色 = 0XFF000000
		文本框29.字体颜色 = 0XFF000000
		文本框26.字体颜色 = 0XFF000000
		文本框30.字体颜色 = 0XFF000000
		文本框27.字体颜色 = 0XFF000000
		文本框31.字体颜色 = 0XFF000000
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF222222
		本对象.状态栏字体黑色 = 假
		线性布局1.背景颜色 = 0XFF222222
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框5.字体颜色 = 0XFFFFFFFF
		文本框6.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框7.字体颜色 = 0XFFFFFFFF
		文本框8.字体颜色 = 0XFFFFFFFF
		文本框9.字体颜色 = 0XFFFFFFFF
		文本框10.字体颜色 = 0XFFFFFFFF
		文本框11.字体颜色 = 0XFFFFFFFF
		图片框2.图片资源 = 编辑器_行为编辑器_主页_资源.help2
		图片框3.图片资源 = 编辑器_行为编辑器_主页_资源.repair2
		图片框4.图片资源 = 编辑器_行为编辑器_主页_资源.set2
		图片框5.图片资源 = 编辑器_行为编辑器_主页_资源.clear2
		卡片布局2.卡片背景颜色 = 0XFF333333
		卡片布局3.卡片背景颜色 = 0XFF333333
		卡片布局4.卡片背景颜色 = 0XFF333333
		卡片布局5.卡片背景颜色 = 0XFF333333
		卡片布局6.卡片背景颜色 = 0XFF333333
		线性布局11.背景颜色 = 0XFF333333
		线性布局16.背景颜色 = 0XFF333333
		线性布局17.背景颜色 = 0XFF333333
		线性布局18.背景颜色 = 0XFF333333
		线性布局19.背景颜色 = 0XFF333333
		卡片布局1.卡片背景颜色 = 0XFF333333
		卡片布局7.卡片背景颜色 = 0XFF333333
		卡片布局8.卡片背景颜色 = 0XFF333333
		卡片布局9.卡片背景颜色 = 0XFF333333
		卡片布局10.卡片背景颜色 = 0XFF333333
		卡片布局11.卡片背景颜色 = 0XFF333333
		卡片布局12.卡片背景颜色 = 0XFF333333
		卡片布局13.卡片背景颜色 = 0XFF333333
		卡片布局14.卡片背景颜色 = 0XFF333333
		卡片布局15.卡片背景颜色 = 0XFF333333
		卡片布局16.卡片背景颜色 = 0XFF333333
		线性布局6.背景颜色 = 0XFF333333
		线性布局20.背景颜色 = 0XFF333333
		线性布局21.背景颜色 = 0XFF333333
		线性布局22.背景颜色 = 0XFF333333
		线性布局23.背景颜色 = 0XFF333333
		线性布局24.背景颜色 = 0XFF333333
		线性布局25.背景颜色 = 0XFF333333
		线性布局38.背景颜色 = 0XFF333333
		线性布局39.背景颜色 = 0XFF333333
		线性布局40.背景颜色 = 0XFF333333
		线性布局41.背景颜色 = 0XFF333333
	结束 方法

结束 类

类 编辑器_行为编辑器_记录列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,圆角=15,卡片阴影=0,@上外边距DP=3]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-1,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=50,高度DP=50,对齐方式=17,内边距DP=10]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度=-1,高度=-1,图片资源="../../../../资源库/图标/editor/behavior_editor/list/record.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1,上内边距DP=10,下内边距DP=10,纵向布局=真,对齐方式=8388627]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,字体大小=14,字体颜色=-16777216,内容="名称"]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局5,@左外边距DP=10,字体大小=11,字体颜色=-16738305,内容="[分类]"]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,字体大小=12,内容="时间"]])
	变量 文本框2 : 文本框

	//声明
	变量 设置_设定 : 设置_设定

	事件 编辑器_行为编辑器_记录列表 : 创建完毕()
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		线性布局2.背景颜色 = 0XFF333333
		卡片布局1.卡片背景颜色 = 0XFF333333
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类

类 编辑器_行为编辑器_主页_资源
	
	@静态
	变量 help2 : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/home/help2.xml"
	@静态
	变量 repair2 : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/home/repair2.xml"
	@静态
	变量 set2 : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/home/set2.xml"
	@静态
	变量 clear2 : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/home/clear2.xml"

	@静态
	变量 behavior_trees : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/icons2/behavior_trees.xml"
	@静态
	变量 biomes : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/icons2/biomes.xml"
	@静态
	变量 entities : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/icons2/entities.xml"
	@静态
	变量 feature_rules : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/icons2/feature_rules.xml"
	@静态
	变量 features : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/icons2/features.xml"
	@静态
	变量 items : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/icons2/items.xml"
	@静态
	变量 loot_tables : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/icons2/loot_tables.xml"
	@静态
	变量 recipes : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/icons2/recipes.xml"
	@静态
	变量 spawn_rules : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/icons2/spawn_rules.xml"
	@静态
	变量 trading : 图片资源 = "../../../../资源库/图标/editor/behavior_editor/icons2/trading.xml"

结束 类