类 编辑器_资源编辑器_字体 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1]])
	变量 自适应布局1 : 自适应布局
	@布局配置([[父布局=自适应布局1,宽度=-1,高度=-1,@横坐标比例=-9.0E-4,@纵坐标比例=-4.0E-4,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,背景颜色=-1,纵向布局=假]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=50,高度DP=50,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=25,高度DP=25,水波纹效果=真,可获取焦点=真,图片资源="../../../../资源库/图标/back/default_backicon.png"]])
	变量 退出界面 : 图片框
	@布局配置([[父布局=线性布局2,高度DP=50,对齐方式=8388627,宽度=-1]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,字体大小=20,粗体=假,@左外边距DP=10,字体颜色=-16777216,内容="字体"]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1]])
	变量 滚动布局1 : 滚动布局
	@布局配置([[父布局=滚动布局1,宽度=-1,高度=-1,内边距DP=10,纵向布局=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-2,圆角=20,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-2,纵向布局=真,背景颜色=-1]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-1,高度DP=45,对齐方式=8388627,水波纹效果=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=25,高度DP=25,@左外边距DP=10,拉伸方式=0,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/start.xml"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局7,@左外边距DP=5,字体大小=15,字体颜色=-16777216,内容="启动字体修改程序"]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-1,高度DP=45,对齐方式=8388627,水波纹效果=真]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,宽度DP=25,高度DP=25,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/install.xml"]])
	变量 图片框2 : 图片框
	@布局配置([[父布局=线性布局8,@左外边距DP=5,字体大小=15,字体颜色=-16777216,内容="安装字体修改程序"]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-1,高度DP=45,对齐方式=8388627,水波纹效果=真]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,宽度DP=25,高度DP=25,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/refresh.xml"]])
	变量 图片框3 : 图片框
	@布局配置([[父布局=线性布局9,@左外边距DP=5,字体大小=15,字体颜色=-16777216,内容="重新刷新列表"]])
	变量 文本框4 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-1,高度DP=45,对齐方式=8388627,水波纹效果=真]])
	变量 线性布局10 : 线性布局
	@布局配置([[父布局=线性布局10,宽度DP=25,高度DP=25,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/help.xml"]])
	变量 图片框4 : 图片框
	@布局配置([[父布局=线性布局10,@左外边距DP=5,字体大小=15,字体颜色=-16777216,内容="帮助"]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,圆角=20,卡片阴影=0,高度DP=300,@上外边距DP=10,背景颜色=-1]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-2,纵向布局=真,背景颜色=-1]])
	变量 线性布局11 : 线性布局
	@布局配置([[父布局=线性布局11,宽度=-1,高度=-1]])
	变量 自定义列表框1 : 自定义列表框
	@布局配置([[父布局=线性布局5,宽度=-1,圆角=20,卡片阴影=0,高度DP=100,@上外边距DP=10,背景颜色=-1]])
	变量 卡片布局3 : 卡片布局
	@布局配置([[父布局=卡片布局3,宽度=-1,高度=-2,纵向布局=真,背景颜色=-1]])
	变量 线性布局12 : 线性布局
	@布局配置([[父布局=线性布局12,宽度=-1,高度DP=50,对齐方式=8388627,水波纹效果=真]])
	变量 线性布局13 : 线性布局
	@布局配置([[父布局=线性布局13,宽度DP=25,高度DP=25,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/save.xml"]])
	变量 图片框5 : 图片框
	@布局配置([[父布局=线性布局13,@左外边距DP=5,字体大小=15,字体颜色=-16777216,内容="确定并保存"]])
	变量 文本框6 : 文本框
	@布局配置([[父布局=线性布局12,宽度=-1,高度DP=50,对齐方式=8388627,水波纹效果=真]])
	变量 线性布局14 : 线性布局
	@布局配置([[父布局=线性布局14,宽度DP=25,高度DP=25,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/exit.xml"]])
	变量 图片框6 : 图片框
	@布局配置([[父布局=线性布局14,@左外边距DP=5,字体大小=15,字体颜色=-16777216,内容="取消"]])
	变量 文本框7 : 文本框

	//声明
	变量 设置_设定 : 设置_设定
	变量 列表数组 : 文本集合
	变量 统计列表数组 : 文本集合
	变量 保存数组 : 文本集合

	//变量
	变量 list_path : 文本 = 取存储卡路径() + "/Addons_Makes/data/apps/FontGen"
	变量 list_path_help : 文本 = 取存储卡路径() + "/Addons_Makes/data/apps/FontGen.d"
	变量 apk_path : 文本 = 其他_变量.缓存目录 + "resource/fonts/FontGen.apk"
	变量 list_path_font : 文本 = ""

	事件 编辑器_资源编辑器_字体:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,滚动布局1,设置相关路径)
			结束 如果
		结束 如果
		//退出按钮事件
		事件 退出界面:被单击()
			关闭窗口()
		结束 事件
		//初始化
		如果 设置_设定.获取开关("ResourceEditorFontsCleanCache") 则
			删除之前字体()
		结束 如果
		如果 文件是否存在(apk_path) 则
		否则
			如果 写出资源文件(本对象,"data/apps/FontGen.apk",apk_path) 则
				弹出成功提示("初始化完毕！")
			否则
				弹出错误提示("初始化失败！")
			结束 如果
		结束 如果
		list_path_font = ""
		//判断list_path_font是否为空
		如果 list_path_font == "" 则
			文本框6.内容 = "你未选择任何字体文件"
		否则
			文本框6.内容 = "确定并保存"
		结束 如果
		//加载方法
		加载列表(list_path)
		提示帮助()
		//订阅事件
		订阅事件()
	结束 事件

	//删除之前生成的字体文
	@异步方法
	方法 删除之前字体()
		统计列表数组 = 文件操作.取子文件集合(list_path)
		如果 统计列表数组.长度 == 0 则
		否则
			//显示进度
			变量 加载 : DX加载
			如果 设置_设定.获取开关("NightMode") 则
				加载.主题(DX主题.暗色)
			结束 如果
			加载.内容("正在初始化中...")
			加载.显示()
			//处理任务
			等待 删除文件(list_path) 
			加载.关闭()
			加载列表(list_path,真)
		结束 如果
	结束 方法

	//提示帮助
	方法 提示帮助()
		如果 文件是否存在(list_path_help) 则
		否则
			变量 帮助对话框 : DX基础对话框
			如果 设置_设定.获取开关("NightMode") 则
				帮助对话框.主题(DX主题.暗色)
			结束 如果
			帮助对话框.标题("帮助")
			帮助对话框.内容("你需要先看帮助，才能完成下面的操作")
			帮助对话框.按钮1("查看帮助")
			帮助对话框.按钮2("退出")
			帮助对话框.可取消(假)
			帮助对话框.显示()
			//查看帮助
			事件 帮助对话框:按钮1被单击() : 逻辑型
				写出文本文件(list_path_help,"")
				切换窗口(编辑器_资源编辑器_字体_帮助)
				返回 假
			结束 事件
			//退出
			事件 帮助对话框:按钮2被单击() : 逻辑型
				关闭窗口()
				返回 假
			结束 事件
		结束 如果
	结束 方法

	/*
	窗口被重新启动时触发该事件
	*/
	事件 编辑器_资源编辑器_字体:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
		//刷新列表
		加载列表(list_path,真)
	结束 事件

	//打开字体修改程序
	事件 线性布局7:被单击()
		如果 应用操作.应用是否已安装(本对象,"com.yizy.mcaddon.fontgen") 则
			应用操作.打开应用(本对象,"com.yizy.mcaddon.fontgen")
		否则
			弹出警告提示("警告你还没有安装该程序,请安装该程序")
		结束 如果
	结束 事件
	//安装字体修改程序
	事件 线性布局8:被单击()
		变量 安装应用 : 安装应用
		安装应用.安装应用(本对象,apk_path)
	结束 事件
	//重新刷新列表
	事件 线性布局9:被单击()
		加载列表(list_path,真)
	结束 事件 
	//帮助
	事件 线性布局10:被单击()
		切换窗口(编辑器_资源编辑器_字体_帮助)
	结束 事件

	//保存
	事件 线性布局13:被单击()
		保存()
	结束 事件
	//退出
	事件 线性布局14:被单击()
		关闭窗口()
	结束 事件

	//加载列表
	方法 加载列表(路径 : 文本,刷新 : 逻辑型 = 假)
		如果 文件是否存在(路径) 则
			如果 刷新 则
				列表数组 = 文件操作.取子文件集合(路径)
				自定义列表框1.更新项目(列表数组.长度)
			否则
				事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
					变量 布局 : 编辑器_资源编辑器_字体_列表?
					如果 项目布局 == 空 则
						布局 = 创建 编辑器_资源编辑器_字体_列表
					否则
						布局 = 项目布局
					结束 如果
					//设置列表内容
					变量 文件路径 : 文本 = 列表数组[索引]
					布局.文本框1.内容 = 取文件名(文件路径)
					布局.文本框2.内容 = 文件操作.取文件修改时间(文件路径)
					//列表被单击
					事件 布局.线性布局1:被单击()
						弹出提示2(文件路径)
						文本框6.内容 = "保存，已选择：" + 取文件名(文件路径)
						list_path_font = 文件路径
					结束 事件
					返回 布局
				结束 事件
				列表数组 = 文件操作.取子文件集合(路径)
				自定义列表框1.更新项目(列表数组.长度)
			结束 如果
		否则
			写出文本文件(list_path + "/null","")
			删除文件(list_path + "/null")
			加载列表(list_path)
		结束 如果
	结束 方法

	//保存
	方法 保存()
		如果 list_path_font == "" 则
			变量 保存提示 : DX基础对话框
			//设置夜间模式
			如果 设置_设定.获取开关("NightMode") 则
				保存提示.主题(DX主题.暗色)
			结束 如果
			保存提示.标题("提示")
			保存提示.内容("你未选择列表，因此保存失败，请去生成一个，如果不会，可以在帮助中查看")
			保存提示.按钮1("帮助")
			保存提示.显示()
			事件 保存提示:按钮1被单击() : 逻辑型
				切换窗口(编辑器_资源编辑器_字体_帮助)
				返回 假
			结束 事件
		否则
			//开始执行保存操作
			如果 设置_设定.获取整数("ResourceEditorFontsSpeed") > 1000 则
				变量 提示 : DX基础对话框
				//设置夜间模式
				如果 设置_设定.获取开关("NightMode") 则
					提示.主题(DX主题.暗色)
				结束 如果
				提示.标题("提示")
				提示.内容("你的保存速度数值过高，可能速度会变慢，推荐你在设置中改低")
				提示.按钮1("继续")
				提示.可取消(假)
				提示.显示()
				事件 提示:按钮1被单击() : 逻辑型
					保存1()
					返回 假
				结束 事件
			否则
				保存1()
			结束 如果
		结束 如果
	结束 方法

	方法 保存1()
		变量 XPopup : XPopup附着弹窗
		变量 项目 : 文本[] = {"保存方案一，支持显示进度，但容易出问题","保存方案二，不支持显示进度，不容易出问题"}
		XPopup.列表项目 = 项目
		XPopup.附着组件 = 线性布局13
		XPopup.亮色状态栏(真)
		XPopup.动画(XPopup动画.平移_上进入)
		XPopup.半透明(假)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			XPopup.暗色主题(真)
		结束 如果
		XPopup.显示()
		事件 XPopup:列表被单击(索引 : 整数,文本 : 文本)
			假如 索引
				是 0
					保存2()
				是 1
					保存S()
			结束 假如
		结束 事件
	结束 方法

	变量 保存加载 : DX加载

	方法 保存2()
		开始俘获异常()
		//变量+初始化
		变量 项目名称 : 文本 = 其他_其他.读缓存("ProjectName")
		变量 保存数组1 : 文本 = list_path_font + "/font"
		变量 新保存位置 : 文本 = 其他_变量.项目目录 + 项目名称 + "/resource/font/"
		保存数组 = 文件操作.取子文件集合(保存数组1)
		//显示加载
		如果 设置_设定.获取开关("NightMode") 则
			保存加载.主题(DX主题.暗色)
		结束 如果
		保存加载.内容("正在处理中...")
		保存加载.显示()
		//开始
		提交到新线程运行()
		循环(i, 0, 保存数组.长度)
			延时(设置_设定.获取整数("ResourceEditorFontsSpeed"))
			变量 font文件路径 : 文本 = 保存数组[i]
			变量 输出文件 : 文本 = 新保存位置 + 取文件名(font文件路径)
			提交到主线程运行(本对象)
			保存加载.内容("正在处理保存：" + 取文件名(font文件路径))
			复制文件(font文件路径,输出文件)
			结束提交到主线程()
		结束 循环
		保存加载.关闭()
		项目记录(新保存位置)
		弹出成功提示("字体保存完毕！")
		关闭窗口()
		提示("提示","字体保存完毕！")
		结束提交到新线程()
		俘获所有异常()
		保存加载.关闭()
		提示("异常",取俘获异常().取异常信息())
		结束俘获异常()
	结束 方法

	@异步方法
	方法 保存S()
		//变量
		变量 项目名称 : 文本 = 其他_其他.读缓存("ProjectName")
		变量 保存数组1 : 文本 = list_path_font + "/font"
		变量 新保存位置 : 文本 = 其他_变量.项目目录 + 项目名称 + "/resource/font/"
		//显示加载
		如果 设置_设定.获取开关("NightMode") 则
			保存加载.主题(DX主题.暗色)
		结束 如果
		保存加载.内容("正在处理中...")
		保存加载.显示()
		//开始执行任务
		等待 延时(500)
		保存加载.内容("正在打包复制...")
		等待 ZIP压缩(保存数组1,list_path_font + "/font.zip")
		保存加载.内容("正在复制...")
		等待 ZIP解压(list_path_font + "/font.zip",新保存位置)
		保存加载.内容("正在清理缓存...")
		等待 删除文件(list_path_font + "/font.zip")
		如果 文件是否存在(list_path_font + "/font.zip") 则
			提示("异常"，"无法正常清理缓存....")
			保存加载.内容("无法正常清理缓存...")
		否则
			保存加载.内容("保存并打包结束，即将退出")
			等待 延时(500)
			项目记录(新保存位置)
			保存加载.关闭()
			关闭窗口()
			提示("提示","字体保存完毕！")
		结束 如果
	结束 方法

	方法 提示(标题 : 文本,内容 : 文本)
		变量 提示 : DX基础对话框
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			提示.主题(DX主题.暗色)
		结束 如果
		提示.标题(标题)
		提示.内容(内容)
		提示.按钮1("关闭")
		提示.显示()
	结束 方法

	//项目记录
	方法 项目记录(路径 : 文本)
		//项目记录
		变量 模块_项目 : 模块_项目
		模块_项目.初始化()
		模块_项目.assets图标 = "icon/item/font.png"
		模块_项目.名称 = "字体"
		模块_项目.标识符 = 取文件前缀名(路径)
		模块_项目.描述 = "这个是资源包字体"
		模块_项目.种类 = 模块_项目种类.资源包
		模块_项目.分类 = "font"
		模块_项目.路径 = 路径
		模块_项目.保存()
	结束 方法

	//设置夜间模式
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		退出界面.图片资源 = 编辑器_资源编辑器_字体_资源.白色返回图标
		文本框1.字体颜色 = 0XFFFFFFFF
		线性布局5.背景颜色 = 0XFF222222
		滚动布局1.背景颜色 = 0XFF222222
		卡片布局1.卡片背景颜色 = 0XFF333333
		卡片布局2.卡片背景颜色 = 0XFF333333
		卡片布局3.卡片背景颜色 = 0XFF333333
		线性布局6.背景颜色 = 0XFF333333
		线性布局11.背景颜色 = 0XFF333333
		线性布局12.背景颜色 = 0XFF333333
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
		文本框4.字体颜色 = 0XFFFFFFFF
		文本框5.字体颜色 = 0XFFFFFFFF
		文本框6.字体颜色 = 0XFFFFFFFF
		文本框7.字体颜色 = 0XFFFFFFFF
		图片框1.图片资源 = 编辑器_资源编辑器_字体_资源.白色启动图标
		图片框2.图片资源 = 编辑器_资源编辑器_字体_资源.白色安装图标
		图片框3.图片资源 = 编辑器_资源编辑器_字体_资源.白色刷新图标
		图片框4.图片资源 = 编辑器_资源编辑器_字体_资源.白色帮助图标
		图片框5.图片资源 = 编辑器_资源编辑器_字体_资源.白色保存图标
		图片框6.图片资源 = 编辑器_资源编辑器_字体_资源.白色退出图标
	结束 方法

结束 类

类 编辑器_资源编辑器_字体_帮助 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1]])
	变量 自适应布局1 : 自适应布局
	@布局配置([[父布局=自适应布局1,宽度=-1,高度=-1,@横坐标比例=-9.0E-4,@纵坐标比例=-4.0E-4,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,背景颜色=-1,纵向布局=假]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=50,高度DP=50,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=25,高度DP=25,水波纹效果=真,可获取焦点=真,图片资源="../../../../资源库/图标/back/default_backicon.png"]])
	变量 退出界面 : 图片框
	@布局配置([[父布局=线性布局2,高度DP=50,对齐方式=8388627,宽度=-1]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,字体大小=20,粗体=假,@左外边距DP=10,字体颜色=-16777216,内容="帮助"]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1]])
	变量 滚动布局1 : 滚动布局
	@布局配置([[父布局=滚动布局1,宽度=-1,高度=-1,内边距DP=10,纵向布局=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,内容="第1步",粗体=真,字体颜色=-16777216,字体大小=20]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=500,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/helps/steps1.jpg"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局5,内容="第2步",粗体=真,字体颜色=-16777216,字体大小=20,@上外边距DP=10]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=500,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/helps/steps2.jpg"]])
	变量 图片框2 : 图片框
	@布局配置([[父布局=线性布局5,内容="第3步",粗体=真,字体颜色=-16777216,字体大小=20]])
	变量 文本框4 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=500,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/helps/steps3.jpg"]])
	变量 图片框3 : 图片框
	@布局配置([[父布局=线性布局5,内容="第4步",粗体=真,字体颜色=-16777216,字体大小=20]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=500,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/helps/steps4.jpg"]])
	变量 图片框4 : 图片框
	@布局配置([[父布局=线性布局5,内容="第5步",粗体=真,字体颜色=-16777216,字体大小=20]])
	变量 文本框6 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=500,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/helps/steps5.jpg"]])
	变量 图片框5 : 图片框
	@布局配置([[父布局=线性布局5,内容="第6步",粗体=真,字体颜色=-16777216,字体大小=20]])
	变量 文本框7 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=500,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/helps/steps6.jpg"]])
	变量 图片框6 : 图片框
	@布局配置([[父布局=线性布局5,内容="第7步",粗体=真,字体颜色=-16777216,字体大小=20]])
	变量 文本框8 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=500,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/helps/steps7.jpg"]])
	变量 图片框7 : 图片框
	@布局配置([[父布局=线性布局5,内容="第8步",粗体=真,字体颜色=-16777216,字体大小=20]])
	变量 文本框9 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=500,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/helps/steps8.jpg"]])
	变量 图片框8 : 图片框

	//声明
	变量 设置_设定 : 设置_设定


	事件 编辑器_资源编辑器_字体_帮助:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		事件 退出界面:被单击()
			关闭窗口()
		结束 事件
		//生成
	结束 事件


	//设置夜间模式
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		退出界面.图片资源 = 编辑器_资源编辑器_字体_资源.白色返回图标
		文本框1.字体颜色 = 0XFFFFFFFF
		线性布局5.背景颜色 = 0XFF222222
		滚动布局1.背景颜色 = 0XFF222222
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
		文本框4.字体颜色 = 0XFFFFFFFF
		文本框5.字体颜色 = 0XFFFFFFFF
		文本框6.字体颜色 = 0XFFFFFFFF
		文本框7.字体颜色 = 0XFFFFFFFF
		文本框8.字体颜色 = 0XFFFFFFFF
		文本框9.字体颜色 = 0XFFFFFFFF
	结束 方法


结束 类


类 编辑器_资源编辑器_字体_列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,水波纹效果=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,背景颜色=-1,水波纹效果=真]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388627]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=25,高度DP=25,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/fonts/list/fonts.xml"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,@左外边距DP=5,字体颜色=-16777216,字体大小=15]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局2,@左外边距DP=5,字体大小=12]])
	变量 文本框2 : 文本框

	//声明
	变量 设置_设定 : 设置_设定

	事件 编辑器_资源编辑器_字体_列表:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置夜间模式
	方法 设置夜间模式()
		图片框1.图片资源 = 编辑器_资源编辑器_字体_资源.白色列表图标
		相对布局1.背景颜色 = 0XFF333333
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类

类 编辑器_资源编辑器_字体_资源

	@静态
	变量 白色返回图标 : 图片资源 =  "../../../../资源库/图标/back/default_backicon2.png"

	@静态
	变量 白色菜单图标 : 图片资源 =  "../../../../资源库/图标/editor/resource_editor/menu2.png"

	@静态
	变量 白色启动图标 : 图片资源 =  "../../../../资源库/图标/editor/resource_editor/fonts/start2.xml"

	@静态
	变量 白色安装图标 : 图片资源 =  "../../../../资源库/图标/editor/resource_editor/fonts/install2.xml"

	@静态
	变量 白色帮助图标 : 图片资源 =  "../../../../资源库/图标/editor/resource_editor/fonts/help2.xml"

	@静态
	变量 白色刷新图标 : 图片资源 =  "../../../../资源库/图标/editor/resource_editor/fonts/refresh2.xml"

	@静态
	变量 白色保存图标 : 图片资源 =  "../../../../资源库/图标/editor/resource_editor/fonts/save2.xml"

	@静态
	变量 白色退出图标 : 图片资源 =  "../../../../资源库/图标/editor/resource_editor/fonts/exit2.xml"

	@静态
	变量 白色列表图标 : 图片资源 =  "../../../../资源库/图标/editor/resource_editor/fonts/list/fonts2.xml"

结束 类