类 编辑器_资源编辑器_主页 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=80,对齐方式=8388627]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=20,字体大小=19,内容="资源包编辑器",字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,@左外边距DP=20,字体大小=16,内容="贴图",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局3,宽度=-1,高度DP=250]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,@左外边距DP=20,@右外边距DP=20,列数=4,始终显示快速滚动条=假,显示滑块条=假,列宽=0]])
	变量 自定义宫格列表框1 : 自定义宫格列表框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,@左外边距DP=20,字体大小=16,内容="其他",字体颜色=-16777216]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-1,高度=-1,@左外边距DP=20,@右外边距DP=20,@下外边距DP=10]])
	变量 滚动布局1 : 滚动布局
	@布局配置([[父布局=滚动布局1,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局0 : 线性布局
	@布局配置([[父布局=线性布局0,宽度=-1,高度=-2,圆角=20,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-2,背景颜色=-1,纵向布局=真,水波纹效果=真]])
	变量 线性布局12 : 线性布局
	@布局配置([[父布局=线性布局12,宽度=-1,高度DP=45,对齐方式=8388627]])
	变量 线性布局13 : 线性布局
	@布局配置([[父布局=线性布局13,宽度DP=30,高度DP=30,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/icons/texts.png"]])
	变量 图片框2 : 图片框
	@布局配置([[父布局=线性布局13,字体颜色=-16777216,字体大小=16,@左外边距DP=5,内容="语言"]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局12,宽度=-1,高度=-2,对齐方式=8388627]])
	变量 线性布局10 : 线性布局
	@布局配置([[父布局=线性布局10,@左外边距DP=10,@下外边距DP=10,@右外边距DP=10,@上外边距DP=5,内容="是一项允许玩家自由更换游戏使用的语言的功能"]])
	变量 文本框6 : 文本框
	@布局配置([[父布局=线性布局0,宽度=-1,高度=-2,圆角=20,卡片阴影=0,@上外边距DP=10]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-2,背景颜色=-1,纵向布局=真,水波纹效果=真]])
	变量 线性布局14 : 线性布局
	@布局配置([[父布局=线性布局14,宽度=-1,高度DP=45,对齐方式=8388627]])
	变量 线性布局15 : 线性布局
	@布局配置([[父布局=线性布局15,宽度DP=30,高度DP=30,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/icons/sounds.png"]])
	变量 图片框3 : 图片框
	@布局配置([[父布局=线性布局15,@左外边距DP=5,字体颜色=-16777216,字体大小=16,内容="声音"]])
	变量 文本框7 : 文本框
	@布局配置([[父布局=线性布局14,宽度=-1,高度=-2,对齐方式=8388627]])
	变量 线性布局16 : 线性布局
	@布局配置([[父布局=线性布局16,@左外边距DP=10,@下外边距DP=10,@右外边距DP=10,@上外边距DP=5,内容="可以用于修改原版音效音乐"]])
	变量 文本框8 : 文本框
	@布局配置([[父布局=线性布局0,宽度=-1,高度=-2,圆角=20,卡片阴影=0,@上外边距DP=10]])
	变量 卡片布局3 : 卡片布局
	@布局配置([[父布局=卡片布局3,宽度=-1,高度=-2,背景颜色=-1,纵向布局=真,水波纹效果=真]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,宽度=-1,高度DP=45,对齐方式=8388627]])
	变量 线性布局11 : 线性布局
	@布局配置([[父布局=线性布局11,宽度DP=30,高度DP=30,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/icons/custom_sounds.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局11,@左外边距DP=5,字体颜色=-16777216,字体大小=16,内容="自定义音乐"]])
	变量 文本框4 : 文本框
	@布局配置([[父布局=线性布局8,宽度=-1,高度=-2,对齐方式=8388627]])
	变量 线性布局19 : 线性布局
	@布局配置([[父布局=线性布局19,@左外边距DP=10,@下外边距DP=10,@右外边距DP=10,@上外边距DP=5,内容="使用自定义音乐，在游戏中播放"]])
	变量 文本框10 : 文本框
	@布局配置([[父布局=线性布局0,宽度=-1,高度=-2,圆角=20,卡片阴影=0,@上外边距DP=10]])
	变量 卡片布局4 : 卡片布局
	@布局配置([[父布局=卡片布局4,宽度=-1,高度=-2,背景颜色=-1,纵向布局=真,水波纹效果=真]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=45,对齐方式=8388627]])
	变量 线性布局17 : 线性布局
	@布局配置([[父布局=线性布局17,宽度DP=30,高度DP=30,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/icons/fonts.png"]])
	变量 图片框4 : 图片框
	@布局配置([[父布局=线性布局17,@左外边距DP=5,字体颜色=-16777216,字体大小=16,内容="字体"]])
	变量 文本框9 : 文本框
	@布局配置([[父布局=线性布局9,宽度=-1,高度=-2,对齐方式=8388627]])
	变量 线性布局18 : 线性布局
	@布局配置([[父布局=线性布局18,@左外边距DP=10,@下外边距DP=10,@右外边距DP=10,@上外边距DP=5,内容="是游戏内的文字，字体效果"]])
	变量 文本框11 : 文本框
	@布局配置([[父布局=线性布局0,宽度=-1,高度=-2,圆角=20,卡片阴影=0,@上外边距DP=10]])
	变量 卡片布局5 : 卡片布局
	@布局配置([[父布局=卡片布局5,宽度=-1,高度=-2,背景颜色=-1,纵向布局=真,水波纹效果=真]])
	变量 线性布局20 : 线性布局
	@布局配置([[父布局=线性布局20,宽度=-1,高度DP=45,对齐方式=8388627]])
	变量 线性布局21 : 线性布局
	@布局配置([[父布局=线性布局21,宽度DP=30,高度DP=30,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/icons/items.png"]])
	变量 图片框5 : 图片框
	@布局配置([[父布局=线性布局21,@左外边距DP=5,字体颜色=-16777216,字体大小=16,内容="物品"]])
	变量 文本框12 : 文本框
	@布局配置([[父布局=线性布局20,宽度=-1,高度=-2,对齐方式=8388627]])
	变量 线性布局22 : 线性布局
	@布局配置([[父布局=线性布局22,@左外边距DP=10,@下外边距DP=10,@右外边距DP=10,@上外边距DP=5,内容="可以修改食物的使用动画，包括它的分类"]])
	变量 文本框13 : 文本框
	@布局配置([[父布局=线性布局0,宽度=-1,高度=-2,圆角=20,卡片阴影=0,@上外边距DP=10]])
	变量 卡片布局6 : 卡片布局
	@布局配置([[父布局=卡片布局6,宽度=-1,高度=-2,背景颜色=-1,纵向布局=真,水波纹效果=真]])
	变量 线性布局23 : 线性布局
	@布局配置([[父布局=线性布局23,宽度=-1,高度DP=45,对齐方式=8388627]])
	变量 线性布局24 : 线性布局
	@布局配置([[父布局=线性布局24,宽度DP=30,高度DP=30,@左外边距DP=10,图片资源="../../../../资源库/图标/editor/resource_editor/icons/fogs.png"]])
	变量 图片框6 : 图片框
	@布局配置([[父布局=线性布局24,@左外边距DP=5,字体颜色=-16777216,字体大小=16,内容="迷雾"]])
	变量 文本框14 : 文本框
	@布局配置([[父布局=线性布局23,宽度=-1,高度=-2,对齐方式=8388627]])
	变量 线性布局25 : 线性布局
	@布局配置([[父布局=线性布局25,@左外边距DP=10,@下外边距DP=10,@右外边距DP=10,@上外边距DP=5,内容="修改迷雾效果，低版本游戏可能没有效果"]])
	变量 文本框15 : 文本框

	//声明
	变量 设置_设定 : 设置_设定

	事件 编辑器_资源编辑器_主页:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0X00FFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局1,设置相关路径)
			结束 如果
		结束 如果
		//加载方法
		如果 文件是否存在(其他_变量.数据目录 + "resource/textures/textures") 则
		否则
			初始化()
		结束 如果
		材质选择列表()
		功能栏其他功能()
		//订阅事件
		订阅事件()
	结束 事件

	//窗口被重新启动时触发该事件
	事件 编辑器_资源编辑器_主页:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF222222
		本对象.状态栏字体黑色 = 假
		线性布局1.背景颜色 = 0XFF222222
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
		卡片布局1.卡片背景颜色 = 0XFF333333
		线性布局12.背景颜色 = 0XFF333333
		文本框5.字体颜色 = 0XFFFFFFFF
		文本框6.字体颜色 = 0XFFFFFFFF
		卡片布局2.卡片背景颜色 = 0XFF333333
		线性布局14.背景颜色 = 0XFF333333
		文本框7.字体颜色 = 0XFFFFFFFF
		文本框8.字体颜色 = 0XFFFFFFFF
		卡片布局3.卡片背景颜色 = 0XFF333333
		线性布局8.背景颜色 = 0XFF333333
		文本框4.字体颜色 = 0XFFFFFFFF
		文本框10.字体颜色 = 0XFFFFFFFF
		卡片布局4.卡片背景颜色 = 0XFF333333
		线性布局9.背景颜色 = 0XFF333333
		文本框9.字体颜色 = 0XFFFFFFFF
		文本框11.字体颜色 = 0XFFFFFFFF
		卡片布局5.卡片背景颜色 = 0XFF333333
		线性布局20.背景颜色 = 0XFF333333
		文本框12.字体颜色 = 0XFFFFFFFF
		文本框13.字体颜色 = 0XFFFFFFFF
		卡片布局6.卡片背景颜色 = 0XFF333333
		线性布局23.背景颜色 = 0XFF333333
		文本框14.字体颜色 = 0XFFFFFFFF
		文本框15.字体颜色 = 0XFFFFFFFF
	结束 方法

	变量 加载对话框 : DX加载
	//初始化
	@异步方法
	方法 初始化()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			加载对话框.主题(DX主题.暗色)
		否则
			加载对话框.主题(DX主题.自动)
		结束 如果
		加载对话框.显示()
		加载对话框.内容("预处理中...")
		等待 延时(500)
		//写出文件
		加载对话框.内容("正在写出blocks.zip")
		等待 写出资源文件(本对象,"resource/textures/blocks.zip",其他_变量.数据目录 + "resource/textures/blocks.zip")
		加载对话框.内容("正在写出items.zip")
		等待 写出资源文件(本对象,"resource/textures/items.zip",其他_变量.数据目录 + "resource/textures/items.zip")
		加载对话框.内容("正在写出gui.zip")
		等待 写出资源文件(本对象,"resource/textures/gui.zip",其他_变量.数据目录 + "resource/textures/gui.zip")
		加载对话框.内容("正在写出ui.zip")
		等待 写出资源文件(本对象,"resource/textures/ui.zip",其他_变量.数据目录 + "resource/textures/ui.zip")
		加载对话框.内容("正在写出colormap.zip")
		等待 写出资源文件(本对象,"resource/textures/colormap.zip",其他_变量.数据目录 + "resource/textures/colormap.zip")
		加载对话框.内容("正在写出environment.zip")
		等待 写出资源文件(本对象,"resource/textures/environment.zip",其他_变量.数据目录 + "resource/textures/environment.zip")
		加载对话框.内容("正在写出map.zip")
		等待 写出资源文件(本对象,"resource/textures/map.zip",其他_变量.数据目录 + "resource/textures/map.zip")
		加载对话框.内容("正在写出misc.zip")
		等待 写出资源文件(本对象,"resource/textures/misc.zip",其他_变量.数据目录 + "resource/textures/misc.zip")
		加载对话框.内容("正在写出painting.zip")
		等待 写出资源文件(本对象,"resource/textures/painting.zip",其他_变量.数据目录 + "resource/textures/painting.zip")
		加载对话框.内容("正在写出particle.zip")
		等待 写出资源文件(本对象,"resource/textures/particle.zip",其他_变量.数据目录 + "resource/textures/particle.zip")
		加载对话框.内容("正在写出entity.zip")
		等待 写出资源文件(本对象,"resource/textures/entity.zip",其他_变量.数据目录 + "resource/textures/entity.zip")
		加载对话框.内容("正在写出item.zip")
		等待 写出资源文件(本对象,"resource/textures/item.zip",其他_变量.数据目录 + "resource/textures/item.zip")
		加载对话框.内容("正在写出models.zip")
		等待 写出资源文件(本对象,"resource/textures/models.zip",其他_变量.数据目录 + "resource/textures/models.zip")
		加载对话框.内容("正在写出persona_thumbnails.zip")
		等待 写出资源文件(本对象,"resource/textures/persona_thumbnails.zip",其他_变量.数据目录 + "resource/textures/persona_thumbnails.zip")
		加载对话框.内容("正在写出trims.zip")
		等待 写出资源文件(本对象,"resource/textures/trims.zip",其他_变量.数据目录 + "resource/textures/trims.zip")
		//开始解压文件
		加载对话框.内容("正在准备解压程序中...")
		等待 延时(1000)
		加载对话框.内容("开始解压blocks.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/blocks.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压items.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/items.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压gui.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/gui.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压ui.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/ui.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压colormap.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/colormap.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压environment.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/environment.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压map.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/map.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压misc.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/misc.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压particle.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/particle.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压painting.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/painting.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压entity.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/entity.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压item.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/item.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压models.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/models.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压persona_thumbnails.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/persona_thumbnails.zip",其他_变量.数据目录 + "resource/textures")
		加载对话框.内容("开始解压trims.zip")
		等待 ZIP解压(其他_变量.数据目录 + "resource/textures/trims.zip",其他_变量.数据目录 + "resource/textures")
		//下载部分资源
		加载对话框.内容("缓冲中，等待2ms")
		等待 延时(200)
		//写出完成文件,防止重复解压和下载
		加载对话框.内容("开始写出textures文件")
		等待 写出文本文件(其他_变量.数据目录 + "resource/textures/textures","")
		//提示
		加载对话框.内容("初始化完毕!")
		//关闭加载对话框
		加载对话框.关闭()
	结束 方法

	//加载材质选择列表
	方法 材质选择列表()
		变量 JSON列表数据:JSON对象 = 读入资源文件(本对象,"editor/resource_editor/texture_selection_list.json")
		变量 JSON列表信息组 :JSON数组 = JSON列表数据["list"]
		变量 JSON列表列表 :JSON对象
		变量 JSON列表数据S : 集合
		//循环
		循环(i,,JSON列表信息组.长度)
			JSON列表列表 = JSON列表信息组.取JSON对象(i)
			JSON列表数据S.添加成员(JSON列表列表.取文本("id"))
		结束 循环
		//更新列表框
		自定义宫格列表框1.更新项目(JSON列表信息组.长度)
		//加载列表
		事件 自定义宫格列表框1:加载布局(索引 : 整数, 项目布局 : 组件容器) : 组件容器
			变量 布局 : 编辑器_资源编辑器_主页列表?
			变量 我的布局 : 编辑器_资源编辑器_主页列表
			如果 项目布局 == 空
				布局 = 我的布局
			否则
				布局 = 项目布局
			结束 如果
			变量 JSON列表信息组S : JSON对象 = JSON列表信息组[索引]
			//设置图标
			如果 JSON列表信息组S["id"].到文本() == "blocks" 则
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.blocks
			否则 JSON列表信息组S["id"].到文本() == "colormap"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.colormap
			否则 JSON列表信息组S["id"].到文本() == "entity"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.entity
			否则 JSON列表信息组S["id"].到文本() == "environment"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.environment		
			否则 JSON列表信息组S["id"].到文本() == "gui"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.gui
			否则 JSON列表信息组S["id"].到文本() == "item"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.item
			否则 JSON列表信息组S["id"].到文本() == "items"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.items
			否则 JSON列表信息组S["id"].到文本() == "map"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.map
			否则 JSON列表信息组S["id"].到文本() == "misc"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.misc
			否则 JSON列表信息组S["id"].到文本() == "models"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.models
			否则 JSON列表信息组S["id"].到文本() == "painting"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.painting
			否则 JSON列表信息组S["id"].到文本() == "persona_thumbnails"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.persona_thumbnails
			否则 JSON列表信息组S["id"].到文本() == "trims"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.trims
			否则 JSON列表信息组S["id"].到文本() == "ui"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.ui
			否则 JSON列表信息组S["id"].到文本() == "particle"
				布局.图片框1.图片资源 = 编辑器_资源编辑器_主页资源.particle
			结束 如果
			//设置内容
			布局.文本框1.内容 = JSON列表信息组S["name"].到文本()
			布局.文本框2.内容 = JSON列表信息组S["id"].到文本()
			布局.文本框3.内容 = JSON列表信息组S["url"].到文本()
			//列表被单击
			事件 布局.线性布局2:被单击()
				变量 分类路径 : 文本 = 其他_变量.数据目录 + "resource/textures/" + 布局.文本框2.内容
				其他_其他.写缓存("resource_editor_textures_path",分类路径)
				其他_其他.写缓存("resource_editor_textures_name",布局.文本框1.内容)
				其他_其他.写缓存("resource_editor_textures_id",布局.文本框2.内容)
				切换窗口(编辑器_资源编辑器_纹理)
			结束 事件
			返回 布局
		结束 事件
	结束 方法

	//下方功能栏其他功能
	方法 功能栏其他功能()
		//语言
		事件 线性布局12:被单击()
			切换窗口(编辑器_资源编辑器_语言)
		结束 事件
		//声音
		事件 线性布局14:被单击()
			切换窗口(编辑器_资源编辑器_声音)
		结束 事件
		//自定义声音
		事件 线性布局8:被单击()
			切换窗口(编辑器_资源编辑器_自定义声音)
		结束 事件
		//字体
		事件 线性布局9:被单击()
			切换窗口(编辑器_资源编辑器_字体)
		结束 事件
		//物品
		事件 线性布局20:被单击()
			切换窗口(编辑器_资源编辑器_物品)
		结束 事件
		//迷雾
		事件 线性布局23:被单击()
			切换窗口(编辑器_资源编辑器_迷雾)
		结束 事件
	结束 方法

结束 类


类 编辑器_资源编辑器_主页列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,左内边距DP=5,右内边距DP=5,下内边距=0,下内边距DP=5,上内边距DP=5]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=70,卡片阴影=0,圆角=30,@右外边距DP=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-1,对齐方式=17,纵向布局=真,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=35,高度DP=35]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,@上外边距DP=3,字体颜色=-16777216,字体大小=15,对齐方式=17]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局2,对齐方式=17,字体大小=12,可视=假]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局2,对齐方式=17,字体大小=12,可视=假]])
	变量 文本框3 : 文本框

	//声明
	变量 设置_设定 : 设置_设定

	事件 编辑器_资源编辑器_主页列表:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
		卡片布局1.卡片背景颜色 = 0XFF333333
		线性布局2.背景颜色 = 0XFF333333
	结束 方法

结束 类


类 编辑器_资源编辑器_主页资源

	@静态
	变量 blocks : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/blocks.png"

	@静态
	变量 colormap : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/colormap.png"

	@静态
	变量 entity : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/entity.png"

	@静态
	变量 environment : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/environment.png"

	@静态
	变量 gui : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/gui.png"

	@静态
	变量 item : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/item.png"

	@静态
	变量 items : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/items.png"

	@静态
	变量 map : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/map.png"

	@静态
	变量 misc : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/misc.png"

	@静态
	变量 models : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/models.png"

	@静态
	变量 painting : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/painting.png"

	@静态
	变量 persona_thumbnails : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/persona_thumbnails.png"

	@静态
	变量 trims : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/trims.png"

	@静态
	变量 ui : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/ui.png"

	@静态
	变量 particle : 图片资源 = "../../../../资源库/图标/editor/resource_editor/icon/particle.png"

结束 类