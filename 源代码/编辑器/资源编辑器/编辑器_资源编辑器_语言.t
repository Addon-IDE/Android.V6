类 编辑器_资源编辑器_语言 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1]])
	变量 自适应布局1 : 自适应布局
	@布局配置([[父布局=自适应布局1,宽度=-1,高度=-1,@横坐标比例=-9.0E-4,@纵坐标比例=-4.0E-4,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,背景颜色=-1,纵向布局=假]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=50,高度DP=50,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/back/default_backicon.png",水波纹效果=真,可获取焦点=真]])
	变量 退出界面 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388627,宽度=-1]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,字体大小=20,粗体=假,@左外边距DP=10,字体颜色=-16777216,可视=真,内容="语言"]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-1,@左外边距DP=10,@右外边距DP=50,高度=-1,背景颜色=-1,提示文本="搜索文件名称",内容="",左内边距DP=5,右内边距DP=5,字体大小=17,可视=假]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388629,宽度=-1]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度DP=50,高度DP=50,对齐方式=17,水波纹效果=真,纵向布局=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/editor/resource_editor/menu.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-1,分割线高度=0]])
	变量 自定义列表框1 : 自定义列表框

	//声明
	变量 设置_设定 : 设置_设定
	变量 列表集合 : 文本集合
	变量 结束集合 : 文本集合
	变量 文件选择器 : 文件选择器
	变量 语言修改新建最终结果 : 文本 = "zh_CN"

	事件 编辑器_资源编辑器_语言:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局5,设置相关路径)
			结束 如果
		结束 如果
		//退出按钮事件
		事件 退出界面:被单击()
			关闭窗口()
		结束 事件
		//加载列表
		变量 项目的路径 : 文本 = 其他_变量.项目目录 + 其他_其他.读缓存("ProjectName") + "/resource/texts/"
		如果 文件是否存在(项目的路径) 则
			加载列表(项目的路径)
		否则
			写出文本文件(项目的路径 + "null","")
			删除文件(项目的路径 + "null")
			加载列表(项目的路径)
		结束 如果
		//加载方法
		菜单()
		//订阅事件
		订阅事件()
	结束 事件

	//窗口被重新启动时触发该事件
	事件 编辑器_资源编辑器_语言:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
		//刷新
		变量 项目的路径 : 文本 = 其他_变量.项目目录 + 其他_其他.读缓存("ProjectName") + "/resource/texts/"
		加载列表(项目的路径,真)
	结束 事件

	//获得返回数据
	事件 编辑器_资源编辑器_语言:获得返回数据(请求码 : 整数,结果码 : 整数,数据 : 启动信息)
		假如 请求码
			是 1
				变量 新的文件路径 : 文本 = 文件选择器.解析文件地址(本对象,数据)
				变量 项目的路径 : 文本 = 其他_变量.项目目录 + 其他_其他.读缓存("ProjectName") + "/resource/texts/"
				变量 文件名 : 文本 = 语言修改新建最终结果 + ".lang"
				如果 取文件后缀名(新的文件路径).到小写() == "lang" 则
					如果 文件是否存在(项目的路径 + 取文件名(新的文件路径)) 则
						弹出错误提示("导入失败，列表中已有相同的语言文件")
					否则
						如果 复制文件(新的文件路径,项目的路径 + 取文件名(新的文件路径)) 则
							弹出成功提示("导入成功")
							加载列表(项目的路径,真)
							项目记录(项目的路径 + 取文件名(新的文件路径))
						否则
							弹出错误提示("导入失败")
						结束 如果
					结束 如果
				否则
					弹出错误提示("导入失败，请选择lang格式的文件")
				结束 如果
		结束 假如
	结束 事件

	//加载主页列表
	方法 加载列表(路径 : 文本,刷新 : 逻辑型 = 假)
		如果 刷新 则
			列表集合 = 文件操作.取子文件集合(路径)
			自定义列表框1.更新项目(列表集合.长度)
		否则
			事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
				变量 布局 : 编辑器_资源编辑器_语言_列表?
				如果 项目布局 == 空 则
					布局 = 创建 编辑器_资源编辑器_语言_列表
				否则
					布局 = 项目布局
				结束 如果
				//显示到列表
				变量 文件路径 : 文本 = 列表集合[索引]
				//显示名称
				布局.文本框1.内容 = 取文件名(文件路径)
				//显示描述
				布局.文本框2.内容 = 读取语言文件名(文件路径)
				//路径
				布局.文本框3.内容 = 文件路径
				//列表被点击
				事件 布局.线性布局2:被单击()
					如果 设置_设定.获取整数("ResourceEditorTextsOpenMode") == 0 则
						变量 XPopup : XPopup附着弹窗
						变量 项目 : 文本[] = {"列表编辑模式","代码编辑模式"}
						XPopup.列表项目 = 项目
						XPopup.附着组件 = 布局.线性布局2
						XPopup.宽度(500)
						XPopup.亮色状态栏(真)
						XPopup.动画(XPopup动画.滑动_上)
						XPopup.半透明(假)
						//设置夜间模式
						如果 设置_设定.获取开关("NightMode") 则
							XPopup.暗色主题(真)
						结束 如果
						XPopup.显示()
						//选项被单击
						事件 XPopup:列表被单击(索引 : 整数,文本 : 文本)
							假如 索引
								是 0
									其他_其他.写缓存("resource_editor_texts_path",布局.文本框3.内容)
									切换窗口(编辑器_资源编辑器_语言_列表编辑)
								是 1
									其他_其他.写缓存("resource_editor_texts_path",布局.文本框3.内容)
									切换窗口(编辑器_资源编辑器_语言_代码编辑)
							结束 假如
						结束 事件
					否则 设置_设定.获取整数("ResourceEditorTextsOpenMode") == 1
						其他_其他.写缓存("resource_editor_texts_path",布局.文本框3.内容)
						切换窗口(编辑器_资源编辑器_语言_列表编辑)
					否则 设置_设定.获取整数("ResourceEditorTextsOpenMode") == 2
						其他_其他.写缓存("resource_editor_texts_path",布局.文本框3.内容)
						切换窗口(编辑器_资源编辑器_语言_代码编辑)
					结束 如果
				结束 事件
				//列表被长按
				事件 布局.线性布局2:被长按()
					变量 XPopup : XPopup附着弹窗
					变量 项目 : 文本[] = {"删除"}
					XPopup.列表项目 = 项目
					XPopup.附着组件 = 布局.线性布局2
					XPopup.宽度(500)
					XPopup.动画(XPopup动画.滑动_上)
					XPopup.半透明(假)
					XPopup.亮色状态栏(真)
					//设置夜间模式
					如果 设置_设定.获取开关("NightMode") 则
						XPopup.暗色主题(真)
					结束 如果
					XPopup.显示()
					//选项被单击
					事件 XPopup:列表被单击(索引 : 整数,文本 : 文本)
						假如 索引
							是 0
								变量 删除对话框 : XPopup对话弹窗
								删除对话框.标题 = "提示"
								删除对话框.内容 = "是否删除这个文件" + 布局.文本框1.内容
								如果 设置_设定.获取开关("NightMode") 则
									删除对话框.暗色主题(真)
								结束 如果
								删除对话框.显示()
								事件 删除对话框:确定()
									变量 项目的路径 : 文本 = 其他_变量.项目目录 + 其他_其他.读缓存("ProjectName") + "/resource/texts/"
									删除文件(文件路径)
									加载列表(项目的路径,真)
								结束 事件
						结束 假如
					结束 事件
				结束 事件
				返回 布局
			结束 事件
			//转换为集合
			列表集合 = 文件操作.取子文件集合(路径)
			自定义列表框1.更新项目(列表集合.长度)
		结束 如果
		//编辑框搜索
		事件 编辑框1:内容被改变()
			列表集合 = 搜索(文件操作.取子文件集合(路径),编辑框1.内容)
			自定义列表框1.更新项目(列表集合.长度)
		结束 事件
	结束 方法

	//加载菜单被点击事件
	变量 搜索开关 : 逻辑型 = 假
	方法 菜单()
		事件 线性布局7:被单击()
			变量 XPopup : XPopup附着弹窗
			变量 项目 : 文本[] = {"修改原版","新建空白","刷新列表","搜索列表","导入外部"}
			XPopup.列表项目 = 项目
			XPopup.附着组件 = 线性布局7
			XPopup.动画(XPopup动画.滑动_右上)
			XPopup.半透明(假)
			XPopup.亮色状态栏(真)
			//设置夜间模式
			如果 设置_设定.获取开关("NightMode") 则
				XPopup.暗色主题(真)
			结束 如果
			XPopup.显示()
			//选项被单击
			事件 XPopup:列表被单击(索引 : 整数,文本 : 文本)
				假如 索引
					是 0
						新建(0)
					是 1
						新建(1)
					是 2
						变量 项目的路径 : 文本 = 其他_变量.项目目录 + 其他_其他.读缓存("ProjectName") + "/resource/texts/"
						加载列表(项目的路径,真)
						弹出成功提示("刷新完毕")
					是 3
						编辑框1.内容 = ""
						如果 搜索开关 则
							搜索开关 = 假
							编辑框1.可视 = 假
						否则
							搜索开关 = 真
							编辑框1.可视 = 真
						结束 如果
					是 4
						文件选择器.选择文件(本对象,1)	
				结束 假如
			结束 事件
		结束 事件
	结束 方法

	//新建项目
	方法 新建(类型 : 整数)
		变量 新建对话框 : 对话框
		变量 新建布局 : 编辑器_资源编辑器_语言_新建
		新建对话框.自定义布局 = 新建布局
		新建对话框.显示()
		假如 类型
			是 0
				新建布局.文本框1.内容 = "修改原版语言"
				新建布局.文本框4.内容 = "你打算修改哪个原版语言，选择后将会自动导入，如果你是国内玩家，请选择zh_CN，但会默认选择zh_CN"
			是 1
				新建布局.文本框1.内容 = "新建语言"
				新建布局.文本框4.内容 = "你打算新建哪个语言，选择后将会自动创建，如果你是国内玩家，请选择zh_CN，但会默认选择zh_CN"
		结束 假如
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			新建布局.线性布局1.背景颜色 = 0XFF333333
			新建布局.文本框1.字体颜色 = 0XFFFFFFFF
			新建布局.文本框4.字体颜色 = 0XFFFFFFFF
			新建布局.卡片布局1.卡片背景颜色 = 0XFF222222
			新建布局.线性布局6.背景颜色 = 0XFF222222
			新建布局.文本框2.字体颜色 = 0XFFE0E0E0
			新建布局.线性布局3.背景颜色 = 0XFF222222
			新建布局.文本框5.字体颜色 = 0XFFFFFFFF
			新建布局.文本框6.字体颜色 = 0XFFFFFFFF
		结束 如果
		//加载list
		变量 新建列表集合 : 文本集合
		变量 json : JSON数组 = 读入资源文件(本对象,"editor/resource_editor/language_names.json")
		循环(i, 0, json.长度)
			新建列表集合.添加成员(json.取JSON数组(i).到文本(0))
		结束 循环
		事件 新建布局.自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 编辑器_资源编辑器_语言_列表?
			如果 项目布局 == 空 则
				布局 = 创建 编辑器_资源编辑器_语言_列表
			否则
				布局 = 项目布局
			结束 如果
			//显示到当前列表
			变量 json2 : JSON数组 = json.取JSON数组(索引)
			布局.文本框1.内容 = json2.取文本(0)
			布局.文本框2.内容 = json2.取文本(1)
			//列表被点击
			事件 布局.线性布局2:被单击()
				新建布局.文本框6.内容 = 布局.文本框1.内容
				语言修改新建最终结果 = 布局.文本框1.内容
			结束 事件
			返回 布局
		结束 事件
		新建布局.自定义列表框1.更新项目(新建列表集合.长度)
		//新建
		事件 新建布局.线性布局5:被单击()
			假如 类型
				是 0
					变量 项目的路径 : 文本 = 其他_变量.项目目录 + 其他_其他.读缓存("ProjectName") + "/resource/texts/"
					变量 文件名 : 文本 = 新建布局.文本框6.内容 + ".lang"
					如果 文件是否存在(项目的路径 + 文件名) 则
						弹出错误提示("导入失败，列表中已有相同的语言文件")
					否则
						如果 写出资源文件(本对象,"resource/texts/" + 文件名,项目的路径 + 文件名) 则
							弹出成功提示("导出原版内容成功")
							加载列表(项目的路径,真)
							项目记录(项目的路径 + 文件名)
						否则
							弹出错误提示("导出失败！")
						结束 如果
					结束 如果
					新建对话框.关闭()
				是 1
					变量 项目的路径 : 文本 = 其他_变量.项目目录 + 其他_其他.读缓存("ProjectName") + "/resource/texts/"
					变量 文件名 : 文本 = 新建布局.文本框6.内容 + ".lang"
					如果 文件是否存在(项目的路径 + 文件名) 则
						弹出错误提示("创建失败，列表中已有相同的语言文件")
					否则
						写出文本文件(项目的路径 + 文件名,"")
						加载列表(项目的路径,真)
						项目记录(项目的路径 + 文件名)
						弹出成功提示("创建完毕")
					结束 如果
					新建对话框.关闭()
			结束 假如
		结束 事件
		//关闭
		事件 新建布局.线性布局6:被单击()
			新建对话框.关闭()
		结束 事件
	结束 方法

	//项目记录
	方法 项目记录(路径 : 文本)
		//项目记录
		变量 模块_项目 : 模块_项目
		模块_项目.初始化()
		模块_项目.assets图标 = "icon/item/text_file.png"
		模块_项目.名称 = 取文件前缀名(路径)
		模块_项目.标识符 = 取文件前缀名(路径)
		模块_项目.描述 = "这个是资源包语言"
		模块_项目.种类 = 模块_项目种类.资源包
		模块_项目.分类 = "texts"
		模块_项目.路径 = 路径
		模块_项目.保存()
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		编辑框1.背景颜色 = 0XFF333333
		退出界面.图片资源 = 编辑器_资源编辑器_语言_资源.白色返回图标
		图片框1.图片资源 = 编辑器_资源编辑器_语言_资源.白色菜单图标
		文本框2.字体颜色 = 0XFFFFFFFF
		线性布局5.背景颜色 = 0XFF222222
		编辑框1.提示文本颜色 = 0XFF999999
		编辑框1.字体颜色 = 0XFFFFFFFF
	结束 方法

	//读取语言文件名文件显示名称，例如en_US显示English (United States)
	方法 读取语言文件名(文件名 : 文本) : 文本
		变量 最终结果 : 文本 = ""
		变量 json : JSON数组 = 读入资源文件(本对象,"editor/resource_editor/language_names.json")
		变量 名称 : 文本 = 取文件前缀名(文件名)
		循环(i, 0, json.长度)
			如果 json.取JSON数组(i).到文本(4) ? 名称 则
				变量 json2 : JSON数组 = json.取JSON数组(i)
				最终结果 = json2.取文本(1)
			结束 如果
		结束 循环
		返回 最终结果
	结束 方法

	//搜索
	方法 搜索(项目集合 : 文本集合,搜索内容 : 文本) : 文本集合
		结束集合.清空()
		循环(项目集合 -> 项目)
			如果 项目.到文本() ? 搜索内容 则
				结束集合.添加成员(项目)
			结束 如果
		结束 循环
		返回 结束集合
	结束 方法

结束 类

类 编辑器_资源编辑器_语言_列表编辑 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1]])
	变量 自适应布局1 : 自适应布局
	@布局配置([[父布局=自适应布局1,宽度=-1,高度=-1,@横坐标比例=-9.0E-4,@纵坐标比例=-4.0E-4,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,背景颜色=-1,纵向布局=假]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=50,高度DP=50,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/back/default_backicon.png",水波纹效果=真,可获取焦点=真]])
	变量 退出界面 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388627,宽度=-1]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,字体大小=20,粗体=假,@左外边距DP=10,字体颜色=-16777216,可视=真,内容="列表编辑",@下外边距DP=5]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-1,@左外边距DP=10,@右外边距DP=50,高度=-1,背景颜色=-1,提示文本="搜索项名称，回车搜索",内容="",左内边距DP=5,右内边距DP=5,字体大小=17,可视=假,单行显示=真]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388629,宽度=-1]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度DP=50,高度DP=50,对齐方式=17,水波纹效果=真,纵向布局=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/editor/resource_editor/menu.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388691]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,@左外边距DP=10,字体颜色=-16777216,字体大小=12,@下外边距DP=3]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-1,分割线高度=1,@上外边距DP=5,@下外边距DP=5]])
	变量 自定义列表框1 : 自定义列表框

	//声明
	变量 设置_设定 : 设置_设定
	变量 其他_功能 : 其他_功能

	变量 列表集合 : 文本集合

	事件 编辑器_资源编辑器_语言_列表编辑:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局5,设置相关路径)
			结束 如果
		结束 如果
		//退出按钮事件
		事件 退出界面:被单击()
			关闭窗口()
		结束 事件
		//加载方法
		菜单()
		//加载列表
		变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
		加载列表(lang文件内容)
		//订阅事件
		订阅事件()
	结束 事件

	//窗口被重新启动时触发该事件
	事件 编辑器_资源编辑器_语言_列表编辑:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
		//刷新
		变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
		加载列表(lang文件内容)
	结束 事件

	//菜单
	变量 搜索开关 : 逻辑型 = 假
	方法 菜单()
		事件 线性布局7:被单击()
			变量 XPopup : XPopup附着弹窗
			变量 项目 : 文本[] = {"新建","刷新","查找","替换","转换为代码","滚动到顶","滚动到底","允许快速滚动","导入键与值"}
			XPopup.列表项目 = 项目
			XPopup.附着组件 = 线性布局7
			XPopup.动画(XPopup动画.滑动_右上)
			XPopup.半透明(假)
			XPopup.亮色状态栏(真)
			//设置夜间模式
			如果 设置_设定.获取开关("NightMode") 则
				XPopup.暗色主题(真)
			结束 如果
			XPopup.显示()
			//选项被单击
			事件 XPopup:列表被单击(索引 : 整数,文本 : 文本)
				变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
				假如 索引
					是 0
						变量 对话框 : 对话框
						变量 对话框布局 : 编辑器_资源编辑器_语言_列表编辑新建
						对话框.自定义布局 = 对话框布局
						对话框.可取消 = 假
						对话框.显示()
						//置圆角背景边框
						如果 设置_设定.获取开关("NightMode") 则
							组件样式操作.置圆角背景边框(对话框布局.编辑框1,0XFF333333,2,0XFF222222,5,5,5,5)
							组件样式操作.置圆角背景边框(对话框布局.编辑框2,0XFF333333,2,0XFF222222,5,5,5,5)
						否则
							组件样式操作.置圆角背景边框(对话框布局.编辑框1,0xF0FFFFFF,2,0xFFE8E8E8,5,5,5,5)
							组件样式操作.置圆角背景边框(对话框布局.编辑框2,0xF0FFFFFF,2,0xFFE8E8E8,5,5,5,5)
						结束 如果
						//修改布局
						对话框布局.文本框1.内容 = "新建"
						//设置夜间模式
						如果 设置_设定.获取开关("NightMode") 则
							对话框布局.线性布局1.背景颜色 = 0XFF333333
							对话框布局.文本框1.字体颜色 = 0XFFFFFFFF
							对话框布局.文本框2.字体颜色 = 0XFFE0E0E0
							对话框布局.卡片布局2.卡片背景颜色 = 0XFF222222 
							对话框布局.线性布局7.背景颜色 = 0XFF222222
							对话框布局.文本框4.字体颜色 = 0XFFE0E0E0
							对话框布局.文本框5.字体颜色 = 0XFFE0E0E0
							对话框布局.编辑框1.字体颜色 = 0XFFFFFFFF
							对话框布局.编辑框2.字体颜色 = 0XFFFFFFFF
						结束 如果
						//确定
						事件 对话框布局.线性布局5:被单击()
							如果 对话框布局.编辑框1.内容.替换(" ","") == "" 则
								弹出警告通知("键名不能为空")
								对话框.关闭()
							否则
								变量 键值 : 文本 = 对话框布局.编辑框1.内容 + "=" + 对话框布局.编辑框2.内容 + "	#"
								变量 结果 : 文本 = lang文件内容 + "\n" + 键值
								如果 文件是否存在(其他_其他.读缓存("resource_editor_texts_path")) 则
									写出文本文件(其他_其他.读缓存("resource_editor_texts_path"),结果)
									弹出成功提示("新建成功")
									变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
									加载列表(lang文件内容)
									其他_功能.语言文件国际化(对话框布局.编辑框1.内容,对话框布局.编辑框2.内容)
									对话框.关闭()
								否则
									弹出错误提示("失败！请尝试重新进入")
								结束 如果
							结束 如果
						结束 事件
						//取消
						事件 对话框布局.线性布局7:被单击()
							对话框.关闭()
						结束 事件
					是 1
						变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
						加载列表(lang文件内容)
						弹出成功提示("刷新成功!")
					是 2
						编辑框1.内容 = ""
						如果 搜索开关 则
							搜索开关 = 假
							编辑框1.可视 = 假
						否则
							搜索开关 = 真
							编辑框1.可视 = 真
						结束 如果
					是 3
						变量 对话框 : 对话框
						变量 对话框布局 : 编辑器_资源编辑器_语言_列表编辑替换
						对话框.自定义布局 = 对话框布局
						对话框.可取消 = 假
						对话框.显示()
						//置圆角背景边框
						如果 设置_设定.获取开关("NightMode") 则
							组件样式操作.置圆角背景边框(对话框布局.编辑框1,0XFF333333,2,0XFF222222,5,5,5,5)
							组件样式操作.置圆角背景边框(对话框布局.编辑框2,0XFF333333,2,0XFF222222,5,5,5,5)
						否则
							组件样式操作.置圆角背景边框(对话框布局.编辑框1,0xF0FFFFFF,2,0xFFE8E8E8,5,5,5,5)
							组件样式操作.置圆角背景边框(对话框布局.编辑框2,0xF0FFFFFF,2,0xFFE8E8E8,5,5,5,5)
						结束 如果
						//修改布局
						对话框布局.文本框1.内容 = "替换"
						//设置夜间模式
						如果 设置_设定.获取开关("NightMode") 则
							对话框布局.线性布局1.背景颜色 = 0XFF333333
							对话框布局.文本框1.字体颜色 = 0XFFFFFFFF
							对话框布局.文本框2.字体颜色 = 0XFFE0E0E0
							对话框布局.卡片布局2.卡片背景颜色 = 0XFF222222 
							对话框布局.线性布局7.背景颜色 = 0XFF222222
							对话框布局.文本框4.字体颜色 = 0XFFE0E0E0
							对话框布局.文本框5.字体颜色 = 0XFFE0E0E0
							对话框布局.编辑框1.字体颜色 = 0XFFFFFFFF
							对话框布局.编辑框2.字体颜色 = 0XFFFFFFFF
						结束 如果
						//确定
						事件 对话框布局.线性布局5:被单击()
							变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
							变量 最终结果S : 文本 = lang文件内容.替换(对话框布局.编辑框1.内容,对话框布局.编辑框2.内容)
							写出文本文件(其他_其他.读缓存("resource_editor_texts_path"),最终结果S)
							变量 lang文件内容s : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
							加载列表(lang文件内容s)
							弹出成功提示("替换完毕")
							对话框.关闭()
						结束 事件
						//取消
						事件 对话框布局.线性布局7:被单击()
							对话框.关闭()
						结束 事件
					是 4
						切换窗口(编辑器_资源编辑器_语言_代码编辑)	
					是 5
						自定义列表框1.滚动至(0)
					是 6
						自定义列表框1.滚动至(列表集合.长度)
					是 7
						自定义列表框1.支持快速滚动 = 真
						自定义列表框1.始终显示快速滚动条 = 真
					是 8
						变量 对话框 : 对话框
						变量 对话框布局 : 编辑器_资源编辑器_语言_列表编辑导入
						对话框.自定义布局 = 对话框布局
						对话框.可取消 = 假
						对话框.显示()
						//置圆角背景边框
						如果 设置_设定.获取开关("NightMode") 则
							组件样式操作.置圆角背景边框(对话框布局.编辑框1,0XFF333333,2,0XFF222222,5,5,5,5)
						否则
							组件样式操作.置圆角背景边框(对话框布局.编辑框1,0xF0FFFFFF,2,0xFFE8E8E8,5,5,5,5)
						结束 如果
						//修改布局
						对话框布局.文本框1.内容 = "导入"
						//设置夜间模式
						如果 设置_设定.获取开关("NightMode") 则
							对话框布局.线性布局1.背景颜色 = 0XFF333333
							对话框布局.文本框1.字体颜色 = 0XFFFFFFFF
							对话框布局.文本框2.字体颜色 = 0XFFE0E0E0
							对话框布局.卡片布局2.卡片背景颜色 = 0XFF222222 
							对话框布局.线性布局7.背景颜色 = 0XFF222222
							对话框布局.文本框4.字体颜色 = 0XFFE0E0E0
							对话框布局.编辑框1.字体颜色 = 0XFFFFFFFF
						结束 如果
						//确定
						事件 对话框布局.线性布局5:被单击()
							变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
							变量 结果 : 文本 = lang文件内容 + "\n" + 对话框布局.编辑框1.内容
							如果 文件是否存在(其他_其他.读缓存("resource_editor_texts_path")) 则
								写出文本文件(其他_其他.读缓存("resource_editor_texts_path"),结果)
								弹出成功提示("导入成功")
								变量 lang文件内容s : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
								加载列表(lang文件内容s)
								对话框.关闭()
							否则
								弹出错误提示("失败！请尝试重新进入")
							结束 如果
							对话框.关闭()
						结束 事件
						//取消
						事件 对话框布局.线性布局7:被单击()
							对话框.关闭()
						结束 事件
				结束 假如
			结束 事件
		结束 事件
	结束 方法

	//加载列表
	方法 加载列表(内容 : 文本,是否刷新 : 逻辑型 = 假)
		如果 是否刷新 则
			自定义列表框1.更新项目(列表集合.长度)
		否则
			//转换为数组文件
			变量 列表数组 : 文本[] = 内容.分割文本("\n")
			列表集合.清空()
			循环(i, 0, 取数组长度(列表数组))
				变量 输出内容 : 文本 = 列表数组[i]
				如果 输出内容.替换(" ","") == "" 则
				否则
					如果 输出内容 ? "##" 则
					否则
						列表集合.添加成员(输出内容)
					结束 如果
				结束 如果
			结束 循环
			//加载列表
			事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
				变量 布局 : 编辑器_资源编辑器_语言_列表2?
				如果 项目布局 == 空 则
					布局 = 创建 编辑器_资源编辑器_语言_列表2
				否则
					布局 = 项目布局
				结束 如果
				//显示到当前列表
				变量 输出内容 : 文本 = 列表集合[索引]
				变量 键名 : 文本 = 输出内容.替换(输出内容.截取文本("=","#"),"").替换("#","")
				变量 键值 : 文本 = 输出内容.截取文本("=","#")
				布局.文本框1.内容 = 键名
				布局.文本框2.内容 = 键值
				布局.文本框3.内容 = 输出内容
				//列表被单击
				事件 布局.线性布局2:被单击()
					变量 对话框 : 对话框
					变量 对话框布局 : 编辑器_资源编辑器_语言_列表编辑编辑
					对话框.自定义布局 = 对话框布局
					对话框.可取消 = 假
					对话框.显示()
					//置圆角背景边框
					如果 设置_设定.获取开关("NightMode") 则
						组件样式操作.置圆角背景边框(对话框布局.编辑框1,0XFF333333,2,0XFF222222,5,5,5,5)
						组件样式操作.置圆角背景边框(对话框布局.编辑框2,0XFF333333,2,0XFF222222,5,5,5,5)
					否则
						组件样式操作.置圆角背景边框(对话框布局.编辑框1,0xF0FFFFFF,2,0xFFE8E8E8,5,5,5,5)
						组件样式操作.置圆角背景边框(对话框布局.编辑框2,0xF0FFFFFF,2,0xFFE8E8E8,5,5,5,5)
					结束 如果
					//修改布局
					对话框布局.文本框1.内容 = "编辑"
					对话框布局.编辑框1.内容 = 键名.替换("=","")
					对话框布局.编辑框2.内容 = 键值.替换("	"，"")
					//设置夜间模式
					如果 设置_设定.获取开关("NightMode") 则
						对话框布局.线性布局1.背景颜色 = 0XFF333333
						对话框布局.文本框1.字体颜色 = 0XFFFFFFFF
						对话框布局.文本框2.字体颜色 = 0XFFE0E0E0
						对话框布局.卡片布局2.卡片背景颜色 = 0XFF222222 
						对话框布局.线性布局7.背景颜色 = 0XFF222222
						对话框布局.文本框4.字体颜色 = 0XFFE0E0E0
						对话框布局.文本框5.字体颜色 = 0XFFE0E0E0
						对话框布局.编辑框1.字体颜色 = 0XFFFFFFFF
						对话框布局.编辑框2.字体颜色 = 0XFFFFFFFF
					结束 如果
					//确定
					事件 对话框布局.线性布局5:被单击()
						变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
						变量 键值 : 文本 = 对话框布局.编辑框1.内容 + "=" + 对话框布局.编辑框2.内容 + "	#"
						变量 最终结果S : 文本 = lang文件内容.替换(布局.文本框3.内容,键值)
						写出文本文件(其他_其他.读缓存("resource_editor_texts_path"),最终结果S)
						变量 lang文件内容s : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
						加载列表(lang文件内容s)
						弹出成功提示("修改完毕")
						对话框.关闭()
					结束 事件
					//取消
					事件 对话框布局.线性布局7:被单击()
						对话框.关闭()
					结束 事件
				结束 事件
				//列表被长按
				事件 布局.线性布局2:被长按()
					变量 XPopup : XPopup附着弹窗
					变量 项目 : 文本[] = {"查看","删除"}
					XPopup.列表项目 = 项目
					XPopup.附着组件 = 布局.线性布局2
					XPopup.宽度(500)
					XPopup.动画(XPopup动画.滑动_上)
					XPopup.半透明(假)
					XPopup.亮色状态栏(真)
					//设置夜间模式
					如果 设置_设定.获取开关("NightMode") 则
						XPopup.暗色主题(真)
					结束 如果
					XPopup.显示()
					//选项被单击
					事件 XPopup:列表被单击(索引 : 整数,文本 : 文本)
						假如 索引
							是 0
								变量 删除对话框 : XPopup对话弹窗
								删除对话框.标题 = "提示"
								删除对话框.内容 = 输出内容 + "\n点击确定复制"
								如果 设置_设定.获取开关("NightMode") 则
									删除对话框.暗色主题(真)
								结束 如果
								删除对话框.显示()
								事件 删除对话框:确定()
									置剪切板文本(本对象,输出内容)
									弹出成功提示("复制完毕")
								结束 事件
							是 1
								变量 删除对话框 : XPopup对话弹窗
								删除对话框.标题 = "提示"
								删除对话框.内容 = "是否删除这个项目" + 布局.文本框1.内容.替换("=","")
								如果 设置_设定.获取开关("NightMode") 则
									删除对话框.暗色主题(真)
								结束 如果
								删除对话框.显示()
								事件 删除对话框:确定()
									变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
									变量 最终结果S : 文本 = lang文件内容.替换(输出内容,"")
									写出文本文件(其他_其他.读缓存("resource_editor_texts_path"),最终结果S)
									变量 lang文件内容s : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
									加载列表(lang文件内容s)
									弹出成功提示("删除完毕")
								结束 事件
						结束 假如
					结束 事件
				结束 事件
				返回 布局
			结束 事件
			自定义列表框1.更新项目(列表集合.长度)
		结束 如果
		//编辑框搜索
		事件 编辑框1:内容被改变()
			如果 编辑框1.内容 == "" 则
				变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
				加载列表(lang文件内容)
			结束 如果
		结束 事件
		事件 编辑框1:按键输入(键代码 : 整数,来源事件 : 按键事件) : 逻辑型
			如果 来源事件.按键代码 == 66 则
				列表集合.清空()
				变量 列表数组 : 文本[] = 内容.分割文本("\n")
				循环(i, 0, 取数组长度(列表数组))
					变量 输出内容 : 文本 = 列表数组[i]
					如果 输出内容.替换(" ","") == "" 则
					否则
						如果 输出内容 ? "##" 则
						否则
							如果 输出内容 ? 编辑框1.内容 则
								列表集合.添加成员(输出内容)
							结束 如果
						结束 如果
					结束 如果
				结束 循环
				自定义列表框1.更新项目(列表集合.长度)
			结束 如果
			返回 假
		结束 事件
		//获取当前数据
		变量 lang文件路径 : 文本 = 其他_其他.读缓存("resource_editor_texts_path")
		文本框1.内容 = 取文件名(lang文件路径) + " 项目数：" + 列表集合.长度.到文本()
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		编辑框1.背景颜色 = 0XFF333333
		退出界面.图片资源 = 编辑器_资源编辑器_语言_资源.白色返回图标
		图片框1.图片资源 = 编辑器_资源编辑器_语言_资源.白色菜单图标
		文本框2.字体颜色 = 0XFFFFFFFF
		线性布局5.背景颜色 = 0XFF222222
		编辑框1.提示文本颜色 = 0XFF999999
		编辑框1.字体颜色 = 0XFFFFFFFF
		文本框1.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类

类 编辑器_资源编辑器_语言_代码编辑 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1]])
	变量 自适应布局1 : 自适应布局
	@布局配置([[父布局=自适应布局1,宽度=-1,高度=-1,@横坐标比例=-9.0E-4,@纵坐标比例=-4.0E-4,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,背景颜色=-1,纵向布局=假]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=50,高度DP=50,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/back/default_backicon.png",水波纹效果=真,可获取焦点=真]])
	变量 退出界面 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388627,宽度=-1]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,字体大小=20,粗体=假,@左外边距DP=10,字体颜色=-16777216,可视=真,内容="代码编辑",@下外边距DP=5]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-1,@左外边距DP=10,@右外边距DP=50,高度=-1,背景颜色=-1,提示文本="搜索项名称",内容="",左内边距DP=5,右内边距DP=5,字体大小=17,可视=假,单行显示=真]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388629,宽度=-1]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度DP=50,高度DP=50,对齐方式=17,水波纹效果=真,纵向布局=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/editor/resource_editor/menu.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388691]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,@左外边距DP=10,字体颜色=-16777216,字体大小=12,@下外边距DP=3]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-1]])
	变量 代码框1 : 代码框

	//声明
	变量 设置_设定 : 设置_设定	

	事件 编辑器_资源编辑器_语言_代码编辑:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局5,设置相关路径)
			结束 如果
		结束 如果
		//退出按钮事件
		事件 退出界面:被单击()
			关闭窗口()
		结束 事件
		//设置代码框主题
		如果 设置_设定.获取开关("NightMode") 则
			//设置代码框主题
			代码框1.设置用户字(0XFFFFFFFF)
			代码框1.设置字符串颜色(0XFFFFFFFF)
			代码框1.设置注释颜色(0XFFFFFFFF)
			代码框1.设置方法名颜色(0XFFFFFFFF)
			代码框1.设置基本颜色(0XFFFFFFFF)
			代码框1.设置操作符颜色(0XFFFFFFFF)
			代码框1.设置变量名颜色(0XFFFFFFFF)
			代码框1.设置关键字颜色(0XFFFFFFFF)
			代码框1.设置背景色(0XFF262626)
			代码框1.设置行号颜色(0XFF535353)
		否则
			代码框1.设置用户字(0XFF000000)
			代码框1.设置字符串颜色(0XFF000000)
			代码框1.设置注释颜色(0XFF000000)
			代码框1.设置方法名颜色(0XFF000000)
			代码框1.设置基本颜色(0XFF000000)
			代码框1.设置操作符颜色(0XFF000000)
			代码框1.设置变量名颜色(0XFF000000)
			代码框1.设置关键字颜色(0XFF000000)
			代码框1.设置背景色(0XFFFFFFFF)
			代码框1.设置行号颜色(0XFFC0C2C3)
		结束 如果
		//加载方法
		菜单()
		//自动保存
		如果 设置_设定.获取开关("ResourceEditorTextsAutoSave") 则
			自动保存()
		结束 如果
		//加载
		变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
		变量 lang文件路径 : 文本 = 其他_其他.读缓存("resource_editor_texts_path")
		文本框1.内容 = 取文件名(lang文件路径) + " 字数：" + lang文件内容.长度.到文本()
		代码框1.设置内容(lang文件内容)
		//订阅事件
		订阅事件()
	结束 事件

	//菜单
	变量 搜索开关 : 逻辑型 = 假
	方法 菜单()
		事件 线性布局7:被单击()
			变量 XPopup : XPopup附着弹窗
			变量 项目 : 文本[] = {"保存","撤销","恢复","查找","替换","刷新"}
			XPopup.列表项目 = 项目
			XPopup.附着组件 = 线性布局7
			XPopup.动画(XPopup动画.滑动_右上)
			XPopup.半透明(假)
			XPopup.亮色状态栏(真)
			XPopup.宽度(500)
			//设置夜间模式
			如果 设置_设定.获取开关("NightMode") 则
				XPopup.暗色主题(真)
			结束 如果
			XPopup.显示()
			//选项被单击
			事件 XPopup:列表被单击(索引 : 整数,文本 : 文本)
				假如 索引
					是 0
						变量 lang文件路径 : 文本 = 其他_其他.读缓存("resource_editor_texts_path")
						写出文本文件(lang文件路径,代码框1.获取内容())
						变量 显示提示 : 文本 = "文件已被保存！\n保存的数据量：" + 取文件大小(lang文件路径).到文本() + "\n保存时间：" + 取格式时间("hh:mm:ss").到文本()
						弹出成功通知(显示提示)
					是 1
						代码框1.撤销()
					是 2
						代码框1.重做()
					是 3
						编辑框1.内容 = ""
						如果 搜索开关 则
							搜索开关 = 假
							编辑框1.可视 = 假
						否则
							搜索开关 = 真
							编辑框1.可视 = 真
						结束 如果
						事件 编辑框1:按键输入(键代码 : 整数,来源事件 : 按键事件) : 逻辑型
							如果 来源事件.按键代码 == 66 则
								代码框1.查找下一个(编辑框1.内容)
							结束 如果
							返回 假
						结束 事件
					是 4
						变量 对话框 : 对话框
						变量 对话框布局 : 编辑器_资源编辑器_语言_代码编辑替换
						对话框.自定义布局 = 对话框布局
						对话框.可取消 = 假
						对话框.显示()
						//置圆角背景边框
						如果 设置_设定.获取开关("NightMode") 则
							组件样式操作.置圆角背景边框(对话框布局.编辑框1,0XFF333333,2,0XFF222222,5,5,5,5)
							组件样式操作.置圆角背景边框(对话框布局.编辑框2,0XFF333333,2,0XFF222222,5,5,5,5)
						否则
							组件样式操作.置圆角背景边框(对话框布局.编辑框1,0xF0FFFFFF,2,0xFFE8E8E8,5,5,5,5)
							组件样式操作.置圆角背景边框(对话框布局.编辑框2,0xF0FFFFFF,2,0xFFE8E8E8,5,5,5,5)
						结束 如果
						//修改布局
						对话框布局.文本框1.内容 = "替换"
						//设置夜间模式
						如果 设置_设定.获取开关("NightMode") 则
							对话框布局.线性布局1.背景颜色 = 0XFF333333
							对话框布局.文本框1.字体颜色 = 0XFFFFFFFF
							对话框布局.文本框2.字体颜色 = 0XFFE0E0E0
							对话框布局.卡片布局2.卡片背景颜色 = 0XFF222222 
							对话框布局.线性布局7.背景颜色 = 0XFF222222
							对话框布局.文本框4.字体颜色 = 0XFFE0E0E0
							对话框布局.文本框5.字体颜色 = 0XFFE0E0E0
							对话框布局.编辑框1.字体颜色 = 0XFFFFFFFF
							对话框布局.编辑框2.字体颜色 = 0XFFFFFFFF
						结束 如果
						//确定
						事件 对话框布局.线性布局5:被单击()
							变量 lang内容 : 文本 = 代码框1.获取内容()
							变量 最终结果 : 文本 = lang内容.替换(对话框布局.编辑框1.内容,对话框布局.编辑框2.内容)
							代码框1.设置内容(最终结果)
							弹出成功提示("替换完毕")
							对话框.关闭()
						结束 事件
						//取消
						事件 对话框布局.线性布局7:被单击()
							对话框.关闭()
						结束 事件
					是 5
						变量 lang文件内容 : 文本 = 读入文本文件(其他_其他.读缓存("resource_editor_texts_path"))
						变量 lang文件路径 : 文本 = 其他_其他.读缓存("resource_editor_texts_path")
						文本框1.内容 = 取文件名(lang文件路径) + " 字数：" + lang文件内容.长度.到文本()
						代码框1.设置内容(lang文件内容)
				结束 假如
			结束 事件
		结束 事件
	结束 方法

	//启动自动保存
	方法 自动保存()
		变量 计时器 : 倒计时器
		计时器.开始倒计时(设置_设定.获取文本("ResourceEditorTextsAutoSaveTime").到长整数(),1000l)
		事件 计时器:倒计时结束()
			变量 lang文件路径 : 文本 = 其他_其他.读缓存("resource_editor_texts_path")
			写出文本文件(lang文件路径,代码框1.获取内容())
			计时器.开始倒计时(设置_设定.获取文本("ResourceEditorTextsAutoSaveTime").到长整数(),1000l)
		结束 事件
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		编辑框1.背景颜色 = 0XFF333333
		退出界面.图片资源 = 编辑器_资源编辑器_语言_资源.白色返回图标
		图片框1.图片资源 = 编辑器_资源编辑器_语言_资源.白色菜单图标
		文本框2.字体颜色 = 0XFFFFFFFF
		线性布局5.背景颜色 = 0XFF222222
		编辑框1.提示文本颜色 = 0XFF999999
		编辑框1.字体颜色 = 0XFFFFFFFF
		文本框1.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类

类 编辑器_资源编辑器_语言_列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,圆角=25,卡片阴影=0,@上外边距DP=5,@左外边距DP=5,@右外边距DP=5]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-1,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,高度=-1,宽度DP=50,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/resource_editor/texts/file.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,@左外边距DP=5,字体大小=14,字体颜色=-16777216,内容="Name"]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局4,@左外边距DP=5,字体大小=11,字体颜色=-16777216,内容="describe"]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局4,可视=假]])
	变量 文本框3 : 文本框

	//声明
	变量 设置_设定 : 设置_设定

	事件 编辑器_资源编辑器_语言_列表:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
		卡片布局1.卡片背景颜色 = 0XFF333333
		线性布局2.背景颜色 = 0XFF333333
	结束 方法

结束 类

类 编辑器_资源编辑器_语言_列表2 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,背景颜色=-1,对齐方式=8388627,@左外边距DP=5,@右外边距DP=5,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,高度DP=45,宽度DP=45,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/resource_editor/texts/string.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,@左外边距DP=5,字体大小=15,字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局4,@左外边距DP=5,字体大小=12]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局4,可视=假]])
	变量 文本框3 : 文本框


	//声明
	变量 设置_设定 : 设置_设定

	事件 编辑器_资源编辑器_语言_列表2:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
		线性布局2.背景颜色 = 0XFF333333
	结束 方法

结束 类


类 编辑器_资源编辑器_语言_新建 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,背景颜色=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=35,对齐方式=8388627]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,字体大小=18,字体颜色=-16777216,内容="新建"]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,@左外边距DP=10,@右外边距DP=10,@上外边距DP=0,@下外边距DP=5,字体颜色=-16777216]])
	变量 文本框4 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=300]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度=-1,高度=-1,分割线高度=0]])
	变量 自定义列表框1 : 自定义列表框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,@左外边距DP=10,@右外边距DP=0,@上外边距DP=3,@下外边距DP=3,字体颜色=-16777216,内容="当前已选择："]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局8,@左外边距DP=1,@右外边距DP=10,@上外边距DP=3,@下外边距DP=3,字体颜色=-16777216,内容="zh_CN"]])
	变量 文本框6 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,对齐方式=8388629]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度DP=80,高度DP=30,圆角=15,卡片阴影=0,@右外边距DP=10]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-986896,对齐方式=17,水波纹效果=真]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,字体颜色=-13290187,内容="取消",字体大小=15]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局4,宽度DP=80,高度DP=30,圆角=15,卡片阴影=0,@右外边距DP=10]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,背景颜色=-833464,对齐方式=17,水波纹效果=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,字体颜色=-1,内容="新建",字体大小=15]])
	变量 文本框3 : 文本框

结束 类

类 编辑器_资源编辑器_语言_列表编辑新建 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,纵向布局=真,背景颜色=-1]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,对齐方式=17]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,字体大小=20,内容="标题",字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,粗体=真,内容="键名",字体大小=15]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,宽度=-1,高度=-1,@上外边距DP=5,@下外边距DP=20,右内边距DP=8,左内边距DP=8,单行显示=真]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,@左外边距DP=20,@右外边距DP=20,粗体=真,内容="值名",字体大小=15]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局8,@左外边距DP=20,@右外边距DP=20,宽度=-1,高度=-1,@上外边距DP=5,@下外边距DP=20,右内边距DP=8,左内边距DP=8,单行显示=真]])
	变量 编辑框2 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=60,上内边距DP=8,下内边距DP=8]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-769226,对齐方式=17,水波纹效果=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,字体颜色=-1,字体大小=16,粗体=真,内容="确 定"]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=44,上内边距DP=0,下内边距DP=0,@下外边距DP=10]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0,@下外边距DP=0]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,背景颜色=-986897,对齐方式=17,水波纹效果=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,字体颜色=-12632257,字体大小=16,粗体=真,内容="取 消"]])
	变量 文本框4 : 文本框

结束 类

类 编辑器_资源编辑器_语言_列表编辑编辑 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,纵向布局=真,背景颜色=-1]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,对齐方式=17]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,字体大小=20,内容="标题",字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,粗体=真,内容="键名",字体大小=15]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,宽度=-1,高度=-1,@上外边距DP=5,@下外边距DP=20,右内边距DP=8,左内边距DP=8,单行显示=真]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,@左外边距DP=20,@右外边距DP=20,粗体=真,内容="值名",字体大小=15]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局8,@左外边距DP=20,@右外边距DP=20,宽度=-1,高度=-1,@上外边距DP=5,@下外边距DP=20,右内边距DP=8,左内边距DP=8,单行显示=真]])
	变量 编辑框2 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=60,上内边距DP=8,下内边距DP=8]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-769226,对齐方式=17,水波纹效果=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,字体颜色=-1,字体大小=16,粗体=真,内容="确 定"]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=44,上内边距DP=0,下内边距DP=0,@下外边距DP=10]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0,@下外边距DP=0]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,背景颜色=-986897,对齐方式=17,水波纹效果=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,字体颜色=-12632257,字体大小=16,粗体=真,内容="取 消"]])
	变量 文本框4 : 文本框

结束 类

类 编辑器_资源编辑器_语言_列表编辑替换 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,纵向布局=真,背景颜色=-1]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,对齐方式=17]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,字体大小=20,内容="标题",字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,粗体=真,内容="原内容",字体大小=15]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,宽度=-1,高度=-1,@上外边距DP=5,@下外边距DP=20,右内边距DP=8,左内边距DP=8]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,@左外边距DP=20,@右外边距DP=20,粗体=真,内容="新内容",字体大小=15]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局8,@左外边距DP=20,@右外边距DP=20,宽度=-1,高度=-1,@上外边距DP=5,@下外边距DP=20,右内边距DP=8,左内边距DP=8]])
	变量 编辑框2 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=60,上内边距DP=8,下内边距DP=8]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-769226,对齐方式=17,水波纹效果=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,字体颜色=-1,字体大小=16,粗体=真,内容="开 始 替 换"]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=44,上内边距DP=0,下内边距DP=0,@下外边距DP=10]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0,@下外边距DP=0]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,背景颜色=-986897,对齐方式=17,水波纹效果=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,字体颜色=-12632257,字体大小=16,粗体=真,内容="取 消"]])
	变量 文本框4 : 文本框

结束 类

类 编辑器_资源编辑器_语言_列表编辑导入 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,纵向布局=真,背景颜色=-1]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,对齐方式=17]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,字体大小=20,内容="标题",字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,纵向布局=真,高度DP=260]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,粗体=真,内容="请输入",字体大小=15]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,宽度=-1,高度=-1,@上外边距DP=5,@下外边距DP=20,右内边距DP=8,左内边距DP=8,提示文本="例如:accessibility.loading.done=完成	#\naccessibility.saving.done=完成	#\naccessibility.downloading.start=下载已开始	#\n以此类推",对齐方式=8388659]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=60,上内边距DP=8,下内边距DP=8]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-769226,对齐方式=17,水波纹效果=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,字体颜色=-1,字体大小=16,粗体=真,内容="确 定"]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=44,上内边距DP=0,下内边距DP=0,@下外边距DP=10]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0,@下外边距DP=0]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,背景颜色=-986897,对齐方式=17,水波纹效果=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,字体颜色=-12632257,字体大小=16,粗体=真,内容="取 消"]])
	变量 文本框4 : 文本框

结束 类

类 编辑器_资源编辑器_语言_代码编辑替换 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,纵向布局=真,背景颜色=-1]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,对齐方式=17]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,字体大小=20,内容="标题",字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,粗体=真,内容="原内容",字体大小=15]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,宽度=-1,高度=-1,@上外边距DP=5,@下外边距DP=20,右内边距DP=8,左内边距DP=8]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,@左外边距DP=20,@右外边距DP=20,粗体=真,内容="新内容",字体大小=15]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局8,@左外边距DP=20,@右外边距DP=20,宽度=-1,高度=-1,@上外边距DP=5,@下外边距DP=20,右内边距DP=8,左内边距DP=8]])
	变量 编辑框2 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=60,上内边距DP=8,下内边距DP=8]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-769226,对齐方式=17,水波纹效果=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,字体颜色=-1,字体大小=16,粗体=真,内容="开 始 替 换"]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=44,上内边距DP=0,下内边距DP=0,@下外边距DP=10]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0,@下外边距DP=0]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,背景颜色=-986897,对齐方式=17,水波纹效果=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,字体颜色=-12632257,字体大小=16,粗体=真,内容="取 消"]])
	变量 文本框4 : 文本框

结束 类

类 编辑器_资源编辑器_语言_资源

	@静态
	变量 白色返回图标 : 图片资源 =  "../../../../资源库/图标/back/default_backicon2.png"

	@静态
	变量 白色菜单图标 : 图片资源 =  "../../../../资源库/图标/editor/resource_editor/menu2.png"

结束 类