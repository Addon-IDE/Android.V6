类 编辑器_资源编辑器_迷雾 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1]])
	变量 自适应布局1 : 自适应布局
	@布局配置([[父布局=自适应布局1,宽度=-1,高度=-1,@横坐标比例=-9.0E-4,@纵坐标比例=-4.0E-4,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,背景颜色=-1,纵向布局=假]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=50,高度DP=50,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/back/default_backicon.png",水波纹效果=真,可获取焦点=真]])
	变量 退出界面 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388627,宽度=-1]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,字体大小=20,粗体=假,@左外边距DP=10,字体颜色=-16777216,可视=真,内容="迷雾"]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-1,@左外边距DP=10,@右外边距DP=50,高度=-1,背景颜色=-1,提示文本="搜索...",内容="",左内边距DP=5,右内边距DP=5,字体大小=17,可视=假,单行显示=真]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388629,宽度=-1]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度DP=50,高度DP=50,对齐方式=17,水波纹效果=真,纵向布局=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/editor/resource_editor/menu.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-1,分割线高度=0,上内边距DP=5,下内边距DP=5]])
	变量 自定义列表框1 : 自定义列表框

	//声明
	变量 设置_设定  : 设置_设定

	//变量
	变量 列表数组 : 文本集合
	变量 结果数组 : JSON数组

	事件 编辑器_资源编辑器_迷雾:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局5,设置相关路径)
			结束 如果
		结束 如果
		//退出按钮事件
		事件 退出界面:被单击()
			关闭窗口()
		结束 事件
		//加载方法
		菜单()
		//加载列表
		变量 jsonliat : JSON数组 = 读入资源文件(本对象,"resource/fogs.json")
		加载列表(jsonliat)
		//订阅事件
		订阅事件()
	结束 事件

	//窗口被重新启动时触发该事件
	事件 编辑器_资源编辑器_迷雾:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
	结束 事件

	//菜单
	变量 搜索开关 : 逻辑型 = 假
	方法 菜单()
		事件 线性布局7:被单击()
			变量 XPopup : XPopup附着弹窗
			变量 项目 : 文本[] = {"刷新列表","搜索列表"}
			XPopup.列表项目 = 项目
			XPopup.附着组件 = 线性布局7
			XPopup.动画(XPopup动画.滑动_右上)
			XPopup.半透明(假)
			XPopup.亮色状态栏(真)
			//设置夜间模式
			如果 设置_设定.获取开关("NightMode") 则
				XPopup.暗色主题(真)
			结束 如果
			XPopup.显示()
			//项目被点击
			事件 XPopup:列表被单击(索引 : 整数,文本 : 文本)
				假如 索引
					是 0
						变量 jsonliat : JSON数组 = 读入资源文件(本对象,"resource/fogs.json")
						加载列表(jsonliat)
					是 1
						编辑框1.内容 = ""
						如果 搜索开关 则
							搜索开关 = 假
							编辑框1.可视 = 假
						否则
							搜索开关 = 真
							编辑框1.可视 = 真
						结束 如果
				结束 假如
			结束 事件
		结束 事件
	结束 方法

	//加载列表
	方法 加载列表(数组内容 : JSON数组)
		//初始化
		列表数组.清空()
		//循环
		循环(i, 0, 数组内容.长度)
			列表数组.添加成员(数组内容.取文本(i).到文本())
		结束 循环
		//加载列表
		事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 编辑器_资源编辑器_迷雾_列表?
			如果 项目布局 == 空 则
				布局 = 创建 编辑器_资源编辑器_迷雾_列表
			否则
				布局 = 项目布局
			结束 如果
			//设置列表内容
			变量 Text : 文本 = 列表数组[索引]
			布局.文本框1.内容 = Text
			布局.文本框2.内容 = 列表描述(Text)
			//列表被单击
			事件 布局.线性布局1:被单击()
				变量 资源路径 : 文本 = "resource/fogs/" + Text
				其他_其他.写缓存("resource_editor_fogs_path",资源路径)
				切换窗口(编辑器_资源编辑器_迷雾_编辑)
			结束 事件
			返回 布局
		结束 事件
		//更新列表
		自定义列表框1.更新项目(列表数组.长度)
		//搜索
		事件 编辑框1:内容被改变()
			列表数组.清空()
			循环(i, 0, 数组内容.长度)
				如果 数组内容[i].到文本() ? 编辑框1.内容 则
					列表数组.添加成员(数组内容[i].到文本())
				结束 如果
			结束 循环
			自定义列表框1.更新项目(列表数组.长度)
		结束 事件
	结束 方法

	//显示列表描述
	变量 结果 : 文本 = "获取失败！"
	方法 列表描述(键 : 文本) : 文本
		开始俘获异常()
		变量 jsonss : JSON对象 = 读入资源文件(本对象,"editor/resource_editor/fogs/fogs_describe.json")
		结果 = jsonss[键].到文本()
		俘获所有异常()
		结果 = "获取失败，错误日志：" + 取俘获异常().取异常信息()
		结束俘获异常()
		返回 结果
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		编辑框1.背景颜色 = 0XFF333333
		退出界面.图片资源 = 编辑器_资源编辑器_迷雾_资源.白色返回图标
		图片框1.图片资源 = 编辑器_资源编辑器_迷雾_资源.白色菜单图标
		文本框2.字体颜色 = 0XFFFFFFFF
		线性布局5.背景颜色 = 0XFF222222
		编辑框1.提示文本颜色 = 0XFF999999
		编辑框1.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类

类 编辑器_资源编辑器_迷雾_编辑 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1]])
	变量 自适应布局1 : 自适应布局
	@布局配置([[父布局=自适应布局1,宽度=-1,高度=-1,@横坐标比例=-9.0E-4,@纵坐标比例=-4.0E-4,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,背景颜色=-1,纵向布局=假]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=50,高度DP=50,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/back/default_backicon.png",水波纹效果=真,可获取焦点=真]])
	变量 退出界面 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388627,宽度=-1]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,字体大小=20,粗体=假,@左外边距DP=10,字体颜色=-16777216,可视=真,内容="迷雾编辑",@下外边距DP=5]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=相对布局1,高度DP=50,对齐方式=8388629,宽度=-1]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度DP=50,高度DP=50,对齐方式=17,水波纹效果=真,纵向布局=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/editor/resource_editor/menu.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388691]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,@左外边距DP=10,字体颜色=-16777216,字体大小=12,@下外边距DP=3]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,纵向布局=真,背景颜色=-1,@上外边距DP=0]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=40]])
	变量 相对布局2 : 相对布局
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,对齐方式=8388627]])
	变量 线性布局8s : 线性布局
	@布局配置([[父布局=线性布局8s,@左外边距DP=10,字体大小=15,字体颜色=-16777216,内容="格式版本"]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,@右外边距DP=10,宽度DP=100,背景颜色=16777215,左内边距DP=5,右内边距DP=5,提示文本="请输入...",内容="1.10",字体颜色=-16777216,字体大小=14,单行输入=真]])
	变量 编辑框2 : 编辑框
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=-1,纵向布局=真]])
	变量 线性布局12 : 线性布局
	@布局配置([[父布局=线性布局12,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局13 : 线性布局
	@布局配置([[父布局=线性布局13,@左外边距DP=10,字体大小=15,字体颜色=-16777216,内容="迷雾设置"]])
	变量 文本框4 : 文本框
	@布局配置([[父布局=线性布局12,宽度=-1,高度=-2,@左外边距DP=10,纵向布局=真]])
	变量 线性布局14 : 线性布局
	@布局配置([[父布局=线性布局14,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局15 : 线性布局
	@布局配置([[父布局=线性布局15,@左外边距DP=10,字体大小=15,字体颜色=-16777216,内容="描述"]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局14,宽度=-1,高度=-2,@左外边距DP=10,纵向布局=真]])
	变量 线性布局16 : 线性布局
	@布局配置([[父布局=线性布局16,宽度=-1,高度DP=40]])
	变量 相对布局3 : 相对布局
	@布局配置([[父布局=相对布局3,宽度=-1,高度=-1,对齐方式=8388627]])
	变量 线性布局17 : 线性布局
	@布局配置([[父布局=线性布局17,@左外边距DP=10,字体大小=15,字体颜色=-16777216,内容="标识符"]])
	变量 文本框6 : 文本框
	@布局配置([[父布局=相对布局3,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局18 : 线性布局
	@布局配置([[父布局=线性布局18,@右外边距DP=10,宽度DP=180,背景颜色=16777215,左内边距DP=5,右内边距DP=5,提示文本="请输入标识符",内容="minecraft:chorus_fruit",字体颜色=-16777216,字体大小=14,单行输入=真]])
	变量 编辑框4 : 编辑框
	@布局配置([[父布局=线性布局12,宽度=-1,高度=-1,@左外边距DP=10,纵向布局=真]])
	变量 线性布局21 : 线性布局
	@布局配置([[父布局=线性布局21,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局22 : 线性布局
	@布局配置([[父布局=线性布局22,@左外边距DP=10,字体大小=15,字体颜色=-16777216,内容="距离"]])
	变量 文本框8 : 文本框
	@布局配置([[父布局=线性布局21,宽度=-1,高度=-1,@左外边距DP=10]])
	变量 滚动布局1 : 滚动布局
	@布局配置([[父布局=滚动布局1,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局11 : 线性布局
	@布局配置([[父布局=线性布局11,宽度=-1,高度=-1,纵向布局=真,@左外边距DP=10,@右外边距DP=10,@下外边距DP=10]])
	变量 线性布局19 : 线性布局

	//声明
	变量 设置_设定 : 设置_设定

	//变量
	变量 json全局 : JSON对象
	变量 distance全局 : JSON对象

	事件 编辑器_资源编辑器_迷雾_编辑 :创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局5,设置相关路径)
			结束 如果
		结束 如果
		//退出按钮事件
		事件 退出界面:被单击()
			关闭窗口()
		结束 事件
		//获取名称
		文本框1.内容 = 取文件名(其他_其他.读缓存("resource_editor_fogs_path"))
		//获取名称+是否显示描述
		如果 设置_设定.获取开关("ResourceEditorItemForgsShowDescription") 则
			文本框1.内容 = 文本框1.内容 + "（" + 列表描述(取文件名(其他_其他.读缓存("resource_editor_fogs_path"))) + "）"
		结束 如果
		//加载方法
		菜单()
		读取(其他_其他.读缓存("resource_editor_fogs_path"))
		//显示迷雾原键名
		如果 设置_设定.获取开关("ResourceEditorForgsOriginalKeyName") 则
			文本框3.内容 = "format_version"
			文本框4.内容 = "minecraft:fog_settings"
			文本框5.内容 = "description"
			文本框6.内容 = "identifier"
			文本框8.内容 = "distance"
		结束 如果
		//订阅事件
		订阅事件()
	结束 事件

	//显示列表描述
	变量 结果 : 文本 = "获取失败！"
	方法 列表描述(键 : 文本) : 文本
		开始俘获异常()
		变量 jsonss : JSON对象 = 读入资源文件(本对象,"editor/resource_editor/fogs/fogs_describe.json")
		结果 = jsonss[键].到文本()
		俘获所有异常()
		结果 = "获取失败，错误日志：" + 取俘获异常().取异常信息()
		结束俘获异常()
		返回 结果
	结束 方法

	方法 菜单()
		事件 线性布局7:被单击()
			变量 XPopup : XPopup附着弹窗
			变量 项目 : 文本[] = {"重新加载","新建组件","确定保存"}
			XPopup.列表项目 = 项目
			XPopup.附着组件 = 线性布局7
			XPopup.动画(XPopup动画.滑动_右上)
			XPopup.半透明(假)
			XPopup.亮色状态栏(真)
			//设置夜间模式
			如果 设置_设定.获取开关("NightMode") 则
				XPopup.暗色主题(真)
			结束 如果
			XPopup.显示()
			//项目被点击
			事件 XPopup:列表被单击(索引 : 整数,文本 : 文本)
				假如 索引
					是 0
						读取(其他_其他.读缓存("resource_editor_fogs_path"))
					是 1
						创建distance()
					是 2
						保存()
				结束 假如
			结束 事件
		结束 事件
	结束 方法

	//读取里面的文件
	方法 读取(json路径 : 文本)
		//变量
		变量 json : JSON对象 = 读入资源文件(本对象,json路径)
		变量 format_version : 文本 = json["format_version"]
		变量 minecraft_fog_settings : JSON对象 = json["minecraft:fog_settings"]
		变量 description : JSON对象 = minecraft_fog_settings["description"]
		变量 identifier : 文本 = description["identifier"]
		变量 distance : JSON对象 = minecraft_fog_settings["distance"]
		distance全局 = distance
		//将json赋予json全局，方便后面调用
		json全局 = json
		//设置控线
		编辑框2.内容 = format_version
		编辑框4.内容 = identifier
		//加载distance列表
		distance_list(distance全局)
	结束 方法

	方法 distance_list(distance : JSON对象)
		//json
		变量 jsondescribe : JSON对象 = 读入资源文件(本对象,"editor/resource_editor/fogs/describe.json")
		//清空所有组件，防止多个列表
		线性布局19.移除所有组件()
		//循环
		循环(i, 0, 取数组长度(distance.键名))
			//声明组件
			变量 列表 : 文本框
			//json
			变量 内容 : 文本 = 数组到集合(distance.键名).取成员(i)
			//设置列表属性
			列表.标记 = 内容
			列表.内容 = 内容 + "（" + jsondescribe[内容].到文本() + "）"
			列表.字体颜色 = 0XFF000000
			如果 设置_设定.获取开关("NightMode") 则
				列表.字体颜色 = 0XFFFFFFFF
			结束 如果
			列表.背景颜色 = 0X00000000
			列表.内边距DP = 10
			列表.水波纹效果 = 真
			线性布局19.添加组件(列表)
			//事件
			事件 列表:被单击()
				读取distance(distance[列表.标记.到文本()].到文本(),列表.标记.到文本())
			结束 事件
			//删除
			事件 列表:被长按()
				删除distance(列表.标记.到文本(),列表)
			结束 事件
		结束 循环
	结束 方法

	方法 读取distance(json内容 : 文本,名称:文本)
		//变量
		变量 json : JSON对象 = json内容
		变量 编辑对话框 : 对话框
		变量 编辑对话框布局 : 编辑器_资源编辑器_迷雾_距离编辑
		//对话框
		编辑对话框.自定义布局 = 编辑对话框布局
		编辑对话框.显示()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			编辑对话框布局.线性布局1.背景颜色 = 0XFF333333
			编辑对话框布局.文本框1.字体颜色 = 0XFFFFFFFF
			编辑对话框布局.文本框2.字体颜色 = 0XFFFFFFFF
			编辑对话框布局.文本框3.字体颜色 = 0XFFFFFFFF
			编辑对话框布局.文本框4.字体颜色 = 0XFFFFFFFF
			编辑对话框布局.文本框5.字体颜色 = 0XFFFFFFFF
			编辑对话框布局.文本框6.字体颜色 = 0XFFFFFFFF
			编辑对话框布局.文本框7.字体颜色 = 0XFFFFFFFF
			编辑对话框布局.编辑框1.字体颜色 = 0XFFFFFFFF
			编辑对话框布局.编辑框2.字体颜色 = 0XFFFFFFFF
			编辑对话框布局.编辑框3.字体颜色 = 0XFFFFFFFF
			编辑对话框布局.编辑框4.字体颜色 = 0XFFFFFFFF
			编辑对话框布局.编辑框1.提示文本颜色 = 0XFF999999
			编辑对话框布局.编辑框2.提示文本颜色 = 0XFF999999
			编辑对话框布局.编辑框3.提示文本颜色 = 0XFF999999
			编辑对话框布局.编辑框4.提示文本颜色 = 0XFF999999
		结束 如果
		//设置编辑框
		开始俘获异常()
		编辑对话框布局.编辑框1.内容 = json["fog_start"].到文本()
		编辑对话框布局.编辑框2.内容 = json["fog_end"].到文本()
		编辑对话框布局.编辑框3.内容 = json["fog_color"].到文本()
		编辑对话框布局.编辑框4.内容 = json["render_distance_type"].到文本()
		俘获所有异常()
		编辑对话框.关闭()
		弹出提示2("读取失败，错误日志："+取俘获异常().取异常信息())
		结束俘获异常()
		//保存
		事件 编辑对话框布局.线性布局保存:被单击()
			开始俘获异常()
			//json
			变量 distance : JSON对象 = distance全局
			变量 dist : JSON对象
			dist["fog_start"] = 编辑对话框布局.编辑框1.内容.到小数()
			dist["fog_end"] = 编辑对话框布局.编辑框2.内容.到小数()
			dist["fog_color"] = 编辑对话框布局.编辑框3.内容
			dist["render_distance_type"] = 编辑对话框布局.编辑框4.内容
			distance[名称] = dist
			distance全局 = distance
			//提示
			弹出成功提示("修改完成！")
			编辑对话框.关闭()
			俘获所有异常()
			编辑对话框.关闭()
			弹出提示2("保存失败，错误日志："+取俘获异常().取异常信息())
			结束俘获异常()
		结束 事件
		//取消
		事件 编辑对话框布局.线性布局取消:被单击()
			编辑对话框.关闭()
		结束 事件
	结束 方法

	方法 创建distance()
		//变量
		变量 创建对话框 : 对话框
		变量 创建对话框布局 : 编辑器_资源编辑器_迷雾_距离创建
		//对话框
		创建对话框.自定义布局 = 创建对话框布局
		创建对话框.显示()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			创建对话框布局.线性布局1.背景颜色 = 0XFF333333
			创建对话框布局.文本框1.字体颜色 = 0XFFFFFFFF
			创建对话框布局.文本框2.字体颜色 = 0XFFFFFFFF
			创建对话框布局.文本框6.字体颜色 = 0XFFFFFFFF
			创建对话框布局.文本框7.字体颜色 = 0XFFFFFFFF
			创建对话框布局.编辑框1.字体颜色 = 0XFFFFFFFF
			创建对话框布局.编辑框1.提示文本颜色 = 0XFF999999
		结束 如果
		//json
		变量 jsonsz : JSON数组 = 读入资源文件(本对象,"editor/resource_editor/fogs/create.json")
		//加载列表
		//清空所有组件，防止多个列表
		创建对话框布局.线性布局7.移除所有组件()
		//循环
		循环(i, 0, jsonsz.长度)
			//声明组件
			变量 列表 : 文本框
			//json
			变量 jsons : JSON对象 = jsonsz.取JSON对象(i)
			//设置列表属性
			列表.标记 = jsons["id"].到文本()
			列表.内容 = jsons["id"].到文本() + " (" + jsons["name"] + ")"
			列表.字体颜色 = 0XFF000000
			如果 设置_设定.获取开关("NightMode") 则
				列表.字体颜色 = 0XFFFFFFFF
			结束 如果
			列表.背景颜色 = 0X00000000
			列表.内边距DP = 10
			列表.水波纹效果 = 真
			创建对话框布局.线性布局7.添加组件(列表)
			//事件
			事件 列表:被单击()
				创建对话框布局.编辑框1.内容 = 列表.标记.到文本()
			结束 事件
		结束 循环
		//保存
		事件 创建对话框布局.线性布局保存:被单击()
			如果 创建对话框布局.编辑框1.内容.替换(" ","") == "" 则
				创建对话框布局.文本框6.内容 = "编辑框内不能为空！"
				变量 倒计时 : 倒计时器
				倒计时.开始倒计时(2000L,1000L)
				事件 倒计时:倒计时结束()
					创建对话框布局.文本框6.内容 = "创建"
				结束 事件
			否则
				开始俘获异常()
				//json
				变量 distance : JSON对象 = distance全局
				变量 dist : JSON对象
				dist["fog_start"] = 0.00
				dist["fog_end"] = 0.00
				dist["fog_color"] = "#685f70"
				dist["render_distance_type"] = "fixed"
				distance[创建对话框布局.编辑框1.内容] = dist
				distance全局 = distance
				//提示
				弹出成功提示("创建完成！")
				distance_list(distance全局)
				创建对话框.关闭()
				俘获所有异常()
				创建对话框.关闭()
				弹出提示2("创建失败，错误日志："+取俘获异常().取异常信息())
				结束俘获异常()
			结束 如果
		结束 事件
		//取消
		事件 创建对话框布局.线性布局取消:被单击()
			创建对话框.关闭()
		结束 事件
	结束 方法

	//删除distance
	方法 删除distance(名称:文本,控件名称 : 文本框)
		开始俘获异常()
		//jsom
		变量 distance : JSON对象 = distance全局
		distance.移除(名称)
		distance全局 = distance
		控件名称.可视 = 假
		弹出成功提示("删除成功！")
		俘获所有异常()
		弹出提示2("删除失败，错误日志："+取俘获异常().取异常信息())
		结束俘获异常()
	结束 方法

	//保存
	方法 保存()
		//json
		变量 根对象 : JSON对象 = json全局
		根对象["format_version"] = 编辑框2.内容
		变量 minecraft_fog_settings : JSON对象
		变量 description : JSON对象
		description["identifier"] = 编辑框4.内容
		minecraft_fog_settings["description"] = description
		minecraft_fog_settings["distance"] = distance全局
		根对象["minecraft:fog_settings"] = minecraft_fog_settings
		json全局 = 根对象
		//输出文件
		变量 文件名称 : 文本 = 取文件名(其他_其他.读缓存("resource_editor_fogs_path"))
		变量 输出路径 : 文本 = 其他_变量.项目目录 + 其他_其他.读缓存("ProjectName") + "/resource/fogs/" + 文件名称
		//检测是否开启强制覆盖
		如果 设置_设定.获取开关("ResourceEditorItemForgsForceOverride") 则
			写出文本文件(输出路径,json全局.到文本(4))
			项目记录(输出路径)
			弹出成功通知("文件保存完毕！")
		否则
			如果 文件是否存在(输出路径) 则
				变量 覆盖提示 : DX通知
				//设置夜间模式
				如果 设置_设定.获取开关("NightMode") 则
					覆盖提示.主题(DX主题.暗色)
				结束 如果
				覆盖提示.警告图标()
				覆盖提示.标题("提示")
				覆盖提示.内容("你的迷雾中有相同的文件，是否覆盖它")
				覆盖提示.按钮("覆盖")
				覆盖提示.显示()
				事件 覆盖提示:按钮被单击() : 逻辑型
					写出文本文件(输出路径,json全局.到文本(4))
					项目记录(输出路径)
					弹出成功通知("文件覆盖完毕！")
					返回 假
				结束 事件
			否则
				写出文本文件(输出路径,json全局.到文本(4))
				项目记录(输出路径)
				弹出成功通知("文件保存完毕！")
			结束 如果
		结束 如果
	结束 方法

	//项目记录
	方法 项目记录(路径 : 文本)
		//项目记录
		变量 模块_项目 : 模块_项目
		模块_项目.初始化()
		模块_项目.assets图标 = "icon/item/fogs_list.png"
		模块_项目.名称 = 取文件前缀名(路径)
		模块_项目.标识符 = 取文件前缀名(路径)
		模块_项目.描述 = "这个是资源包迷雾"
		模块_项目.种类 = 模块_项目种类.资源包
		模块_项目.分类 = "fogs"
		模块_项目.路径 = 路径
		模块_项目.保存()
	结束 方法

	//设置夜间模式
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		退出界面.图片资源 = 编辑器_资源编辑器_迷雾_资源.白色返回图标
		图片框1.图片资源 = 编辑器_资源编辑器_迷雾_资源.白色菜单图标
		文本框1.字体颜色 = 0XFFFFFFFF
		线性布局5.背景颜色 = 0XFF222222
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
		文本框5.字体颜色 = 0XFFFFFFFF
		文本框4.字体颜色 = 0XFFFFFFFF
		文本框6.字体颜色 = 0XFFFFFFFF
		文本框8.字体颜色 = 0XFFFFFFFF
		编辑框2.提示文本颜色 = 0XFF999999
		编辑框2.字体颜色 = 0XFFFFFFFF
		编辑框4.提示文本颜色 = 0XFF999999
		编辑框4.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类


类 编辑器_资源编辑器_迷雾_距离编辑 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,背景颜色=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,内容="编辑",字体大小=16,字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,@左外边距DP=10,字体颜色=-16777216,内容="雾开始(fog_start)："]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2,@右外边距DP=10,背景颜色=0,字体大小=14,字体颜色=-16777216,左内边距DP=5,右内边距DP=5,单行输入=真,内容="",提示文本="请输入小数"]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=线性布局3,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,@左外边距DP=10,字体颜色=-16777216,内容="雾结束(fog_end)："]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-2,@右外边距DP=10,背景颜色=0,字体大小=14,字体颜色=-16777216,左内边距DP=5,右内边距DP=5,单行输入=真,提示文本="请输入小数",内容=""]])
	变量 编辑框2 : 编辑框
	@布局配置([[父布局=线性布局3,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,@左外边距DP=10,字体颜色=-16777216,内容="雾颜色(fog_color)："]])
	变量 文本框4 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-1,高度=-2,@右外边距DP=10,背景颜色=0,字体大小=14,字体颜色=-16777216,左内边距DP=5,右内边距DP=5,单行输入=真,提示文本="请输入颜色,示例：#ABD2FF",内容=""]])
	变量 编辑框3 : 编辑框
	@布局配置([[父布局=线性布局3,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,@左外边距DP=10,字体颜色=-16777216,内容="渲染距离类型(render_distance_type)："]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局7,宽度=-1,高度=-2,@右外边距DP=10,背景颜色=0,字体大小=14,字体颜色=-16777216,左内边距DP=5,右内边距DP=5,单行输入=真,内容="",提示文本="请输入类型"]])
	变量 编辑框4 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=40,对齐方式=17,水波纹效果=真]])
	变量 线性布局保存 : 线性布局
	@布局配置([[父布局=线性布局保存,字体颜色=-16777216,粗体=真,内容="保存"]])
	变量 文本框6 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=40,对齐方式=17,水波纹效果=真]])
	变量 线性布局取消 : 线性布局
	@布局配置([[父布局=线性布局取消,字体颜色=-16777216,粗体=假,内容="取消"]])
	变量 文本框7 : 文本框

结束 类

类 编辑器_资源编辑器_迷雾_距离创建 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,背景颜色=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,内容="创建",字体大小=16,字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,@左外边距DP=10,字体颜色=-16777216,内容="名称："]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2,@右外边距DP=10,背景颜色=0,字体大小=14,字体颜色=-16777216,左内边距DP=5,右内边距DP=5,单行输入=真,内容="",提示文本="请输入名称，例如water、lava"]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=线性布局3,宽度=-1,高度DP=200]])
	变量 滚动布局1 : 滚动布局
	@布局配置([[父布局=滚动布局1,宽度=-1,对齐方式=8388627,纵向布局=真,高度=-1]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=40,对齐方式=17,水波纹效果=真]])
	变量 线性布局保存 : 线性布局
	@布局配置([[父布局=线性布局保存,字体颜色=-16777216,粗体=真,内容="创建"]])
	变量 文本框6 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=40,对齐方式=17,水波纹效果=真]])
	变量 线性布局取消 : 线性布局
	@布局配置([[父布局=线性布局取消,字体颜色=-16777216,粗体=假,内容="取消"]])
	变量 文本框7 : 文本框


结束 类

类 编辑器_资源编辑器_迷雾_列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,水波纹效果=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,圆角=1,@左外边距DP=5,@右外边距DP=5,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-1,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=45,高度=-1,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=30,高度DP=30,图片资源="../../../../资源库/图标/editor/resource_editor/fogs/fogs_list.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,@左外边距DP=5,字体大小=14,字体颜色=-16777216,单行显示=真]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局4,@左外边距DP=5,字体大小=11,字体颜色=-16777216,单行显示=真,@上外边距DP=2]])
	变量 文本框2 : 文本框

	//声明
	变量 设置_设定 : 设置_设定

	事件 编辑器_资源编辑器_迷雾_列表:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		卡片布局1.卡片背景颜色 = 0XFF333333
		线性布局2.背景颜色 = 0XFF333333
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类

类 编辑器_资源编辑器_迷雾_资源

	@静态
	变量 白色返回图标 : 图片资源 =  "../../../../资源库/图标/back/default_backicon2.png"

	@静态
	变量 白色菜单图标 : 图片资源 =  "../../../../资源库/图标/editor/resource_editor/menu2.png"


结束 类