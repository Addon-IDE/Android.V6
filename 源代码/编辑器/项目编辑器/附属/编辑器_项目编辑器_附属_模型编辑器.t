类 编辑器_项目编辑器_附属_模型编辑器 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=15,高度DP=15,图片资源="../../../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,字体大小=15,内容="项目",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局2,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,粗体=真,字体大小=16,内容="模型编辑器",字体颜色=-16777216]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,@下外边距DP=40,列数=2,@上外边距DP=5]])
	变量 自定义宫格列表框1 : 自定义宫格列表框
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=81]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,高度DP=40,宽度=-1,对齐方式=17,背景颜色=-14640927,水波纹效果=真]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,字体颜色=-1,字体大小=15,内容="导入模型"]])
	变量 文本框1 : 文本框

	//声明
	变量 设置_设定 : 设置_设定
	变量 列表数组 : 文本集合
	变量 文件选择 : 文件选择器
	变量 信息 : 启动信息

	//变量

	事件 编辑器_项目编辑器_附属_模型编辑器:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//退出按钮
		事件 图片框1:被单击()
			关闭窗口()
		结束 事件
		事件 文本框2:被单击()
			关闭窗口()
		结束 事件
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局4,设置相关路径)
			结束 如果
		结束 如果
		//加载列表
		变量 path : 文本 = 其他_变量.数据目录 + "project/model/"
		如果 文件是否存在(path) 则
			加载列表(path)
		否则
			写出文本文件(path + "null","")
			删除文件(path + "null")
			加载列表(path)
		结束 如果
		//加载方法

		//订阅事件
		订阅事件()
	结束 事件

	//加载列表
	方法 加载列表(路径 : 文本,刷新 : 逻辑型 = 假)
		如果 刷新 则
			列表数组 = 文件操作.取子文件集合(路径)
			自定义宫格列表框1.更新项目(列表数组.长度)
		否则
			事件 自定义宫格列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
				变量 布局 : 编辑器_项目编辑器_附属_模型编辑器_列表?
				如果 项目布局 == 空 则
					布局 = 创建 编辑器_项目编辑器_附属_模型编辑器_列表
				否则
					布局 = 项目布局
				结束 如果
				变量 列表数据 : 文本 = 列表数组[索引]
				布局.文本框1.内容 = 取文件名(列表数据)
				//列表点击
				事件 布局.线性布局2:被单击()
					变量 文件内容 : 文本 = 读入文本文件(列表数据)
					信息.置入("path", 列表数据)
					信息.置入("json", 文件内容)
					置返回数据(2001, 信息)
					关闭窗口()
				结束 事件
				返回 布局
			结束 事件
			列表数组 = 文件操作.取子文件集合(路径)
			自定义宫格列表框1.更新项目(列表数组.长度)
		结束 如果
	结束 方法

	//导入模型
	事件 线性布局6:被单击()
		文件选择.选择文件(本对象,1000)
	结束 事件

	/*
	当窗口要求另一个窗口返回数据成功时，会触发该事件用于接收返回数据
	*/
	事件 编辑器_项目编辑器_附属_模型编辑器:获得返回数据(请求码 : 整数,结果码 : 整数,数据 : 启动信息)
		假如 请求码
			是 1000
				变量 路径 : 文本 = 文件选择.解析文件地址(本对象,数据)
				如果 文件是否存在(路径) 则
					如果 取文件后缀名(路径).到小写() == "json" 则
						变量 文件名 : 文本 = 取文件名(路径)
						变量 path : 文本 = 其他_变量.数据目录 + "project/model/"
						变量 最终路径 : 文本 = path + 文件名
						如果 复制文件(路径,最终路径) 则
							弹出成功提示("导入成功！")
							加载列表(path,真)
						否则
							弹出错误提示("导入失败！")
						结束 如果
					否则
						弹出错误提示("请你选择json的模型文件")
					结束 如果
				否则
					弹出错误提示("文件不存在！")
				结束 如果
		结束 假如
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		线性布局3.背景颜色 = 0XFF222222
		卡片布局1.卡片背景颜色 = 0XFF222222
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
		图片框1.图片资源 = 其他_资源.白色返回图标
		线性布局4.背景颜色 = 0XFF222222
	结束 方法

结束 类

类 编辑器_项目编辑器_附属_模型编辑器_列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=120,@左外边距DP=5,@右外边距DP=5,圆角=15,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,对齐方式=17,纵向布局=真,背景颜色=-1,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=60,高度DP=60,图片资源="../../../../../资源库/图标/editor/project_editor/model_editor/3d.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,@左外边距DP=0,@上外边距DP=10,粗体=真,字体颜色=-16777216,对齐方式=17]])
	变量 文本框1 : 文本框


	//声明
	变量 设置_设定 : 设置_设定

	事件 编辑器_项目编辑器_附属_模型编辑器_列表:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置夜间模式
	方法 设置夜间模式()
		卡片布局1.卡片背景颜色 = 0XFF333333
		线性布局2.背景颜色 = 0XFF333333
		文本框1.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类