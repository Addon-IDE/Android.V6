类 其他_工具_图片编辑 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局01 : 线性布局
	@布局配置([[父布局=线性布局01,高度DP=50,宽度=-1]])
	变量 相对布局01 : 相对布局
	@布局配置([[父布局=相对布局01,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局02 : 线性布局
	@布局配置([[父布局=线性布局02,宽度DP=15,高度DP=15,图片资源="../../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框01 : 图片框
	@布局配置([[父布局=线性布局02,字体大小=15,内容="项目",字体颜色=-16777216]])
	变量 文本框02 : 文本框
	@布局配置([[父布局=线性布局02,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0]])
	变量 卡片布局01 : 卡片布局
	@布局配置([[父布局=卡片布局01,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局03 : 线性布局
	@布局配置([[父布局=线性布局02,@左外边距DP=10,粗体=真,字体大小=16,内容="图片编辑",字体颜色=-16777216]])
	变量 文本框03 : 文本框
	@布局配置([[父布局=相对布局01,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,高度DP=50,宽度DP=50,纵向布局=真,对齐方式=17,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/tools/picture_editor/write.xml"]])
	变量 图片框2 : 图片框
	@布局配置([[父布局=线性布局1,高度DP=50,宽度DP=50,纵向布局=真,对齐方式=17,水波纹效果=真]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/tools/picture_editor/image.xml"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局1,高度DP=50,宽度DP=50,纵向布局=真,对齐方式=17,水波纹效果=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/tools/picture_editor/save.xml"]])
	变量 图片框3 : 图片框
	@布局配置([[父布局=线性布局01,宽度=-1,高度=-1]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=81]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度=-1,高度DP=50,背景颜色=-1,对齐方式=17]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=50,高度DP=50,对齐方式=17,水波纹效果=真]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/tools/picture_editor/brush_size.xml",拉伸方式=1]])
	变量 图片框4 : 图片框
	@布局配置([[父布局=线性布局7,宽度DP=50,高度DP=50,对齐方式=17,水波纹效果=真]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/tools/picture_editor/eraser.xml",拉伸方式=1]])
	变量 图片框9 : 图片框
	@布局配置([[父布局=线性布局7,宽度DP=50,高度DP=50,对齐方式=17,水波纹效果=真]])
	变量 线性布局11 : 线性布局
	@布局配置([[父布局=线性布局11,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/tools/picture_editor/palette.xml",拉伸方式=1]])
	变量 图片框11 : 图片框
	@布局配置([[父布局=线性布局7,宽度DP=50,高度DP=50,对齐方式=17,水波纹效果=真]])
	变量 线性布局12 : 线性布局
	@布局配置([[父布局=线性布局12,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/tools/picture_editor/eyedropper.xml",拉伸方式=1]])
	变量 图片框12 : 图片框
	@布局配置([[父布局=线性布局7,宽度DP=50,高度DP=50,对齐方式=17,水波纹效果=真]])
	变量 线性布局10 : 线性布局
	@布局配置([[父布局=线性布局10,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/tools/picture_editor/file_import.xml",拉伸方式=1]])
	变量 图片框6 : 图片框
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=17]])
	变量 线性布局13 : 线性布局
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=350]])
	变量 相对布局2 : 相对布局
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,对齐方式=17]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-1,高度=-1,图片路径=""]])
	变量 图片框5 : 图片框
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,对齐方式=17]])
	变量 线性布局14 : 线性布局
	@布局配置([[父布局=线性布局14,宽度=-1,高度=-1]])
	变量 画板1 : 画板

	//声明
	变量 设置_设定 : 设置_设定

	//变量
	变量 图片路径 : 文本
	变量 读写切换 : 逻辑型 = 假
	变量 橡皮擦开关 : 逻辑型 = 假
	变量 取色器开关 : 逻辑型 = 假
	变量 文件选择器:文件选择器

	变量 画笔颜色 : 文本 = "#FF000000"


	事件 其他_工具_图片编辑:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//退出按钮
		事件 图片框01:被单击()
			关闭窗口()
		结束 事件
		事件 文本框02:被单击()
			关闭窗口()
		结束 事件
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//初始化图片
		图片路径 = 其他_其他.读缓存("tools_picture_editor_v1_path1")
		图片框5.图片路径 = 图片路径
		//初始画板
		画板1.开始涂鸦()
		画板1.设置画笔颜色 = "#FF000000"
		画笔颜色 = "#FF000000"
		//加载方法
		初始化()
		上方工具栏()
		下方工具栏()
		//订阅事件
		订阅事件()
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局02.背景颜色 = 0XFF333333
		线性布局03.背景颜色 = 0XFF222222
		卡片布局01.卡片背景颜色 = 0XFF222222
		文本框02.字体颜色 = 0XFFFFFFFF
		文本框03.字体颜色 = 0XFFFFFFFF
		图片框01.图片资源 = 其他_资源.白色返回图标
		图片框2.图片资源 = 其他_工具_图片编辑_资源.写图标2
		图片框1.图片资源 = 其他_工具_图片编辑_资源.预览图片白色图标
		图片框3.图片资源 = 其他_工具_图片编辑_资源.保存白色图标
		图片框4.图片资源 = 其他_工具_图片编辑_资源.画笔大小白色图标
		图片框9.图片资源 = 其他_工具_图片编辑_资源.橡皮擦白色图标
		图片框11.图片资源 = 其他_工具_图片编辑_资源.颜色选择白色图片
		图片框12.图片资源 = 其他_工具_图片编辑_资源.取色器白色图片
		图片框6.图片资源 = 其他_工具_图片编辑_资源.选择图片白色图片
		相对布局1.背景颜色 = 0XFF222222
		线性布局7.背景颜色 = 0XFF333333
	结束 方法

	//初始化
	方法 初始化()
		//读取画壁默认设置
		如果 文件是否存在(其他_变量.数据目录 + "tools/picture_editor/brush_size.d") 则
			画板1.设置画笔大小 = 读入文本文件(其他_变量.数据目录 + "tools/picture_editor/brush_size.d").到整数()
		否则
			画板1.设置画笔大小 = 40
		结束 如果
	结束 方法

	//加载上方工具栏
	方法 上方工具栏()
		//读写切换功能
		事件 线性布局2:被单击()
			如果 读写切换 则
				读写切换 = 假
				画板1.开始涂鸦()
				//设置夜间模式
				如果 设置_设定.获取开关("NightMode") 则
					图片框2.图片资源 = 其他_工具_图片编辑_资源.写图标2
				否则
					图片框2.图片资源 = 其他_工具_图片编辑_资源.写图标
				结束 如果
			否则
				画板1.清空画板()
				读写切换 = 真
				画板1.停止涂鸦()
				//设置夜间模式
				如果 设置_设定.获取开关("NightMode") 则
					图片框2.图片资源 = 其他_工具_图片编辑_资源.读图标2
				否则
					图片框2.图片资源 = 其他_工具_图片编辑_资源.读图标
				结束 如果
			结束 如果
		结束 事件
		//图片预览功能
		事件 线性布局4:被单击()
			变量 图片预览对话框 : DX基础对话框
			变量 图片预览布局 : 其他_工具_图片编辑_图片预览
			//设置夜间模式
			如果 设置_设定.获取开关("NightMode") 则
				图片预览对话框.主题(DX主题.暗色)
			结束 如果
			图片预览对话框.标题("图片预览")
			图片预览对话框.自定义布局(图片预览布局)
			图片预览对话框.按钮1("关闭")
			图片预览布局.图片框1.图片对象 = 组件截图工具.截图(相对布局2)
			图片预览对话框.显示()
		结束 事件
		//图片保存功能
		事件 线性布局5:被单击()
			变量 控件转图片:控件转图片
			写出文本文件(其他_其他.读缓存("tools_picture_editor_v1_path2"),"")
			如果 文件是否存在(其他_其他.读缓存("tools_picture_editor_v1_path2")) 则
				删除文件(其他_其他.读缓存("tools_picture_editor_v1_path2"))
				如果 控件转图片.控件转图片(相对布局2,其他_其他.读缓存("tools_picture_editor_v1_path2"),,,图片格式.PNG格式) 则
					弹出成功提示("保存成功")
				否则
					弹出错误提示("保存失败，请尝试重新点击")
				结束 如果
			否则
				写出文本文件(其他_其他.读缓存("tools_picture_editor_v1_path2"),"")
				删除文件(其他_其他.读缓存("tools_picture_editor_v1_path2"))
			结束 如果
		结束 事件
	结束 方法

	//加载下方工具栏
	方法 下方工具栏()
		//画笔大小
		事件 线性布局8:被单击()
			变量 画笔大小对话框 : DX基础对话框
			变量 画笔大小布局 : 其他_工具_图片编辑_笔刷大小
			//设置夜间模式
			如果 设置_设定.获取开关("NightMode") 则
				画笔大小对话框.主题(DX主题.暗色)
				画笔大小布局.文本框1.字体颜色 = 0XFFFFFFFF
			结束 如果
			画笔大小对话框.标题("画笔大小")
			画笔大小对话框.自定义布局(画笔大小布局)
			画笔大小对话框.按钮1("确定")
			画笔大小对话框.显示()
			//加载画笔预设
			如果 文件是否存在(其他_变量.数据目录 + "tools/picture_editor/brush_size.d") 则
				画笔大小布局.数值气泡拖动条1.设置进度(读入文本文件(其他_变量.数据目录 + "tools/picture_editor/brush_size.d").到整数())
				画笔大小布局.文本框1.内容 = "画笔大小：" + 读入文本文件(其他_变量.数据目录 + "tools/picture_editor/brush_size.d").到整数()
			否则
				画笔大小布局.数值气泡拖动条1.设置进度(40)
				画笔大小布局.文本框1.内容 = "画笔大小：" + 40
			结束 如果
			//拖动条滑动事件
			事件 画笔大小布局.数值气泡拖动条1:进度被改变(当前进度 : 整数,是否人为改变 : 逻辑型)
				如果 是否人为改变 则
					画笔大小布局.文本框1.内容 = "画笔大小：" + 当前进度
				结束 如果
			结束 事件
			//确定事件
			事件 画笔大小对话框:按钮1被单击() : 逻辑型
				画板1.设置画笔大小 = 画笔大小布局.数值气泡拖动条1.获取进度()
				写出文本文件(其他_变量.数据目录 + "tools/picture_editor/brush_size.d",画笔大小布局.数值气泡拖动条1.获取进度().到文本())
				画笔大小对话框.关闭()
				返回 假
			结束 事件
		结束 事件
		//橡皮擦功能
		事件 线性布局9:被单击()
			如果 橡皮擦开关 则
				弹出成功通知("切换到画笔模式")
				橡皮擦开关 = 假
				画板1.设置画笔颜色 = 画笔颜色
			否则
				弹出成功通知("切换到橡皮擦模式")
				橡皮擦开关 = 真
				画板1.设置画笔颜色 = "#FFFFFFFF"
			结束 如果
		结束 事件
		事件 线性布局9:被长按()
			画板1.清空画板()
			弹出成功提示("清除画板成功")
		结束 事件
		//笔刷颜色
		事件 线性布局11:被单击()
			画板1.清空画板()
			变量 颜色对话框 : DX基础对话框
			变量 颜色UI : 其他_工具_图片编辑_笔刷颜色
			颜色对话框.标题("笔刷颜色")
			//设置夜间模式
			如果 设置_设定.获取开关("NightMode") 则
				颜色对话框.主题(DX主题.暗色)
				颜色UI.文本框1.字体颜色 = 0XFFFFFFFF
			结束 如果
			颜色对话框.自定义布局(颜色UI)
			颜色对话框.按钮1("确定")
			颜色对话框.按钮2("关闭")
			//设置布局
			颜色UI.调色盘1.设置初始颜色 = -1
			//选择
			事件 颜色UI.调色盘1:调色盘被触摸(颜色 : 整数,用户触摸 : 逻辑型,来自应用 : 逻辑型)
				变量 颜色值 : 文本 = 颜色操作.颜色值到文本(颜色,真,真)
				颜色UI.文本框1.字体颜色 = 颜色
				颜色UI.文本框1.内容 = 颜色值
				事件 颜色对话框:按钮1被单击() : 逻辑型
					画板1.设置画笔颜色 = 颜色值
					画笔颜色 = 颜色值
					返回 假
				结束 事件
			结束 事件
			//显示
			颜色对话框.显示()
		结束 事件
		//取色器
		事件 线性布局12:被单击()
			如果 取色器开关 则
				弹出成功通知("关闭取色器开关")
				取色器开关 = 假
				如果 设置_设定.获取开关("NightMode") 则
					线性布局12.背景颜色 = 0XFF333333
				否则
					线性布局12.背景颜色 = 0XFFFFFFFF
				结束 如果
				画板1.开始涂鸦()
				线性布局14.可视 = 真
			否则
				弹出成功通知("开启取色器")
				画板1.停止涂鸦()
				取色器开关 = 真
				线性布局14.可视 = 假
			结束 如果
			事件 图片框5:被触摸(来源事件 : 触摸事件) : 逻辑型
				变量 x:整数
				变量 y:整数
				变量 图像:位图对象 = 位图对象.从文件路径创建位图(图片路径)
				容错处理()
				x=(来源事件.取横坐标()*图像.宽度/图片框5.宽度).到整数()//图片框宽度 与 图片框点击位置x坐标 的比值 和 图片宽度 与 图片取色位置x坐标 的比值 相等
				y=(来源事件.取纵坐标()*图像.高度/图片框5.高度).到整数()//同上
				变量 颜色:整数 = 图像.取像素(x,y)
				如果 取色器开关 则
					画板1.设置画笔颜色 = 颜色操作.颜色值到文本(颜色,真,真)
					画笔颜色 = 颜色操作.颜色值到文本(颜色,真,真)
					线性布局12.背景颜色 = 颜色
				否则
					//设置夜间模式
					如果 设置_设定.获取开关("NightMode") 则
						线性布局12.背景颜色 = 0XFF333333
					否则
						线性布局12.背景颜色 = 0XFFFFFFFF
					结束 如果
				结束 如果
				结束容错()
				返回 真
			结束 事件
		结束 事件
		//导入图片
		事件 线性布局10:被单击()
			文件选择器.选择文件(本对象,0)
		结束 事件
	结束 方法
	
	//回调事件
	事件 其他_工具_图片编辑:获得返回数据(请求码 : 整数,结果码 : 整数,数据 : 启动信息)
		假如 请求码
			是 0
				变量 新的文件路径 : 文本 = 文件选择器.解析文件地址(本对象,数据)
		        如果 取文件后缀名(新的文件路径).到小写() == "png" || 取文件后缀名(新的文件路径).到小写() == "jpg" 则
		        	图片框5.图片路径 = 新的文件路径
					否则
						弹出警告提示("你选择的文件不是jpg或png格式")
		        结束 如果
		结束 假如
	结束 事件

结束 类

类 其他_工具_图片编辑_加载

	@静态
	方法 加载图片(输入路径 : 文本,输出路径 : 文本)
		其他_其他.写缓存("tools_picture_editor_v1_path1",输入路径)
		其他_其他.写缓存("tools_picture_editor_v1_path2",输出路径)
	结束 方法

结束 类



类 其他_工具_图片编辑_笔刷大小 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=100,对齐方式=17,纵向布局=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,字体颜色=-16777216,字体大小=16,内容="画笔大小: 0",对齐方式=17]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局2,宽度=-1,@左外边距DP=15,@右外边距DP=15,高度DP=30,@上外边距DP=8]])
	变量 数值气泡拖动条1 : 数值气泡拖动条

结束 类 

类 其他_工具_图片编辑_笔刷颜色 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,@上外边距DP=5]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度=-1,高度=900,@布局对齐方式=17]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,设置初始颜色=-1,显示明暗拖动条=真,显示透明度拖动条=真,@左外边距DP=20,@右外边距DP=20,@位于布局中间=真]])
	变量 调色盘1 : 调色盘
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=20,对齐方式=8388627,@上外边距DP=3]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,粗体=假,字体大小=14,字体颜色=-16777216]])
	变量 文本框1 : 文本框

结束 类 

类 其他_工具_图片编辑_图片预览 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=350]])
	变量 图片框1 : 图片框

结束 类 


类 其他_工具_图片编辑_资源

	@静态
	变量 读图标 : 图片资源 =  "../../../../资源库/图标/tools/picture_editor/read.xml"

	@静态
	变量 写图标 : 图片资源 =  "../../../../资源库/图标/tools/picture_editor/write.xml"

	@静态
	变量 读图标2 : 图片资源 =  "../../../../资源库/图标/tools/picture_editor/read2.xml"

	@静态
	变量 写图标2 : 图片资源 =  "../../../../资源库/图标/tools/picture_editor/write2.xml"

	@静态
	变量 预览图片白色图标 : 图片资源 =  "../../../../资源库/图标/tools/picture_editor/image2.xml"

	@静态
	变量 保存白色图标 : 图片资源 =  "../../../../资源库/图标/tools/picture_editor/save2.xml"

	@静态
	变量 画笔大小白色图标 : 图片资源 =  "../../../../资源库/图标/tools/picture_editor/brush_size2.xml"

	@静态
	变量 橡皮擦白色图标 : 图片资源 =  "../../../../资源库/图标/tools/picture_editor/eraser2.xml"

	@静态
	变量 颜色选择白色图片 : 图片资源 =  "../../../../资源库/图标/tools/picture_editor/palette2.xml"

	@静态
	变量 取色器白色图片 : 图片资源 =  "../../../../资源库/图标/tools/picture_editor/eyedropper2.xml"
	
	@静态
	变量 选择图片白色图片 : 图片资源 =  "../../../../资源库/图标/tools/picture_editor/file_import2.xml"

结束 类