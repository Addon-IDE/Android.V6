@安卓资源.图片("../../../../资源库/图标/mores/world_manager/attribute.png")
@安卓资源.图片("../../../../资源库/图标/mores/world_manager/backup.png")
@安卓资源.图片("../../../../资源库/图标/mores/world_manager/dat.png")
@安卓资源.图片("../../../../资源库/图标/mores/world_manager/delete.png")
@安卓资源.图片("../../../../资源库/图标/mores/world_manager/export.png")
@安卓资源.图片("../../../../资源库/图标/mores/world_manager/rb.png")

类 其他_管理_地图管理器 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=15,高度DP=15,图片资源="../../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,字体大小=15,内容="项目",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局2,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,粗体=真,字体大小=16,内容="地图管理器",字体颜色=-16777216]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,分割线高度=0]])
	变量 自定义列表框1 : 自定义列表框

	//声明
	变量 设置_设定 : 设置_设定
	变量 世界列表集合 : 文本集合

	事件 其他_管理_地图管理器:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//退出按钮
		事件 图片框1:被单击()
			关闭窗口()
		结束 事件
		事件 文本框2:被单击()
			关闭窗口()
		结束 事件
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局4,设置相关路径)
			结束 如果
		结束 如果
		//加载列表
		如果 设置_设定.获取开关("BasicOldMimecraft") 则
			加载世界列表(其他_变量.内部存储目录 + "games/com.mojang/minecraftWorlds")
		否则
			变量 世界文件路径 : 文本 = 其他_变量.内部存储目录 + "Android/data/" + 设置_设定.获取文本("BasicGamePackName") + "/files/games/com.mojang/minecraftWorlds"
			加载世界列表(世界文件路径)
		结束 如果
		//订阅事件
		订阅事件()
	结束 事件

	//被重新启动
	事件 其他_管理_地图管理器:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
	结束 事件

	方法 加载世界列表(路径 : 文本,刷新 : 逻辑型 = 假)
		如果 刷新 则
			//刷新
			世界列表集合 = 文件操作.取子文件集合(路径)
			自定义列表框1.更新项目(世界列表集合.长度)
		否则
			//加载自定义列表
			事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
				变量 布局 : 其他_管理_地图管理器_列表?
				如果 项目布局 == 空 则
					布局 = 创建 其他_管理_地图管理器_列表
				否则
					布局 = 项目布局
				结束 如果
				//显示到列表
				变量 文件路径 : 文本 = 世界列表集合[索引]
				如果 文件是否存在(文件路径 + "/world_icon.jpeg") 则
					布局.图片框1.图片路径 = 文件路径 + "/world_icon.jpeg"
				结束 如果
				如果 文件是否存在(文件路径 + "/levelname.txt") 则
					布局.世界名称文本框.内容 = 读入文本文件(文件路径 + "/levelname.txt")
				否则
					布局.世界名称文本框.内容 = "名称获取异常!"
				结束 如果
				布局.文件名文本框.内容 = 取文件名(文件路径)
				布局.日期文本框.内容 = 取文件修改时间(文件路径)
				//列表被点击
				事件 布局.线性布局2:被单击()
					世界菜单(文件路径)
				结束 事件
				返回 布局
			结束 事件
			//转换为集合
			世界列表集合 = 文件操作.取子文件集合(路径)
			自定义列表框1.更新项目(世界列表集合.长度)
			//检测是否为空项目
			如果 世界列表集合.长度 == 0 则

			结束 如果
		结束 如果
	结束 方法

	方法 世界菜单(世界路径 : 文本)
		//对话框
		关闭窗口()
		变量 Array : 文本[] = {"世界属性","备份世界","导出世界","资源包管理","行为包管理","level.dat","删除世界"}
		变量 Icon : 整数[] = {R资源.取图片id("attribute"),R资源.取图片id("backup"),R资源.取图片id("export"),R资源.取图片id("rb"),R资源.取图片id("rb"),R资源.取图片id("dat"),R资源.取图片id("delete")}
		变量 菜单对话框 : XPopup列表弹窗
		菜单对话框.标题 = "菜单"
		菜单对话框.列表项目 = Array
		菜单对话框.列表图标 = Icon
		如果 设置_设定.获取开关("NightMode") 则
			菜单对话框.暗色主题(真)
		结束 如果
		菜单对话框.动画(XPopup动画.滑动_上)
		菜单对话框.显示()
		//列表被点击
		事件 菜单对话框:列表被单击(索引 : 整数,文本 : 文本)
			假如 索引
				是 0
					变量 文件属性 : 其他_工具_文件属性
					文件属性.打开(世界路径)
				是 1
					写出文本文件(其他_变量.备份目录 + "worlds/a","")
					删除文件(其他_变量.备份目录 + "worlds/a")
					如果 ZIP压缩(世界路径,其他_变量.备份目录 + "worlds/" + 取文件名(世界路径) + ".zip") 则
						弹出成功提示("备份成功！")
					否则
						弹出错误提示("备份失败！")
					结束 如果
				是 2	
					如果 ZIP压缩(世界路径,其他_变量.内部存储目录 + 取文件名(世界路径) + ".zip") 则
						弹出成功提示("导出到手机根目录成功！")
					否则
						弹出错误提示("导出失败！")
					结束 如果
				是 3
					变量 路径S : 启动信息
					路径S.置入("内容",世界路径 + "/resource_packs")
					//产生资源包行为包文件夹,防止闪退
					写出文本文件(世界路径 + "/resource_packs/a","")
					写出文本文件(世界路径 + "/behavior_packs/a","")
					删除文件(世界路径 + "/resource_packs/a")
					删除文件(世界路径 + "/behavior_packs/a")
					切换窗口(其他_附件_资源包管理器,路径S)
				是 4
					变量 路径S : 启动信息
					路径S.置入("内容",世界路径 + "/behavior_packs")
					//产生资源包行为包文件夹,防止闪退
					写出文本文件(世界路径 + "/behavior_packs/a","")
					写出文本文件(世界路径 + "/behavior_packs/a","")
					删除文件(世界路径 + "/behavior_packs/a")
					删除文件(世界路径 + "/behavior_packs/a")
					切换窗口(其他_附件_行为包管理器,路径S)
				是 5
					如果 文件是否存在(世界路径 + "/level.dat") 则
						变量 路径S : 启动信息
						路径S.置入("内容",世界路径 + "/level.dat")
						切换窗口(其他_附件_levelDat编辑,路径S)
					否则
						弹出警告提示("level.dat 文件不存在！")
					结束 如果
				是 6
					变量 删除提示 : DX基础对话框
					删除提示.标题("提示")
					删除提示.内容("是否删除该世界,这个世界将会消除很久,不可恢复,是否要继续")
					删除提示.按钮1("删除")
					删除提示.按钮2("取消")
					//设置夜间模式
					如果 设置_设定.获取开关("NightMode") 则
						删除提示.主题(DX主题.暗色)
					结束 如果
					删除提示.显示()
					事件 删除提示:按钮1被单击() : 逻辑型
						如果 删除文件(世界路径) 则
							弹出成功提示("删除世界成功!")
							//刷新列表
							加载世界列表(其他_变量.内部存储目录 + "games/com.mojang/minecraftWorlds",真)
						否则
							弹出错误提示("删除失败!")
						结束 如果
						返回 假
					结束 事件
			结束 假如
		结束 事件
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		线性布局3.背景颜色 = 0XFF222222
		卡片布局1.卡片背景颜色 = 0XFF222222
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
		图片框1.图片资源 = 其他_资源.白色返回图标
		线性布局4.背景颜色 = 0XFF222222
	结束 方法

结束 类

类 其他_管理_地图管理器_列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=80,@左外边距DP=10,@右外边距DP=10,@上外边距DP=5,@下外边距DP=5,圆角=15,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-1,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度=-2,高度=-1,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度=-2,高度=-2,圆角=15,卡片阴影=0,@左外边距DP=5]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度DP=90,高度DP=70,拉伸方式=0,图片资源="../../../../资源库/图标/mores/world_manager/icon.png"]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1,对齐方式=17,纵向布局=真]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2,@上外边距DP=5,@右外边距DP=5,@左外边距DP=5]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-2,高度=-2,内容="世界名称",粗体=真,字体大小=14]])
	变量 世界名称文本框 : 文本框
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,对齐方式=8388691,@左外边距DP=5,@上外边距DP=0,@右外边距DP=5,@下外边距DP=5]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-2,高度=-2,卡片背景颜色=16709103,卡片阴影=0,圆角=15,@左外边距DP=0]])
	变量 卡片布局3 : 卡片布局
	@布局配置([[父布局=卡片布局3,宽度=-1,高度=-1,对齐方式=17,背景颜色=-68113]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,字体颜色=-870566,@左外边距DP=3,@右外边距DP=3,字体大小=13,内容="文件名"]])
	变量 文件名文本框 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-2,高度=-2,卡片背景颜色=16709103,卡片阴影=0,圆角=15,@左外边距DP=5]])
	变量 卡片布局4 : 卡片布局
	@布局配置([[父布局=卡片布局4,宽度=-1,高度=-1,对齐方式=17,背景颜色=-68113]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,字体颜色=-899960,@左外边距DP=3,@右外边距DP=3,字体大小=13,内容="0000-00-00"]])
	变量 日期文本框 : 文本框

	//声明
	变量 设置_设定 : 设置_设定

	事件 其他_管理_地图管理器_列表:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		卡片布局1.卡片背景颜色 = 0XFF333333
		线性布局2.背景颜色 = 0XFF333333
		世界名称文本框.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类