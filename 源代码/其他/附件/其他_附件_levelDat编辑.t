类 其他_附件_levelDat编辑 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=15,高度DP=15,图片资源="../../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,字体大小=15,内容="项目",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局2,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,粗体=真,字体大小=16,内容="level.dat 编辑",字体颜色=-16777216]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1]])
	变量 滚动布局1 : 滚动布局
	@布局配置([[父布局=滚动布局1,宽度=-1,高度=-1]])
	变量 横向滚动布局1 : 横向滚动布局
	@布局配置([[父布局=横向滚动布局1,宽度=-1,高度=-1,对齐方式=8388627]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,@左外边距DP=10,@上外边距DP=10,@右外边距DP=10,@下外边距DP=10,字体颜色=-16777216,超链接识别模式=1]])
	变量 文本框1 : 文本框

	//声明
	变量 设置_设定 : 设置_设定
	//变量
	变量 文件路径 : 文本 = ""

	变量 文本 为 文本=""
	变量 文本1 为 文本=""
	变量 计数 为 整数=0
	变量 彩色字符串 为 彩色字符串
	变量 node 为 其他_附件_levelDat编辑_节点
	//变量 单位 为 文本[]={"0A","01","03","04","05","08","09"}
	//01布尔，03整数，04长整数，05浮点数，08字符串，09数组，0A文件夹

	事件 其他_附件_levelDat编辑:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//退出按钮
		事件 图片框1:被单击()
			关闭窗口()
		结束 事件
		事件 文本框2:被单击()
			关闭窗口()
		结束 事件
		//加载方法
		变量 路径信息 : 启动信息 = 取启动信息()
		文件路径 = 路径信息.取文本("内容")
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,滚动布局1,设置相关路径)
			结束 如果
		结束 如果
		//加载
		node.节点("level.dat","00",0,0)
		变量 数据 : 字节[]= 读入文件字节(文件路径)
		文本1 = 转换操作.字节集到十六进制(数据)
		节点处理()
		//订阅事件
		订阅事件()
	结束 事件

	方法 节点处理()
		文本=文本1.取文本右边(22)
		变量 a 为 整数=0
		变量 是否可读 为 逻辑型 =真
		循环(是否可读)
			变量 数据 为 文本[] = 读入()
			变量 文件1 为 其他_附件_levelDat编辑_节点
			文件1.节点(数据[0],数据[1],数据[3].到整数(),数据[4].到整数())

			如果 数据[1]=="0A" 则
				node.添加(文件1)
				++a
			否则
				如果 数据[1]=="00" 则
					--a
				否则
					如果 a == 0 则
						node.添加(文件1)
					结束 如果
					如果 a == 1 则
						变量 node1 为 其他_附件_levelDat编辑_节点 =node.取子节点(node.子节点数() - 1)
						node1.添加(文件1)
					结束 如果
					如果 a == 2 则
						变量 node1 为 其他_附件_levelDat编辑_节点 =node.取子节点(node.子节点数() - 1)
						node1.添加(文件1)
					结束 如果
				结束 如果
			结束 如果
			如果 数据[2]=="1" 则
				开始(node,文本框1)
				是否可读=假
			结束 如果
		结束 循环
	结束 方法

	方法 寻找节点(节点 为 其他_附件_levelDat编辑_节点,寻找内容 为 文本) 为 其他_附件_levelDat编辑_节点
		如果 节点.名称==寻找内容 则
			返回 节点
		结束 如果
		循环(i,0,节点.子节点数())
			变量 节点1 为 其他_附件_levelDat编辑_节点 = 寻找节点(节点.取子节点(i),寻找内容)
			如果 节点1 != 空 则
				返回 节点1
			结束 如果
		结束 循环
		返回 空
	结束 方法

	事件 彩色字符串:部分文字被点击(高亮内容 为 文本)
		变量 节点3 为 其他_附件_levelDat编辑_节点=寻找节点(node,高亮内容)
		//弹出提示
		如果 节点3 != 空 则
			对话(节点3)
		否则
			弹出提示2("没有此值")
		结束 如果
	结束 事件

	方法 读入() 为 文本[]
		变量 数据 为 文本[]={"","","0","",""}
		变量 文件名 为 文本 = " "
		变量 文件内容 为 文本=""
		变量 起点 为 整数=0
		变量 长度 为 整数=0
		变量 文件格式 为 文本=文本.取文本中间(计数,计数+1)
		变量 文件名长度 为 整数 = 其他_转换.转换(文本.取文本中间(计数 + 2,计数 + 2+1),16,10).到整数()
		变量 无 为 文本=文本.取文本中间(计数 + 4,计数 + 4+1)
		如果 无=="00" 则
			//弹出提示("正常")
			假如 文件格式
				是 "01"//布尔
					变量 布尔 为 文本 = 文本.取文本中间(计数 + 文件名长度 * 2 + 1,计数 + 文件名长度 * 2 + 2)
					起点 = 计数 + 6 + 文件名长度 * 2
					长度 = 2
					文件名  = 文本.取文本中间(计数 + 6,计数 + 5+文件名长度 * 2)
					文件内容="：" + 文本.取文本中间(起点,起点+长度-1)
					计数=计数 + 文件名长度 * 2 + 8
				是 "03"//整数
					文件名  = 文本.取文本中间(计数 + 6,计数 + 5+文件名长度 * 2)
					起点 = 计数 + 6 + 文件名长度 * 2
					长度 = 2
					文件内容="：" + 文本.取文本中间(起点,起点+长度-1)
					计数=计数 + 文件名长度 * 2 + 14
				是 "04"//长整数
					文件名  = 文本.取文本中间(计数 + 6,计数 + 5+文件名长度 * 2)
					起点 = 计数 + 6 + 文件名长度 * 2
					长度 = 16
					文件内容="：" + 文本.取文本中间(起点,起点+长度-1)
					计数=计数 + 文件名长度 * 2 + 22
				是 "05"//浮点数
					文件名  = 文本.取文本中间(计数 + 6,计数 + 5+文件名长度 * 2)
					起点 = 计数 + 6 + 文件名长度 * 2
					长度 = 8
					文件内容="：" + 文本.取文本中间(起点,起点+长度-1)
					计数=计数 + 文件名长度 * 2 + 14
				是 "08"//字符串
					文件名  = 文本.取文本中间(计数 + 6,计数 + 5+文件名长度 * 2)
					变量 字符串长度 为 整数=其他_转换.转换(文本.取文本中间(计数 + 文件名长度 * 2 + 6,计数 + 文件名长度 * 2 + 6+1),16,10).到整数()
					起点=计数 + 10 + 文件名长度 * 2
					长度 = 字符串长度 * 2
					计数=计数 + 文件名长度 * 2 + 5 + 字符串长度 * 2 + 5
				是 "09"//数组
					文件名  = 文本.取文本中间(计数 + 6,计数 + 5+文件名长度 * 2)
					起点=计数 + 6 + 文件名长度 * 2
					长度 = 50
					计数=计数 + 文件名长度 * 2 + 56
				是 "0A"//文件夹
					文件名  =文本.取文本中间(计数 + 6,计数 + 5+文件名长度 * 2)
					计数=计数 + 文件名长度 * 2 + 6
			结束 假如
			如果 计数 >= 文本.长度 -4 则
				数据[2]="1"
			结束 如果
		否则
			计数=计数+2
		结束 如果
		数据[0]=十六转字符串.开始(文件名) + 文件内容
		数据[1]=文件格式
		数据[3]=起点.到文本()
		数据[4]=长度.到文本()
		返回 数据
	结束 方法

	变量 是否可以保存 : 逻辑型 = 真
	方法 对话(节点 为 其他_附件_levelDat编辑_节点)
		变量 节点1 为 其他_附件_levelDat编辑_节点 = 节点
		变量 对话框1 为 对话框
		变量 容器 为 其他_附件_levelDat编辑_对话
		变量 标题 为 文本框=容器.文本框1
		变量 编辑框 为 编辑框=容器.编辑框1
		变量 确定 为 线性布局=容器.线性布局5
		变量 取消 为 线性布局=容器.线性布局6
		对话框1.自定义布局=容器
		变量 起点 为 整数=节点1.起点
		变量 长度 为 整数=节点1.长度
		对话框1.标题 = 节点.名称
		假如 节点1.格式
			是 "00"
				对话框1.标题 = "此值无法编辑！"
				是否可以保存 = 假
			是 "01"
				是否可以保存 = 真
				标题.内容 = "布尔型:真<01> 假<00>"
				编辑框.内容 = 文本.取文本中间(起点,起点+长度-1)
			是 "03"
				是否可以保存 = 真
				标题.内容 ="整数型:值<01> 值<02> 值<03>"
				编辑框.内容 = 文本.取文本中间(起点,起点+长度-1)
				标题.内容 ="长整数:8×2"
				编辑框.内容 = 文本.取文本中间(起点,起点+长度-1)
			是 "05"
				是否可以保存 = 真
				标题.内容 ="浮点数:4×2"
				编辑框.内容 = 文本.取文本中间(起点,起点+长度-1)
			是 "08"
				是否可以保存 = 真
				标题.内容 ="字符串"
				编辑框.内容 = 十六转字符串.开始(文本.取文本中间(起点,起点+长度-1))
			是 "09"
				是否可以保存 = 真
				标题.内容 ="数组:25×2"
				编辑框.内容 = 文本.取文本中间(起点,起点+长度-1)
			是 "0A"
				对话框1.标题 = "此值无法编辑！"
				是否可以保存 = 假
		结束 假如
		如果 设置_设定.获取开关("NightMode") 则
			对话框1.背景颜色 = 0XFF333333
			容器.线性布局1.背景颜色 = 0XFF333333
			容器.编辑框1.字体颜色 = 0XFFFFFFFF
			容器.文本框1.字体颜色 = 0XFFFFFFFF
		结束 如果
		对话框1.显示()
		事件 确定:被单击()
			如果 节点1.格式=="08" 则
				变量 十六字符 为 文本=字符串转十六.开始(编辑框.内容)
				变量 字符长度 为 文本=其他_转换.转换((十六字符.长度 / 2).到文本(),10,16)
				如果 字符长度.长度 == 1 则
					字符长度="0" + 字符长度
				结束 如果
				文本1= 其他_附件_levelDat编辑_其他.子文本替换(文本1,起点 + 22,起点 + 21 + 长度,十六字符)
				文本1= 其他_附件_levelDat编辑_其他.子文本替换(文本1,起点 + 18,起点 + 19,字符长度)
			否则
				文本1 = 其他_附件_levelDat编辑_其他.子文本替换(文本1,起点 + 22,起点 + 21 + 长度,编辑框.内容)
			结束 如果
			变量 字节1 为 字节[]=转换操作.十六进制到字节集(文本1)
			如果 字节到文本(字节1).替换(" ","") == "" 则
				弹出错误提示("保存失败，错误代码：1")
			否则
				如果 字节到文本(字节1).长度 <= 50 则
					弹出警告提示("保存失败，错误代码：2")
				否则
					如果 是否可以保存 则
						写出字节文件(文件路径,字节1)
						弹出成功提示("保存完毕！")
					否则
						弹出警告提示("保存失败，错误代码：3")
					结束 如果
				结束 如果
			结束 如果
			对话框1.关闭()
		结束 事件
		事件 取消:被单击()
			对话框1.关闭()
		结束 事件
	结束 方法

	方法 开始(root 为 其他_附件_levelDat编辑_节点, 文本框 为 文本框)
		绘制节点(root,"", 文本框);
	结束 方法

	方法 绘制节点(node 为 其他_附件_levelDat编辑_节点, 内容 为 文本, 文本框 为 文本框)
		如果 node == 空 则
			返回
		结束 如果

		追加文本(文本框,内容，"a" + node.名称,node.格式)
		变量 子节点数 为 整数 = node.子节点数()

		循环(i,0,子节点数)
			变量 节点 为 其他_附件_levelDat编辑_节点 = node.取子节点(i)
			变量 是否为最后节点 为 逻辑型 = i == 子节点数 - 1;
			变量 节点首 为 文本=""
			如果 内容.长度 > 0 则
				变量 txt 为 文本=""
				循环(a,0,内容.长度)
					txt=txt + "│"
				结束 循环
				节点首=txt + 其他_附件_levelDat编辑_其他.三元运算(是否为最后节点,"┕","┝")
				//(是否为最后节点 ? "┕":"┝")
			否则
				节点首=内容 + 其他_附件_levelDat编辑_其他.三元运算(是否为最后节点,"┕","┝")
			结束 如果
			绘制节点(节点, 节点首,文本框);
		结束 循环
	结束 方法

	方法 追加文本(文本框 为 文本框,附加内容 为 文本,节点名称 为 文本,节点格式 为 文本)
		变量 文本框内容 为 文本=文本框.内容 + 附加内容
		变量 节点名称起点 为 整数=文本框内容.长度
		变量 节点名称终点 为 整数=文本框内容.长度 + 节点名称.长度
		彩色字符串.追加内容(附加内容 + 节点名称 + "\n")
		//彩色字符串.设置前景色(节点名称起点,节点名称终点,"#FF8F0404")
		彩色字符串.设置部分点击(节点名称起点 + 1,节点名称终点)
		假如 节点格式
			是 "00"
				变量 文件:图片资源 = "../../../../资源库/图标/mores/world_manager/level_dat/文件.png"
				彩色字符串.设置图片(本对象,节点名称起点,节点名称起点 + 1,文件,0,0,70,70)
			是 "01"
				变量 布尔 :图片资源 = "../../../../资源库/图标/mores/world_manager/level_dat/布尔.png"
				彩色字符串.设置图片(本对象,节点名称起点,节点名称起点 + 1,布尔,0,0,50,50)
			是 "03"
				变量 数 :图片资源 = "../../../../资源库/图标/mores/world_manager/level_dat/整数.png"
				彩色字符串.设置图片(本对象,节点名称起点,节点名称起点 + 1,数,0,0,50,50)
			是 "04"
				变量 长数 : 图片资源 = "../../../../资源库/图标/mores/world_manager/level_dat/长整数.png"
				彩色字符串.设置图片(本对象,节点名称起点,节点名称起点 + 1,长数,0,0,50,50)
			是 "05"
				变量 浮点数 :图片资源 = "../../../../资源库/图标/mores/world_manager/level_dat/浮点数.png"
				彩色字符串.设置图片(本对象,节点名称起点,节点名称起点 + 1,浮点数,0,0,50,50)
			是 "08"
				变量 字串 : 图片资源 = "../../../../资源库/图标/mores/world_manager/level_dat/字符串.png"
				彩色字符串.设置图片(本对象,节点名称起点,节点名称起点 + 1,字串,0,0,50,50)
			是 "09"
				变量 数组:图片资源=  "../../../../资源库/图标/mores/world_manager/level_dat/数组.png"
				彩色字符串.设置图片(本对象,节点名称起点,节点名称起点 + 1,数组,0,0,50,50)
			是 "0A"
				变量 文件夹:图片资源= "../../../../资源库/图标/mores/world_manager/level_dat/文件夹.png"
				彩色字符串.设置图片(本对象,节点名称起点,节点名称起点 + 1,文件夹,0,0,50,50)
		结束 假如
		彩色字符串.显示到文本框(文本框)
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		线性布局3.背景颜色 = 0XFF222222
		卡片布局1.卡片背景颜色 = 0XFF222222
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
		图片框1.图片资源 = 其他_资源.白色返回图标
		滚动布局1.背景颜色 = 0XFF222222
	结束 方法

结束 类

类 其他_附件_levelDat编辑_节点

	变量 名称 为 文本
	变量 格式 为 文本
	变量 起点 为 整数
	变量 长度 为 整数
	变量 子节点 为 其他_附件_levelDat编辑_节点集合?
	方法 节点(名称1 为 文本,格式1 为 文本,起点1 为 整数,长度1 为 整数)
		名称=名称1;
		格式=格式1;
		起点=起点1;
		长度=长度1;
		子节点 =创建 其他_附件_levelDat编辑_节点集合
	结束 方法
	方法 子节点数() 为 整数
		返回 子节点.长度
	结束 方法
	方法 取子节点(索引 为 整数) 为 其他_附件_levelDat编辑_节点
		返回 子节点.取成员(索引)
	结束 方法
	方法 添加(内容 为 其他_附件_levelDat编辑_节点)
		子节点.添加成员(内容)
	结束 方法
	属性读 名称() 为 文本
		返回 名称
	结束 属性
	属性读 格式() 为 文本
		返回 格式
	结束 属性
	属性写 起点(内容 为 整数)
		起点=内容
	结束 属性

	属性读 起点() 为 整数
		返回 起点
	结束 属性
	属性写 长度(内容 为 整数)
		长度=内容
	结束 属性

	属性读 长度() 为 整数
		返回 长度
	结束 属性

结束 类
类 其他_附件_levelDat编辑_节点集合 : 集合模板类<其他_附件_levelDat编辑_节点>
结束 类

类 其他_附件_levelDat编辑_其他

	@静态
	方法 三元运算(逻辑控制语句 : 逻辑型,数据1 : 对象,数据2:对象):对象
		如果 逻辑控制语句==真 则
			返回 数据1
		否则
			返回 数据2
		结束 如果
	结束 方法

	//替换一段文本，参数一为要操作的文本，参数二为开始位置，参数三为结束位置，参数四为替换文本
	@静态 
	方法 子文本替换(文本 为 文本,开始位置 为 整数,结束位置 为 整数,替换文本 为 文本) 为 文本
		@code
      if ("".equals(#文本) || #开始位置 < 0 || #开始位置 > #文本.length() || #结束位置 < #开始位置 || #结束位置 > #文本.length()) {
         return "";
      }
      return #文本.substring(0, #开始位置) + #替换文本 + #文本.substring(#结束位置 + 1);
        @end
	结束 方法

结束 类


类 其他_附件_levelDat编辑_对话 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,@上外边距DP=5]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1,显示光标=真,单行输入=假,字体颜色=-16777216,提示文本="",内容="",背景颜色=16777215,@左外边距DP=20,@右外边距DP=20,@上外边距DP=5,@下外边距DP=1,左内边距DP=5,右内边距DP=5]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=40,对齐方式=8388627,@上外边距DP=3]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,对齐方式=8388629]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度DP=80,高度DP=30,圆角=15,卡片阴影=0,@右外边距DP=5,卡片背景颜色=16777215]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,对齐方式=17,背景颜色=-16777216,水波纹效果=真]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,字体颜色=-1,内容="关闭"]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局4,宽度DP=80,高度DP=30,圆角=15,卡片阴影=0,@左外边距DP=0,@右外边距DP=20,卡片背景颜色=16777215]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,对齐方式=17,背景颜色=-65536,水波纹效果=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,字体颜色=-1,内容="保存"]])
	变量 文本框2 : 文本框

结束 类