@导入Java("java.text.DecimalFormat")

类 其他_附件_性能信息 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=15,高度DP=15,图片资源="../../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,字体大小=15,内容="项目",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局2,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,粗体=真,字体大小=16,内容="性能信息",字体颜色=-16777216]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=15,模糊进度=真,背景颜色=-1]])
	变量 进度条3 : 进度条
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,纵向布局=真,内边距DP=5]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2,圆角=15,卡片阴影=0]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,纵向布局=真,背景颜色=-1]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=60]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627,@左外边距DP=0,@右外边距DP=60]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-1,高度DP=30]])
	变量 相对布局2 : 相对布局
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,对齐方式=8388627]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,@左外边距DP=10,字体颜色=-16777216,内容="内存使用率"]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,@左外边距DP=0,字体颜色=-16777216,内容="100",@右外边距DP=10]])
	变量 文本框4 : 文本框
	@布局配置([[父布局=线性布局6,宽度=-1,高度DP=30,对齐方式=17]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,宽度=-1,高度=-2,@左外边距DP=10,@右外边距DP=10]])
	变量 进度条1 : 进度条
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局10 : 线性布局
	@布局配置([[父布局=线性布局10,宽度DP=60,高度DP=60,对齐方式=17]])
	变量 线性布局11 : 线性布局
	@布局配置([[父布局=线性布局11,字体大小=25,字体颜色=-13591497,内容="---%",粗体=真]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局12 : 线性布局
	@布局配置([[父布局=线性布局12,宽度=-1,高度DP=80,@左外边距DP=10,@下外边距DP=10,@右外边距DP=10]])
	变量 普通折线图1 : 普通折线图
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2,圆角=15,卡片阴影=0,@上外边距DP=10]])
	变量 卡片布局4 : 卡片布局
	@布局配置([[父布局=卡片布局4,宽度=-1,高度=-1,纵向布局=真,背景颜色=-1]])
	变量 线性布局15 : 线性布局
	@布局配置([[父布局=线性布局15,宽度=-1,高度DP=60]])
	变量 相对布局3 : 相对布局
	@布局配置([[父布局=相对布局3,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627,@右外边距DP=60]])
	变量 线性布局16 : 线性布局
	@布局配置([[父布局=线性布局16,宽度=-1,高度DP=30]])
	变量 相对布局4 : 相对布局
	@布局配置([[父布局=相对布局4,宽度=-1,高度=-1,对齐方式=8388627]])
	变量 线性布局17 : 线性布局
	@布局配置([[父布局=线性布局17,@左外边距DP=10,字体颜色=-16777216,内容="CPU使用率"]])
	变量 文本框6 : 文本框
	@布局配置([[父布局=相对布局4,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局18 : 线性布局
	@布局配置([[父布局=线性布局18,字体颜色=-16777216,内容="100Hz",@右外边距DP=10]])
	变量 文本框7 : 文本框
	@布局配置([[父布局=线性布局16,宽度=-1,高度DP=30,对齐方式=17]])
	变量 线性布局19 : 线性布局
	@布局配置([[父布局=线性布局19,宽度=-1,高度=-2,@左外边距DP=10,@右外边距DP=10]])
	变量 进度条2 : 进度条
	@布局配置([[父布局=相对布局3,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局20 : 线性布局
	@布局配置([[父布局=线性布局20,宽度DP=60,高度DP=60,对齐方式=17]])
	变量 线性布局21 : 线性布局
	@布局配置([[父布局=线性布局21,字体大小=25,字体颜色=-13591497,内容="---%",粗体=真]])
	变量 文本框8 : 文本框
	@布局配置([[父布局=线性布局15,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局22 : 线性布局
	@布局配置([[父布局=线性布局22,宽度=-1,高度DP=80,@左外边距DP=10,@下外边距DP=10,@右外边距DP=10]])
	变量 普通折线图2 : 普通折线图
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,@上外边距DP=10,列数=2]])
	变量 自定义宫格列表框1 : 自定义宫格列表框

	变量 设置_设定 : 设置_设定
	变量 列表集合 : 文本集合
	变量 全局路径 : 文本 = "/sys/devices/system/cpu/"
	
	变量 CPU总频率 : 整数 = 0
	变量 CPU频率 : 整数 = 0

	事件 其他_附件_性能信息:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局4,设置相关路径)
			结束 如果
		结束 如果
		//初始化
		线性布局4.可视 = 假
		//加载方法
		初始化折线统计图()
		循环刷新()
		//订阅事件
		订阅事件()
	结束 事件

	//退出界面
	事件 图片框1:被单击()
		关闭窗口()
	结束 事件
	事件 文本框2:被单击()
		关闭窗口()
	结束 事件

	//初始化折线统计图
	方法 初始化折线统计图()
		//内存
		普通折线图1.初始化()
		普通折线图1.设置图表是否可拖拽(真)
		普通折线图1.设置图表描述信息(假)
		普通折线图1.设置是否显示X轴(假)
		普通折线图1.设置是否显示Y轴(假)
		普通折线图1.添加折线("1","#FF2100")
		普通折线图1.显示折线()
		//CPU
		普通折线图2.初始化()
		普通折线图2.设置图表是否可拖拽(真)
		普通折线图2.设置图表描述信息(假)
		普通折线图2.设置是否显示X轴(假)
		普通折线图2.设置是否显示Y轴(假)
		普通折线图2.添加折线("1","#FF2100")
		普通折线图2.显示折线()
	结束 方法

	//启动循环刷新
	方法 循环刷新()
		变量 刷新 : 倒计时器
		刷新.开始倒计时(1000l,1000l)
		事件 刷新:倒计时结束()
			//设置布局可视
			进度条3.可视 = 假
			线性布局4.可视 = 真
			//加载方法
			内存使用率()
			CPU使用率()
			CPU列表()
			//重新开始
			刷新.开始倒计时(1000l,1000l)
		结束 事件
	结束 方法

	//内存使用率
	方法 内存使用率()
		开始俘获异常()
		//获取内存
		变量 内存数组 : 文本[] = proc信息.内存信息().分割文本("\n")
		//物理内存总量
		变量 物理内存总量 : 文本[] = 内存数组[0].分割文本("        ")
		变量 物理内存总量转换 : 文本[] = 物理内存总量[1].分割文本(" ")
		变量 物理内存总量转换结果 : 整数 = 物理内存总量转换[0].到整数()
		//未使用物理内存
		变量 未使用物理内存 : 文本[] = 内存数组[1].分割文本(":          ")
		变量 未使用物理内存转换 : 文本[] = 未使用物理内存[1].分割文本(" ")
		变量 未使用物理内存转换结果 : 整数 = 未使用物理内存转换[0].到整数()
		//Buffers物理内存
		变量 Buffers物理内存 : 文本[] = 内存数组[3].分割文本("s:            ")
		变量 Buffers物理内存转换 : 文本[] = Buffers物理内存[1].分割文本(" ")
		变量 Buffers物理内存转换结果 : 整数 = Buffers物理内存转换[0].到整数()
		////缓存物理内存
		变量 缓存物理内存 : 文本[] = 内存数组[4].分割文本("d:          ")
		变量 缓存物理内存转换 : 文本[] = 缓存物理内存[1].分割文本(" ")
		变量 缓存物理内存转换结果 : 整数 = 缓存物理内存转换[0].到整数()
		//计算
		变量 当前已使用的内存 : 整数 = 物理内存总量转换结果-(未使用物理内存转换结果+缓存物理内存转换结果+Buffers物理内存转换结果)
		//设置
		进度条1.最大进度 = 物理内存总量转换结果
		文本框4.内容 = 当前已使用的内存.到文本() + "KB"
		进度条1.进度 = 当前已使用的内存
		文本框5.内容 = 获取百分号(当前已使用的内存,物理内存总量转换结果) + "%"
		//设置折线统计图
		普通折线图1.添加数据(当前已使用的内存.到对象().单精度小数值,0)
		俘获所有异常()
		结束俘获异常()
	结束 方法
	
	//CPU使用率
	方法 CPU使用率()
		文本框7.内容 = CPU频率.到文本() + "Hz"
		进度条2.最大进度 = CPU总频率
		进度条2.进度 = CPU频率
		文本框8.内容 = 获取百分号(CPU频率,CPU总频率) + "%"
		普通折线图2.添加数据(CPU频率.到对象().单精度小数值,0)
	结束 方法
	
	//显示CPU各个核心的频率
	方法 CPU列表()
		CPU总频率 = 0
		CPU频率 = 0
		事件 自定义宫格列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 其他_附件_性能信息_列表?
			如果 项目布局 == 空 则
				布局 = 创建 其他_附件_性能信息_列表
			否则
				布局 = 项目布局
			结束 如果
			//变量
			如果 文件是否存在("/sys/devices/system/cpu/cpu" + 索引) 则
				布局.线性布局1.可视 = 真
				//变量
				变量 路径 : 文本 = "/sys/devices/system/cpu/cpu" + 索引 + "/cpufreq/scaling_cur_freq"
				变量 内容 : 文本 = 读入文本文件(路径).替换("\n","")
				变量 路径_最大 : 文本 = "/sys/devices/system/cpu/cpu" + 索引 + "/cpufreq/scaling_max_freq"
				变量 内容_最大 : 文本 = 读入文本文件(路径_最大).替换("\n","")
				变量 路径_最小 : 文本 = "/sys/devices/system/cpu/cpu" + 索引 + "/cpufreq/scaling_min_freq"
				变量 内容_最小 : 文本 = 读入文本文件(路径_最小).替换("\n","")
				CPU总频率 = CPU总频率 + 内容_最大.到整数()
				CPU频率 = CPU频率 + 内容.到整数()
				//设置到列表
				布局.文本框1.内容 = 索引.到文本()
				布局.文本框3.内容 = 内容 + "Hz"
				布局.文本框5.内容 = 内容_最大 + "Hz"
				布局.文本框7.内容 = 内容_最小 + "Hz"
				布局.进度条1.最大进度 = 内容_最大.到整数()
				布局.进度条1.进度 = 内容.到整数()
			否则
				布局.线性布局1.可视 = 假
			结束 如果
			//列表被点击
			事件 布局.线性布局2:被单击()
			结束 事件
			返回 布局
		结束 事件
		//转换为集合
		列表集合 = CPU筛选(文件操作.取子文件集合(全局路径))
		自定义宫格列表框1.更新项目(列表集合.长度)
	结束 方法

	变量 结束集合 : 文本集合
	方法 CPU筛选(项目集合 : 文本集合) : 文本集合
		结束集合.清空()
		循环(项目集合 -> 项目)
			如果 项目.到文本() ? "cpu" 则
				结束集合.添加成员(项目)
			否则
				结束集合.清空()
			结束 如果
		结束 循环
		返回 结束集合
	结束 方法

	方法 获取百分号(当前进度 : 整数,最大进度 : 整数) : 文本
		@code
		int currentProgress = #当前进度;
		int maxProgress = #最大进度;
		double percentage = ((double) currentProgress / maxProgress) * 100;
		DecimalFormat decimalFormat = new DecimalFormat("0");
		String formattedPercentage = decimalFormat.format(percentage);
		return formattedPercentage;
		@end
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		线性布局3.背景颜色 = 0XFF222222
		卡片布局1.卡片背景颜色 = 0XFF222222
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
		图片框1.图片资源 = 其他_资源.白色返回图标
		线性布局4.背景颜色 = 0XFF222222
		进度条3.背景颜色 = 0XFF222222
		卡片布局2.卡片背景颜色 = 0XFF333333
		线性布局5.背景颜色 = 0XFF333333
		卡片布局4.卡片背景颜色 = 0XFF333333
		线性布局15.背景颜色 = 0XFF333333
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框4.字体颜色 = 0XFFFFFFFF
		文本框6.字体颜色 = 0XFFFFFFFF
		文本框7.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类

类 其他_附件_性能信息_列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,@左外边距DP=5,@上外边距DP=5,@右外边距DP=5,@下外边距DP=5,卡片阴影=0,圆角=15]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-1,纵向布局=真,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度=-1,高度DP=50,对齐方式=8388627]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=40,高度DP=40,@左外边距DP=5,圆角=15,卡片阴影=0,@右外边距DP=5]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,背景颜色=-854791,对齐方式=17]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,内容="0",粗体=真,字体大小=25,字体颜色=-13226964]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局3,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-2]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,字体颜色=-16777216,内容="当前值："]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局6,单行显示=真,字体大小=13]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-2]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,字体颜色=-16777216,字体大小=11,内容="最大值："]])
	变量 文本框4 : 文本框
	@布局配置([[父布局=线性布局7,字体大小=11,单行显示=真]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-2]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,字体颜色=-16777216,字体大小=11,内容="最小值："]])
	变量 文本框6 : 文本框
	@布局配置([[父布局=线性布局8,字体颜色=-16777216,字体大小=11,单行显示=真]])
	变量 文本框7 : 文本框
	@布局配置([[父布局=线性布局2,宽度=-1,高度DP=25,对齐方式=17]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,宽度=-1,高度=-2,@左外边距DP=5,@右外边距DP=5]])
	变量 进度条1 : 进度条

	变量 设置_设定 : 设置_设定

	事件 其他_附件_性能信息_列表:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			卡片布局1.卡片背景颜色 = 0XFF333333
			线性布局2.背景颜色 = 0XFF333333
			卡片布局2.卡片背景颜色 = 0XFF222222
			线性布局4.背景颜色 = 0XFF222222
			文本框1.字体颜色 = 0XFFFFFFFF
			文本框2.字体颜色 = 0XFFFFFFFF
			文本框3.字体颜色 = 0XFFE0E0E0
			文本框4.字体颜色 = 0XFFFFFFFF
			文本框5.字体颜色 = 0XFFE0E0E0
			文本框6.字体颜色 = 0XFFFFFFFF
			文本框7.字体颜色 = 0XFFE0E0E0
		结束 如果
	结束 事件

结束 类