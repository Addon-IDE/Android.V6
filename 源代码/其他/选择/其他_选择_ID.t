类 其他_选择_ID : 组件容器

	//变量
	@隐藏
	变量 设置_设定 : 设置_设定
	@隐藏
	变量 选择对话框 : 对话框
	@隐藏
	变量 对话框布局 : 其他_选择_ID布局
	@隐藏
	变量 列表数组 : 文本集合
	@隐藏
	变量 json文件名 : 文本 = ""

	方法 打开(文本框名称 : 文本框,ID : 文本,首字母大写 : 逻辑型 = 假)
		//初始化对话框
		选择对话框.自定义布局 = 对话框布局
		选择对话框.显示()
		//设置标题
		对话框布局.文本框1.内容 = 获取标题(ID)
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			夜间模式()
		结束 如果
		//设置导航栏
		变量 项目集 : 文本集合 = {"默认","自定义","插件"}
		事件 对话框布局.导航栏1:导航文本样式(索引 : 整数,导航文本 : 文本) : 导航文本样式
			变量 文本样式 : 导航文本样式_渐变缩放
			文本样式.字体大小 = 18
			文本样式.缩小度 = 0.75
			文本样式.颜色_选中 = 0XFFE25656
			文本样式.颜色_未选中 = 0XFF40AAFF
			文本样式.对齐方式 = 对齐方式.居中
			返回 文本样式
		结束 事件
		事件 对话框布局.导航栏1:导航条样式() : 导航条样式
			变量 条样式 : 导航条样式_直线渐变
			条样式.高度 = 3
			条样式.偏移Y = 136
			条样式.渐变颜色组 = {0xfff57c00}
			返回 条样式
		结束 事件
		对话框布局.导航栏1.导航背景颜色 = 透明色
		对话框布局.导航栏1.置文本集(项目集)
		//加载列表
		变量 json_file : 文本 = "data/identifier/" + ID + ".json"
		变量 jsonlist : JSON数组 = 读入资源文件(取安卓环境(),json_file)
		加载JSON列表(jsonlist,文本框名称,首字母大写)
		//关闭对话框事件
		事件 对话框布局.线性布局10:被单击()
			选择对话框.关闭()
		结束 事件
		//选择
		事件 对话框布局.导航栏1:导航被单击(索引 : 整数) : 逻辑型
			假如 索引
				是 0
					对话框布局.编辑框1.内容 = ""
					json文件名 = ID
					变量 json_file : 文本 = "data/identifier/" + ID + ".json"
					变量 jsonlist : JSON数组 = 读入资源文件(取安卓环境(),json_file)
					加载JSON列表(jsonlist,文本框名称,首字母大写)
				是 1
					对话框布局.编辑框1.内容 = ""
					json文件名 = ID
					变量 json_file : 文本 = 其他_变量.数据目录 + "identifier/" + ID + ".json"
					如果 文件是否存在(json_file) 则
						变量 jsonlist : JSON数组 = 读入文本文件(json_file)
						加载JSON列表(jsonlist,文本框名称,首字母大写)
					否则
						变量 其他_管理_标识管理器_方法 : 其他_管理_标识管理器_方法
						其他_管理_标识管理器_方法.生成identifier(ID)
						变量 jsonlist : JSON数组 = 读入文本文件(json_file)
						加载JSON列表(jsonlist,文本框名称,首字母大写,1)
					结束 如果
				是 2
					对话框布局.编辑框1.内容 = ""
			结束 假如
			返回 假
		结束 事件
	结束 方法

	@隐藏
	方法 获取标题(ID : 文本) : 文本
		变量 json : JSON对象 = 读入资源文件(取安卓环境(),"data/identifier.json")
		变量 json_name : JSON对象 = json["name"]
		返回 json_name[ID].到文本()
	结束 方法

	@隐藏
	方法 加载JSON列表(数组内容 : JSON数组,文本框名称 : 文本框,首字母大写 : 逻辑型,图标模式 : 整数 = 0)
		//初始化
		列表数组.清空()
		//循环
		循环(i, 0, 数组内容.长度)
			列表数组.添加成员(数组内容.取文本(i).到文本())
		结束 循环
		//加载列表
		事件 对话框布局.自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 其他_选择_ID列表?
			如果 项目布局 == 空 则
				布局 = 创建 其他_选择_ID列表
			否则
				布局 = 项目布局
			结束 如果
			//设置列表内容
			变量 列表数据内容 : 文本 = 列表数组[索引]
			变量 json : JSON对象 = 列表数据内容
			假如 图标模式
				是 0
					设置_设置.资源目录显示图片(取安卓环境(),布局.图片框1,"icon/" + json["icon"].到文本())
				是 1
					变量 图片输出路径 : 文本 = 其他_变量.数据目录 + "identifier/icons/" + json文件名 + "/"
					布局.图片框1.图片路径 = 图片输出路径 + json["id"].到文本() + ".png"
			结束 假如
			布局.文本框1.内容 = json["name"].到文本()
			布局.文本框2.内容 = json["id"].到文本()
			如果 json.是否存在("data") 则
				布局.文本框3.可视 = 真
				布局.文本框3.内容 = json["data"].到文本()
			否则
				布局.文本框3.可视 = 假
			结束 如果
			//列表被单击
			事件 布局.线性布局2:被单击()
				如果 首字母大写 则
					变量 textsrt1 : 文本 = json["id"].到文本()
					变量 textsrt2 : 文本 = textsrt1.取文本左边(1).到大写()
					变量 textsrt3 : 文本 = textsrt2 + textsrt1.取文本中间2(1,textsrt1.长度)
					文本框名称.内容 = textsrt3
				否则
					文本框名称.内容 = json["id"].到文本()
				结束 如果
				选择对话框.关闭()
			结束 事件
			返回 布局
		结束 事件
		//更新列表
		对话框布局.自定义列表框1.更新项目(列表数组.长度)
		//显示列表总数
		对话框布局.文本框2.内容 = 列表数组.长度.到文本() + " 项"
		//搜索
		事件 对话框布局.编辑框1:内容被改变()
			列表数组.清空()
			循环(i, 0, 数组内容.长度)
				如果 数组内容[i].到文本() ? 对话框布局.编辑框1.内容 则
					列表数组.添加成员(数组内容[i].到文本())
				结束 如果
			结束 循环
			对话框布局.自定义列表框1.更新项目(列表数组.长度)
		结束 事件
	结束 方法

	方法 夜间模式()
		对话框布局.文本框1.字体颜色 = 0XFFFFFFFF
		对话框布局.线性布局1.背景颜色 = 0XFF222222
		对话框布局.线性布局2.背景颜色 = 0XFF333333
		对话框布局.线性布局3.背景颜色 = 0XFF333333
		对话框布局.线性布局5.背景颜色 = 0XFF333333
		对话框布局.线性布局8.背景颜色 = 0XFF222222
		对话框布局.线性布局9.背景颜色 = 0XFF333333
		对话框布局.自定义列表框1.背景颜色 = 0XFF222222
		对话框布局.编辑框1.字体颜色 = 0XFFFFFFFF
		对话框布局.编辑框1.提示文本颜色 = 0XFFE0E0E0
	结束 方法

结束 类

类 其他_选择_ID布局 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,背景颜色=-526087,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=40,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,字体大小=16,内容="ID 选择器标题",字体颜色=-16777216,@右外边距DP=10]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真,背景颜色=-1]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,@上外边距DP=0,宽度=-1,高度=-2]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度DP=40,对齐方式=17]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-1,背景颜色=0,提示文本="查找搜索...",字体大小=15,内容="",字体颜色=-16777216,@左外边距DP=10,@右外边距DP=10,左内边距DP=5,右内边距DP=5]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=线性布局4,宽度=-1,高度DP=40]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=40,对齐方式=17,@上外边距DP=0,@下外边距DP=0,背景颜色=-1]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-1,@左外边距DP=10,@右外边距DP=10]])
	变量 导航栏1 : 导航栏
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真,背景颜色=-1]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,宽度=-1,高度DP=300,@左外边距DP=10,@右外边距DP=10,@下外边距DP=5,分割线高度=0,背景颜色=-526087]])
	变量 自定义列表框1 : 自定义列表框
	@布局配置([[父布局=线性布局8,@左外边距DP=10,宽度=-1,对齐方式=8388629,@右外边距DP=10,字体大小=12,字体颜色=-12410113,内容="0 项",@下外边距DP=5]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,对齐方式=8388629,背景颜色=-1]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,宽度DP=65,高度DP=30,卡片阴影=0,@右外边距DP=10,卡片背景颜色=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-13781510,对齐方式=17,水波纹效果=真]])
	变量 线性布局10 : 线性布局
	@布局配置([[父布局=线性布局10,字体大小=14,字体颜色=-1,内容="取 消"]])
	变量 文本框3 : 文本框

结束 类

类 其他_选择_ID列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,圆角=25,卡片阴影=0,@上外边距DP=5]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-1,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,高度=-1,宽度DP=50,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=35,高度DP=35]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,@左外边距DP=5,字体大小=14,字体颜色=-16777216,内容="Name"]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局4,@左外边距DP=5,字体大小=11,字体颜色=-16777216,内容="item_id"]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局4,@左外边距DP=5,字体大小=10,字体颜色=-16777216,内容="data_0"]])
	变量 文本框3 : 文本框

	//声明
	变量 设置_设定 : 设置_设定

	事件 其他_选择_ID列表:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		卡片布局1.卡片背景颜色 = 0XFF333333
		线性布局2.背景颜色 = 0XFF333333
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类