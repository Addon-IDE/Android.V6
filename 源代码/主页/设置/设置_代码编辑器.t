类 设置_代码编辑器 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=15,高度DP=15,图片资源="../../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,字体大小=15,内容="设置",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局2,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0,卡片背景颜色=16251129]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,粗体=真,字体大小=16,内容="代码编辑器设置",字体颜色=-16777216]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,完全显示=假,显示滚动条=假]])
	变量 滚动布局1 : 滚动布局
	@布局配置([[父布局=滚动布局1,宽度=-1,高度=-1,纵向布局=真,右内边距DP=10,左内边距DP=10]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2,@上外边距DP=10,卡片阴影=0,圆角=5,可视=真]])
	变量 卡片布局3 : 卡片布局
	@布局配置([[父布局=卡片布局3,宽度=-1,高度=-1,背景颜色=-1,纵向布局=真]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局10 : 线性布局
	@布局配置([[父布局=线性布局10,@左外边距DP=10,字体大小=15,字体颜色=-9671572,粗体=真,内容="主题配置"]])
	变量 文本框7 : 文本框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局2 : 相对布局
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局11 : 线性布局
	@布局配置([[父布局=线性布局11,@左外边距DP=10,字体颜色=-16777216,内容="默认主题",粗体=真,字体大小=16]])
	变量 文本框8 : 文本框
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局12 : 线性布局
	@布局配置([[父布局=线性布局12,选中=假,内容="",@右外边距DP=10]])
	变量 单选框1 : 单选框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局5 : 相对布局
	@布局配置([[父布局=相对布局5,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局21 : 线性布局
	@布局配置([[父布局=线性布局21,@左外边距DP=10,字体颜色=-16777216,内容="HTML主题",粗体=真,字体大小=16]])
	变量 文本框16 : 文本框
	@布局配置([[父布局=相对布局5,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局27 : 线性布局
	@布局配置([[父布局=线性布局27,选中=假,内容="",@右外边距DP=10]])
	变量 单选框2 : 单选框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局6 : 相对布局
	@布局配置([[父布局=相对布局6,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局22 : 线性布局
	@布局配置([[父布局=线性布局22,@左外边距DP=10,字体颜色=-16777216,内容="Darcula主题",粗体=真,字体大小=16]])
	变量 文本框17 : 文本框
	@布局配置([[父布局=相对布局6,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局28 : 线性布局
	@布局配置([[父布局=线性布局28,选中=假,内容="",@右外边距DP=10]])
	变量 单选框3 : 单选框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局7 : 相对布局
	@布局配置([[父布局=相对布局7,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局23 : 线性布局
	@布局配置([[父布局=线性布局23,@左外边距DP=10,字体颜色=-16777216,内容="Eclipse主题",粗体=真,字体大小=16]])
	变量 文本框18 : 文本框
	@布局配置([[父布局=相对布局7,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局29 : 线性布局
	@布局配置([[父布局=线性布局29,选中=假,内容="",@右外边距DP=10]])
	变量 单选框4 : 单选框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局8 : 相对布局
	@布局配置([[父布局=相对布局8,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局24 : 线性布局
	@布局配置([[父布局=线性布局24,@左外边距DP=10,字体颜色=-16777216,内容="GitHub主题",粗体=真,字体大小=16]])
	变量 文本框19 : 文本框
	@布局配置([[父布局=相对布局8,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局30 : 线性布局
	@布局配置([[父布局=线性布局30,选中=假,内容="",@右外边距DP=10]])
	变量 单选框5 : 单选框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局9 : 相对布局
	@布局配置([[父布局=相对布局9,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局25 : 线性布局
	@布局配置([[父布局=线性布局25,@左外边距DP=10,字体颜色=-16777216,内容="NotepadXX主题",粗体=真,字体大小=16]])
	变量 文本框20 : 文本框
	@布局配置([[父布局=相对布局9,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局31 : 线性布局
	@布局配置([[父布局=线性布局31,选中=假,内容="",@右外边距DP=10]])
	变量 单选框6 : 单选框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=55,水波纹效果=真,可视=真]])
	变量 相对布局10 : 相对布局
	@布局配置([[父布局=相对布局10,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局26 : 线性布局
	@布局配置([[父布局=线性布局26,@左外边距DP=10,字体颜色=-16777216,内容="Purple主题",粗体=真,字体大小=16]])
	变量 文本框21 : 文本框
	@布局配置([[父布局=相对布局10,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局32 : 线性布局
	@布局配置([[父布局=线性布局32,选中=假,内容="",@右外边距DP=10]])
	变量 单选框7 : 单选框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=55,水波纹效果=真,可视=真]])
	变量 相对布局20 : 相对布局
	@布局配置([[父布局=相对布局20,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局49 : 线性布局
	@布局配置([[父布局=线性布局49,@左外边距DP=10,字体颜色=-16777216,内容="VS2019主题",粗体=真,字体大小=16]])
	变量 文本框9 : 文本框
	@布局配置([[父布局=相对布局20,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局51 : 线性布局
	@布局配置([[父布局=线性布局51,选中=假,内容="",@右外边距DP=10]])
	变量 单选框8 : 单选框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=55,水波纹效果=真,可视=真]])
	变量 相对布局22 : 相对布局
	@布局配置([[父布局=相对布局22,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局50 : 线性布局
	@布局配置([[父布局=线性布局50,@左外边距DP=10,字体颜色=-16777216,内容="自定义主题",粗体=真,字体大小=16]])
	变量 文本框22 : 文本框
	@布局配置([[父布局=相对布局22,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局54 : 线性布局
	@布局配置([[父布局=线性布局54,宽度DP=35,高度DP=35,@右外边距DP=10,图片资源="../../../../资源库/图标/setting/images_right_arrow.png"]])
	变量 图片框3 : 图片框
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2,@上外边距DP=10,卡片阴影=0,圆角=5,可视=真,@下外边距DP=10]])
	变量 卡片布局4 : 卡片布局
	@布局配置([[父布局=卡片布局4,宽度=-1,高度=-1,背景颜色=-1,纵向布局=真]])
	变量 线性布局13 : 线性布局
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局14 : 线性布局
	@布局配置([[父布局=线性布局14,@左外边距DP=10,字体大小=15,字体颜色=-9671572,粗体=真,内容="基础配置"]])
	变量 文本框10 : 文本框
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=55,水波纹效果=真,可视=假]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,@左外边距DP=10,字体颜色=-16777216,内容="主题配置",粗体=真,字体大小=16]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局5,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="编辑器主题配置"]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,@左外边距DP=0,字体颜色=-9145228,@上外边距DP=0,内容="自定义",左内边距DP=0]])
	变量 文本框42 : 文本框
	@布局配置([[父布局=线性布局7,宽度DP=35,高度DP=35,@右外边距DP=10,图片资源="../../../../资源库/图标/setting/images_right_arrow.png"]])
	变量 图片框2s : 图片框
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局3 : 相对布局
	@布局配置([[父布局=相对布局3,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局15 : 线性布局
	@布局配置([[父布局=线性布局15,@左外边距DP=10,字体颜色=-16777216,内容="自动保存",粗体=真,字体大小=16]])
	变量 文本框11 : 文本框
	@布局配置([[父布局=线性布局15,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="只有在打开文件前会自动保存，包括快捷栏"]])
	变量 文本框12 : 文本框
	@布局配置([[父布局=相对布局3,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局16 : 线性布局
	@布局配置([[父布局=线性布局16,宽度DP=55,高度DP=35,@右外边距DP=10]])
	变量 IOS开关1 : IOS开关
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=55,水波纹效果=真,可视=真]])
	变量 相对布局11 : 相对布局
	@布局配置([[父布局=相对布局11,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局33 : 线性布局
	@布局配置([[父布局=线性布局33,@左外边距DP=10,字体颜色=-16777216,内容="自动保存 II",粗体=真,字体大小=16]])
	变量 文本框29 : 文本框
	@布局配置([[父布局=线性布局33,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="可以根据倒计时来实时保存"]])
	变量 文本框31 : 文本框
	@布局配置([[父布局=相对布局11,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局35 : 线性布局
	@布局配置([[父布局=线性布局35,宽度DP=55,高度DP=35,@右外边距DP=10]])
	变量 IOS开关3 : IOS开关
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=55,水波纹效果=真,可视=真]])
	变量 相对布局19 : 相对布局
	@布局配置([[父布局=相对布局19,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局42 : 线性布局
	@布局配置([[父布局=线性布局42,@左外边距DP=10,字体颜色=-16777216,内容="自动保存倒计时",粗体=真,字体大小=16]])
	变量 文本框44 : 文本框
	@布局配置([[父布局=线性布局42,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="自动保存II 开启后,在文件快捷栏上显示倒计时"]])
	变量 文本框46 : 文本框
	@布局配置([[父布局=相对布局19,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局48 : 线性布局
	@布局配置([[父布局=线性布局48,宽度DP=55,高度DP=35,@右外边距DP=10]])
	变量 IOS开关11 : IOS开关
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=55,水波纹效果=真,可视=真]])
	变量 相对布局12 : 相对布局
	@布局配置([[父布局=相对布局12,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局34 : 线性布局
	@布局配置([[父布局=线性布局34,@左外边距DP=10,字体颜色=-16777216,内容="文件快捷栏记录",粗体=真,字体大小=16]])
	变量 文本框30 : 文本框
	@布局配置([[父布局=线性布局34,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="保存上次的文件快捷栏记录"]])
	变量 文本框32 : 文本框
	@布局配置([[父布局=相对布局12,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局36 : 线性布局
	@布局配置([[父布局=线性布局36,宽度DP=55,高度DP=35,@右外边距DP=10]])
	变量 IOS开关3s : IOS开关
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=55,水波纹效果=真,可视=真]])
	变量 相对布局18 : 相对布局
	@布局配置([[父布局=相对布局18,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,@左外边距DP=10,字体颜色=-16777216,内容="菜单动画时长",粗体=真,字体大小=16]])
	变量 文本框4 : 文本框
	@布局配置([[父布局=线性布局6,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="菜单打开时的出场动画时长"]])
	变量 文本框6 : 文本框
	@布局配置([[父布局=相对布局18,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,字体颜色=-9145228,内容="1000"]])
	变量 文本框47 : 文本框
	@布局配置([[父布局=线性布局8,宽度DP=35,高度DP=35,@右外边距DP=10,图片资源="../../../../资源库/图标/setting/images_right_arrow.png"]])
	变量 图片框9 : 图片框
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=55,水波纹效果=真,可视=真]])
	变量 相对布局21 : 相对布局
	@布局配置([[父布局=相对布局21,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局59 : 线性布局
	@布局配置([[父布局=线性布局59,@左外边距DP=10,字体颜色=-16777216,内容="符号栏",粗体=真,字体大小=16]])
	变量 文本框43 : 文本框
	@布局配置([[父布局=线性布局59,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="快捷符号栏，每个字符之间要空格"]])
	变量 文本框45 : 文本框
	@布局配置([[父布局=相对布局21,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局60 : 线性布局
	@布局配置([[父布局=线性布局60,字体颜色=-9145228,内容="标题"]])
	变量 文本框50 : 文本框
	@布局配置([[父布局=线性布局60,宽度DP=35,高度DP=35,@右外边距DP=10,图片资源="../../../../资源库/图标/setting/images_right_arrow.png"]])
	变量 图片框2 : 图片框
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2,@上外边距DP=10,卡片阴影=0,圆角=5,@下外边距DP=10,可视=真]])
	变量 卡片布局5 : 卡片布局
	@布局配置([[父布局=卡片布局5,宽度=-1,高度=-1,背景颜色=-1,纵向布局=真]])
	变量 线性布局17 : 线性布局
	@布局配置([[父布局=线性布局17,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局18 : 线性布局
	@布局配置([[父布局=线性布局18,@左外边距DP=10,字体大小=15,字体颜色=-9671572,粗体=真,内容="编辑器"]])
	变量 文本框13 : 文本框
	@布局配置([[父布局=线性布局17,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局4 : 相对布局
	@布局配置([[父布局=相对布局4,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局19 : 线性布局
	@布局配置([[父布局=线性布局19,@左外边距DP=10,字体颜色=-16777216,内容="自动换行",粗体=真,字体大小=16]])
	变量 文本框14 : 文本框
	@布局配置([[父布局=线性布局19,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="自动将字符超过可视范围外进行自动换行"]])
	变量 文本框15 : 文本框
	@布局配置([[父布局=相对布局4,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局20 : 线性布局
	@布局配置([[父布局=线性布局20,宽度DP=55,高度DP=35,@右外边距DP=10]])
	变量 IOS开关4 : IOS开关
	@布局配置([[父布局=线性布局17,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局13 : 相对布局
	@布局配置([[父布局=相对布局13,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局37 : 线性布局
	@布局配置([[父布局=线性布局37,@左外边距DP=10,字体颜色=-16777216,内容="自动补全",粗体=真,字体大小=16]])
	变量 文本框28 : 文本框
	@布局配置([[父布局=线性布局37,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="编辑的时候显示自动完成面板"]])
	变量 文本框41 : 文本框
	@布局配置([[父布局=相对布局13,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局43 : 线性布局
	@布局配置([[父布局=线性布局43,宽度DP=55,高度DP=35,@右外边距DP=10]])
	变量 IOS开关5 : IOS开关
	@布局配置([[父布局=线性布局17,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局14 : 相对布局
	@布局配置([[父布局=相对布局14,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局38 : 线性布局
	@布局配置([[父布局=线性布局38,@左外边距DP=10,字体颜色=-16777216,内容="设置字体",粗体=真,字体大小=16]])
	变量 文本框33 : 文本框
	@布局配置([[父布局=线性布局38,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="设置代码编辑器的字体"]])
	变量 文本框37 : 文本框
	@布局配置([[父布局=相对布局14,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局44 : 线性布局
	@布局配置([[父布局=线性布局44,字体颜色=-9145228,内容="标题",宽度=300,对齐方式=8388613,单行显示=真]])
	变量 文本框51 : 文本框
	@布局配置([[父布局=线性布局44,宽度DP=35,高度DP=35,@右外边距DP=10,图片资源="../../../../资源库/图标/setting/images_right_arrow.png"]])
	变量 图片框5 : 图片框
	@布局配置([[父布局=线性布局17,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局16 : 相对布局
	@布局配置([[父布局=相对布局16,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局40 : 线性布局
	@布局配置([[父布局=线性布局40,@左外边距DP=10,字体颜色=-16777216,内容="背景图片",粗体=真,字体大小=16]])
	变量 文本框35 : 文本框
	@布局配置([[父布局=线性布局40,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="代码编辑器的背景图片"]])
	变量 文本框39 : 文本框
	@布局配置([[父布局=相对布局16,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局46 : 线性布局
	@布局配置([[父布局=线性布局46,字体颜色=-9145228,内容="标题",宽度=300,对齐方式=8388613,单行显示=真]])
	变量 文本框52 : 文本框
	@布局配置([[父布局=线性布局46,宽度DP=35,高度DP=35,@右外边距DP=10,图片资源="../../../../资源库/图标/setting/images_right_arrow.png"]])
	变量 图片框4 : 图片框
	@布局配置([[父布局=线性布局17,宽度=-1,高度DP=55,水波纹效果=真,可视=假]])
	变量 相对布局15 : 相对布局
	@布局配置([[父布局=相对布局15,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局39 : 线性布局
	@布局配置([[父布局=线性布局39,@左外边距DP=10,字体颜色=-16777216,内容="标题",粗体=真,字体大小=16]])
	变量 文本框34 : 文本框
	@布局配置([[父布局=线性布局39,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="标题"]])
	变量 文本框38 : 文本框
	@布局配置([[父布局=相对布局15,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局45 : 线性布局
	@布局配置([[父布局=线性布局45,宽度DP=35,高度DP=35,@右外边距DP=10,图片资源="../../../../资源库/图标/setting/images_right_arrow.png"]])
	变量 图片框15 : 图片框
	@布局配置([[父布局=线性布局17,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局17 : 相对布局
	@布局配置([[父布局=相对布局17,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局41 : 线性布局
	@布局配置([[父布局=线性布局41,@左外边距DP=10,字体颜色=-16777216,内容="更多设置",粗体=真,字体大小=16]])
	变量 文本框36 : 文本框
	@布局配置([[父布局=线性布局41,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="编辑器的其他相关设置，请勿随便修改"]])
	变量 文本框40 : 文本框
	@布局配置([[父布局=相对布局17,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局47 : 线性布局
	@布局配置([[父布局=线性布局47,宽度DP=35,高度DP=35,@右外边距DP=10,图片资源="../../../../资源库/图标/setting/images_right_arrow.png"]])
	变量 图片框17 : 图片框

	//声明
	变量 设置_设定 : 设置_设定
	变量 设置_编辑 : 设置_编辑

	事件 设置_代码编辑器:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//退出按钮
		事件 图片框1:被单击()
			保存()
			关闭窗口()
		结束 事件
		事件 文本框2:被单击()
			保存()
			关闭窗口()
		结束 事件
		//设置
		IOS开关1.选中 = 设置_设定.获取开关("CodeEditorAutoSave")
		IOS开关3.选中 = 设置_设定.获取开关("CodeEditorAutoSave2")
		IOS开关11.选中 = 设置_设定.获取开关("CodeEditorAutoSaveDisplayCountdown")
		IOS开关3s.选中 = 设置_设定.获取开关("CodeEditorFileShortcutBar")
		文本框47.内容 = 设置_设定.获取文本("CodeEditorMenuAnimationDuration")
		文本框50.内容 = 设置_设定.获取文本("CodeEditorSymbolBar")
		IOS开关4.选中 = 设置_设定.获取开关("CodeEditorWordwrap")
		IOS开关5.选中 = 设置_设定.获取开关("CodeEditorAutocomplete")
		文本框51.内容 = 设置_设定.获取文本("CodeEditorTypeface")
		文本框52.内容 = 设置_设定.获取文本("CodeEditorBackground")
		//加载夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		否则
			单选框2.可用 = 假
			单选框3.可用 = 假
			单选框8.可用 = 假
			单选框7.可用 = 假
			单选框4.可用 = 真
			单选框5.可用 = 真
			单选框6.可用 = 真
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,滚动布局1,设置相关路径)
			结束 如果
		结束 如果
		//加载方法
		加载主题配置选项()
		主题配置选项事件()
		功能设置按钮事件()
		//订阅事件
		订阅事件()
	结束 事件

	//窗口被重新启动时触发该事件
	事件 设置_代码编辑器:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
		//重新加载配置
		加载主题配置选项()
	结束 事件

	//加载主题配置选项
	方法 加载主题配置选项()
		主题配置选项清空()
		假如 设置_设定.获取整数("CodeEditorSchemeType")
			是 0
				单选框1.选中 = 真
			是 1
				单选框2.选中 = 真
			是 2
				单选框3.选中 = 真
			是 3
				单选框4.选中 = 真
			是 4
				单选框5.选中 = 真
			是 5
				单选框6.选中 = 真
			是 6
				单选框7.选中 = 真
			是 7
				单选框8.选中 = 真
		结束 假如
	结束 方法

	//部分按钮事件被点击
	方法 功能设置按钮事件()
		//菜单动画时长
		事件 相对布局18:被单击()
			设置_编辑.整数(文本框47,"菜单动画时长","设置菜单入场的动画时长",0,5000)
		结束 事件
		//符号栏
		事件 相对布局21:被单击()
			设置_编辑.文本(文本框50,"符号栏","每个字符需要空格")
		结束 事件
		//设置字体
		事件 相对布局14:被单击()
			设置_编辑.文本(文本框51,"字体","默认字体：\n第1种默认字体：f1\n第2种默认字体：f2\n留空则不采用任何字体\n支持输入路径来指明字体")
		结束 事件
		//设置背景
		事件 相对布局16:被单击()
			设置_编辑.文本(文本框52,"背景图片","设置编辑器的背景图片，请填写路径")
		结束 事件
	结束 方法

	//主题配置选项事件
	方法 主题配置选项事件()
		//
		事件 单选框1:选中状态改变(选中 : 逻辑型)
			如果 选中 则
				主题配置选项清空()
				单选框1.选中 = 真
				设置_设定.修改整数("CodeEditorSchemeType",0)
			结束 如果
		结束 事件
		//
		事件 单选框2:选中状态改变(选中 : 逻辑型)
			如果 选中 则
				主题配置选项清空()
				单选框2.选中 = 真
				设置_设定.修改整数("CodeEditorSchemeType",1)
			结束 如果
		结束 事件
		//
		事件 单选框3:选中状态改变(选中 : 逻辑型)
			如果 选中 则
				主题配置选项清空()
				单选框3.选中 = 真
				设置_设定.修改整数("CodeEditorSchemeType",2)
			结束 如果
		结束 事件
		//
		事件 单选框4:选中状态改变(选中 : 逻辑型)
			如果 选中 则
				主题配置选项清空()
				单选框4.选中 = 真
				设置_设定.修改整数("CodeEditorSchemeType",3)
			结束 如果
		结束 事件
		//
		事件 单选框5:选中状态改变(选中 : 逻辑型)
			如果 选中 则
				主题配置选项清空()
				单选框5.选中 = 真
				设置_设定.修改整数("CodeEditorSchemeType",4)
			结束 如果
		结束 事件
		//
		事件 单选框6:选中状态改变(选中 : 逻辑型)
			如果 选中 则
				主题配置选项清空()
				单选框6.选中 = 真
				设置_设定.修改整数("CodeEditorSchemeType",5)
			结束 如果
		结束 事件
		//
		事件 单选框7:选中状态改变(选中 : 逻辑型)
			如果 选中 则
				主题配置选项清空()
				单选框7.选中 = 真
				设置_设定.修改整数("CodeEditorSchemeType",6)
			结束 如果
		结束 事件
		//
		事件 单选框8:选中状态改变(选中 : 逻辑型)
			如果 选中 则
				主题配置选项清空()
				单选框8.选中 = 真
				设置_设定.修改整数("CodeEditorSchemeType",7)
			结束 如果
		结束 事件
	结束 方法

	//本地主题按钮事件
	事件 相对布局22:被单击()
		切换窗口(设置_代码编辑器_主题)
	结束 事件

	//其他设置
	事件 相对布局17:被单击()
		切换窗口(设置_代码编辑器_其他编辑 )
	结束 事件

	//主题配置选项清空所有选项
	方法 主题配置选项清空()
		单选框1.选中 = 假
		单选框2.选中 = 假
		单选框3.选中 = 假
		单选框4.选中 = 假
		单选框5.选中 = 假
		单选框6.选中 = 假
		单选框7.选中 = 假
		单选框8.选中 = 假
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		线性布局3.背景颜色 = 0XFF222222
		卡片布局1.卡片背景颜色 = 0XFF222222
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
		图片框1.图片资源 = 其他_资源.白色返回图标
		滚动布局1.背景颜色 = 0XFF222222
		线性布局4.背景颜色 = 0XFF222222
		相对布局1.背景颜色 = 0XFF333333
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框5.字体颜色 = 0XFFFFFFFF
		文本框4.字体颜色 = 0XFFFFFFFF
		文本框6.字体颜色 = 0XFFE0E0E0
		线性布局9.背景颜色 = 0XFF333333
		线性布局13.背景颜色 = 0XFF333333
		线性布局17.背景颜色 = 0XFF333333
		卡片布局3.卡片背景颜色 = 0XFF333333
		卡片布局4.卡片背景颜色 = 0XFF333333
		卡片布局5.卡片背景颜色 = 0XFF333333
		文本框7.字体颜色 = 0XFFE0E0E0
		文本框13.字体颜色 = 0XFFE0E0E0
		文本框10.字体颜色 = 0XFFE0E0E0
		文本框8.字体颜色 = 0XFFFFFFFF
		文本框16.字体颜色 = 0XFFFFFFFF
		文本框17.字体颜色 = 0XFFFFFFFF
		文本框18.字体颜色 = 0XFFFFFFFF
		文本框19.字体颜色 = 0XFFFFFFFF
		文本框20.字体颜色 = 0XFFFFFFFF
		文本框21.字体颜色 = 0XFFFFFFFF
		文本框22.字体颜色 = 0XFFE0E0E0
		文本框11.字体颜色 = 0XFFFFFFFF
		文本框12.字体颜色 = 0XFFE0E0E0
		文本框9.字体颜色 = 0XFFE0E0E0
		文本框14.字体颜色 = 0XFFFFFFFF
		文本框28.字体颜色 = 0XFFFFFFFF
		文本框33.字体颜色 = 0XFFFFFFFF
		文本框34.字体颜色 = 0XFFFFFFFF
		文本框35.字体颜色 = 0XFFFFFFFF
		文本框36.字体颜色 = 0XFFFFFFFF
		文本框15.字体颜色 = 0XFFE0E0E0
		文本框41.字体颜色 = 0XFFE0E0E0
		文本框37.字体颜色 = 0XFFE0E0E0
		文本框38.字体颜色 = 0XFFE0E0E0
		文本框39.字体颜色 = 0XFFE0E0E0
		文本框40.字体颜色 = 0XFFE0E0E0
		文本框29.字体颜色 = 0XFFFFFFFF
		文本框31.字体颜色 = 0XFFE0E0E0
		文本框30.字体颜色 = 0XFFFFFFFF
		文本框32.字体颜色 = 0XFFE0E0E0
		文本框44.字体颜色 = 0XFFFFFFFF
		文本框42.字体颜色 = 0XFFE0E0E0
		文本框43.字体颜色 = 0XFFFFFFFF
		文本框45.字体颜色 = 0XFFE0E0E0
		文本框46.字体颜色 = 0XFFE0E0E0
		文本框47.字体颜色 = 0XFFE0E0E0
		文本框50.字体颜色 = 0XFFE0E0E0
		文本框51.字体颜色 = 0XFFE0E0E0
		文本框52.字体颜色 = 0XFFE0E0E0
		文本框9.字体颜色 = 0XFFFFFFFF
		文本框22.字体颜色 = 0XFFFFFFFF
		单选框2.可用 = 真
		单选框3.可用 = 真
		单选框8.可用 = 真
		单选框7.可用 = 真
		单选框4.可用 = 假
		单选框5.可用 = 假
		单选框6.可用 = 假
	结束 方法

	@虚拟方法
	方法 返回键被按下()
		保存()
		父对象.返回键被按下()
	结束 方法

	//保存
	方法 保存()
		设置_设定.修改开关("CodeEditorAutoSave",IOS开关1.选中)
		设置_设定.修改开关("CodeEditorAutoSave2",IOS开关3.选中)
		设置_设定.修改开关("CodeEditorAutoSaveDisplayCountdown",IOS开关11.选中)
		设置_设定.修改开关("CodeEditorFileShortcutBar",IOS开关3s.选中)
		设置_设定.修改整数("CodeEditorMenuAnimationDuration",文本框47.内容.到整数())
		设置_设定.修改文本("CodeEditorSymbolBar",文本框50.内容)
		设置_设定.修改开关("CodeEditorWordwrap",IOS开关4.选中)
		设置_设定.修改开关("CodeEditorAutocomplete",IOS开关5.选中)
		设置_设定.修改文本("CodeEditorTypeface",文本框51.内容)
		设置_设定.修改文本("CodeEditorBackground",文本框52.内容)
	结束 方法


结束 类


类 设置_代码编辑器_主题 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=15,高度DP=15,图片资源="../../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,字体大小=15,内容="代码编辑器设置",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局2,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0,卡片背景颜色=16251129]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,粗体=真,字体大小=16,内容="自定义主题",字体颜色=-16777216]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,完全显示=假,显示滚动条=假]])
	变量 滚动布局1 : 滚动布局
	@布局配置([[父布局=滚动布局1,宽度=-1,高度=-1,纵向布局=真,右内边距DP=10,左内边距DP=10]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2,@上外边距DP=10,卡片阴影=0,圆角=5,可视=真]])
	变量 卡片布局3 : 卡片布局
	@布局配置([[父布局=卡片布局3,宽度=-1,高度=-1,背景颜色=-1,纵向布局=真]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局10 : 线性布局
	@布局配置([[父布局=线性布局10,@左外边距DP=10,字体大小=15,字体颜色=-9671572,粗体=真,内容="主题配置"]])
	变量 文本框7 : 文本框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局2 : 相对布局
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局11 : 线性布局
	@布局配置([[父布局=线性布局11,@左外边距DP=10,字体颜色=-16777216,内容="自定义主题",粗体=真,字体大小=16]])
	变量 文本框8 : 文本框
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局12 : 线性布局
	@布局配置([[父布局=线性布局12,选中=假,内容="",@右外边距DP=10,可用=假]])
	变量 单选框1 : 单选框
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,@上外边距DP=10,卡片阴影=0,圆角=5,可视=真,@下外边距DP=10]])
	变量 卡片布局4 : 卡片布局
	@布局配置([[父布局=卡片布局4,宽度=-1,高度=-1,背景颜色=-1,纵向布局=真]])
	变量 线性布局13 : 线性布局
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局14 : 线性布局
	@布局配置([[父布局=线性布局14,@左外边距DP=10,字体大小=15,字体颜色=-9671572,粗体=真,内容="主题列表 (轻触选择，长按编辑)"]])
	变量 文本框10 : 文本框
	@布局配置([[父布局=线性布局13,宽度=-1,高度=-1]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=400,@下外边距DP=10,显示滑块条=假,始终显示快速滚动条=假,分割线高度=0,背景颜色=-1]])
	变量 自定义列表框1 : 自定义列表框

	//声明
	变量 设置_设定 : 设置_设定

	变量 列表集合 : 文本集合

	事件 设置_代码编辑器_主题:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//退出按钮
		事件 图片框1:被单击()
			检查SchemeName()
		结束 事件
		事件 文本框2:被单击()
			检查SchemeName()
		结束 事件
		//设置
		如果 设置_设定.获取整数("CodeEditorSchemeType") == 8 则
			单选框1.选中 = 真
			卡片布局4.可视 = 真
		否则
			单选框1.选中 = 假
			卡片布局4.可视 = 假
		结束 如果
		//CodeEditorSchemeName
		如果 设置_设定.获取文本("CodeEditorSchemeName") == "" 则
			如果 设置_设定.获取整数("CodeEditorSchemeType") == 8 则
				文本框10.内容 = "主题列表，当前为：" + 设置_设定.获取文本("CodeEditorSchemeName")
			结束 如果
		结束 如果
		//加载夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			本对象.状态栏颜色 = 0XFF333333
			本对象.状态栏字体黑色 = 假
			线性布局2.背景颜色 = 0XFF333333
			线性布局3.背景颜色 = 0XFF222222
			卡片布局1.卡片背景颜色 = 0XFF222222
			文本框2.字体颜色 = 0XFFFFFFFF
			文本框3.字体颜色 = 0XFFFFFFFF
			图片框1.图片资源 = 其他_资源.白色返回图标
			滚动布局1.背景颜色 = 0XFF222222
			卡片布局3.卡片背景颜色 = 0XFF333333
			线性布局9.背景颜色 = 0XFF333333
			文本框7.字体颜色 = 0XFFE0E0E0
			文本框8.字体颜色 = 0XFFFFFFFF
			卡片布局4.卡片背景颜色 = 0XFF333333
			线性布局13.背景颜色 = 0XFF333333
			文本框10.字体颜色 = 0XFFE0E0E0
			自定义列表框1.背景颜色 = 0XFF333333
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,滚动布局1,设置相关路径)
			结束 如果
		结束 如果
		//加载方法
		变量 列表文件路径 : 文本 = 其他_变量.数据目录 + "code/schemes"
		加载列表(列表文件路径)
		//订阅事件
		订阅事件()
	结束 事件

	//窗口被重新启动时触发该事件
	事件 设置_代码编辑器_主题:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
	结束 事件

	//项目被选中的事件
	事件 单选框1:选中状态改变(选中 : 逻辑型)
		如果 选中 则
			单选框1.选中 = 真
			设置_设定.修改整数("CodeEditorSchemeType",8)
			卡片布局4.可视 = 真
			设置_设定.修改文本("CodeEditorSchemeName","")
		否则
			卡片布局4.可视 = 假
		结束 如果
	结束 事件

	@虚拟方法
	方法 返回键被按下()
		检查SchemeName()
	结束 方法

	//加载列表
	方法 加载列表(路径 : 文本)
		事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 设置_代码编辑器_主题列表?
			如果 项目布局 == 空 则
				布局 = 创建 设置_代码编辑器_主题列表
			否则
				布局 = 项目布局
			结束 如果
			//显示到列表
			变量 文件路径 : 文本 = 列表集合[索引]
			布局.文本框1.内容 = 取文件名(文件路径)
			布局.文本框5.内容 = 取文件修改时间(文件路径)
			//事件
			事件 布局.相对布局1:被单击()
				如果 设置_设定.获取整数("CodeEditorSchemeType") == 8 则
					设置_设定.修改文本("CodeEditorSchemeName",取文件名(文件路径))
					图图好看的提示.成功(本对象,"主题选择完毕！",4500)
					关闭窗口()
				结束 如果
			结束 事件
			//长按编辑
			事件 布局.相对布局1:被长按()
				其他_其他.写缓存("CodeEditorSchemeName",取文件名(文件路径))
				设置_设定.修改文本("CodeEditorSchemeName",取文件名(文件路径))
				切换窗口(设置_代码编辑器_主题编辑)
			结束 事件
			//计算长度
			变量 数量 : 整数 = 列表集合.长度
			如果 数量 <= 8 则
				自定义列表框1.高度DP = 数量 * 55
			否则
				自定义列表框1.高度DP = 480
			结束 如果
			返回 布局
		结束 事件
		列表集合 = 文件操作.取子文件集合(路径)
		自定义列表框1.更新项目(列表集合.长度)
	结束 方法

	//检查SchemeName是否为空或者未选择列表
	方法 检查SchemeName()
		如果 单选框1.选中 则
			如果 设置_设定.获取文本("CodeEditorSchemeName") == "" 则
				弹出警告提示("请选择你的列表，如果未选择任何列表，则使用默认主题！\n再次返回即设置为默认主题")
				单选框1.选中 = 假
			否则
				如果 设置_设定.获取文本("CodeEditorSchemeName") == "" 则
					设置_设定.修改整数("CodeEditorSchemeType",0)
					否则
						设置_设定.修改整数("CodeEditorSchemeType",8)
				结束 如果
				关闭窗口()
			结束 如果
		否则
			关闭窗口()
		结束 如果
	结束 方法


结束 类

类 设置_代码编辑器_主题编辑 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=15,高度DP=15,图片资源="../../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,字体大小=15,内容="主题主页",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局2,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0,卡片背景颜色=16251129]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,粗体=真,字体大小=16,内容="编辑主题",字体颜色=-16777216]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,纵向布局=真,右内边距DP=10,左内边距DP=10]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-2,@上外边距DP=10,卡片阴影=0,圆角=5,可视=真]])
	变量 卡片布局3 : 卡片布局
	@布局配置([[父布局=卡片布局3,宽度=-1,高度=-1,背景颜色=-1,纵向布局=真]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局10 : 线性布局
	@布局配置([[父布局=线性布局10,@左外边距DP=10,字体大小=15,字体颜色=-9671572,粗体=真,内容="主题"]])
	变量 文本框7 : 文本框
	@布局配置([[父布局=线性布局9,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局2 : 相对布局
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局11 : 线性布局
	@布局配置([[父布局=线性布局11,@左外边距DP=10,字体颜色=-16777216,内容="夜间主题编辑",粗体=真,字体大小=16]])
	变量 文本框8 : 文本框
	@布局配置([[父布局=相对布局2,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局12 : 线性布局
	@布局配置([[父布局=线性布局12,@右外边距DP=10,内容=""]])
	变量 多选框1 : 多选框
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,@上外边距DP=10,卡片阴影=0,圆角=5,可视=真,@下外边距DP=10]])
	变量 卡片布局4 : 卡片布局
	@布局配置([[父布局=卡片布局4,宽度=-1,高度=-1,背景颜色=-1,纵向布局=真]])
	变量 线性布局13 : 线性布局
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局14 : 线性布局
	@布局配置([[父布局=线性布局14,@左外边距DP=10,字体大小=15,字体颜色=-9671572,粗体=真,内容="主题编辑"]])
	变量 文本框10 : 文本框
	@布局配置([[父布局=线性布局13,宽度=-1,高度=-1]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,@下外边距DP=0,显示滑块条=假,始终显示快速滚动条=假,分割线高度=0,背景颜色=-1,高度=-1]])
	变量 自定义列表框1 : 自定义列表框

	//声明
	变量 设置_设定 : 设置_设定
	变量 设置_编辑 : 设置_编辑
	变量 列表集合 : 文本集合
	变量 主题配置 : 设置_代码编辑器_主题配置

	变量 主题文件路径 : 文本

	事件 设置_代码编辑器_主题编辑:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//退出按钮
		事件 图片框1:被单击()
			关闭窗口()
		结束 事件
		事件 文本框2:被单击()
			关闭窗口()
		结束 事件
		//加载夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			本对象.状态栏颜色 = 0XFF333333
			本对象.状态栏字体黑色 = 假
			线性布局2.背景颜色 = 0XFF333333
			线性布局3.背景颜色 = 0XFF222222
			卡片布局1.卡片背景颜色 = 0XFF222222
			文本框2.字体颜色 = 0XFFFFFFFF
			文本框3.字体颜色 = 0XFFFFFFFF
			图片框1.图片资源 = 其他_资源.白色返回图标
			线性布局4.背景颜色 = 0XFF222222
			卡片布局3.卡片背景颜色 = 0XFF333333
			线性布局9.背景颜色 = 0XFF333333
			文本框7.字体颜色 = 0XFFE0E0E0
			文本框8.字体颜色 = 0XFFFFFFFF
			卡片布局4.卡片背景颜色 = 0XFF333333
			线性布局13.背景颜色 = 0XFF333333
			文本框10.字体颜色 = 0XFFE0E0E0
			自定义列表框1.背景颜色 = 0XFF333333
		结束 如果
		//加载列表
		主题文件路径 = 其他_变量.数据目录 + "code/schemes/" + 其他_其他.读缓存("CodeEditorSchemeName")
		变量 其他_功能 : 其他_功能
		如果 其他_功能.JSON文件是否合法(主题文件路径) 则
			变量 json : JSON对象 = 读入文本文件(主题文件路径)
			如果 json.是否存在("LightColor") 则
				加载列表(假)
				如果 json.是否存在("DarkColor") 则
					多选框1.可用 = 真
				否则
					多选框1.可用 = 假
					变量 提示 : DX基础对话框
					如果 设置_设定.获取开关("NightMode") 则
						提示.主题(DX主题.暗色)
					结束 如果
					提示.标题("提示")
					提示.内容("主题文件中缺失夜间主题，无法正常编辑夜间主题")
					提示.按钮1("关闭")
					提示.显示()
				结束 如果
			否则
				多选框1.可用 = 假
				文本框10.内容 = "加载失败，未找到：LightColor"
			结束 如果
		否则
			多选框1.可用 = 假
			弹出错误提示("json文件错误，加载失败！")
		结束 如果
		//订阅事件
		订阅事件()
	结束 事件

	/*
	窗口被重新启动时触发该事件
	*/
	事件 设置_代码编辑器_主题编辑:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
	结束 事件

	//多选框被点击
	事件 多选框1:选中状态改变(选中 : 逻辑型)
		如果 选中 则
			加载列表(真)
		否则
			加载列表(假)
		结束 如果
	结束 事件

	//初始化列表
	方法 加载列表(夜间模式:逻辑型)
		变量 json : JSON对象 = 读入文本文件(主题文件路径)
		如果 夜间模式 则
			如果 json.是否存在("DarkColor") 则
				变量 jsondark : JSON对象 = json["DarkColor"]
				加载编辑列表(jsondark)
				文本框10.内容 = "主题编辑 - 夜间"
			否则
				多选框1.选中 = 假
				弹出错误提示("无法编辑夜间主题，原因：未找到键DarkColor，否则在夜间模式中的代码编辑器会闪退")
			结束 如果
		否则
			如果 json.是否存在("LightColor") 则
				变量 jsondark : JSON对象 = json["LightColor"]
				加载编辑列表(jsondark)
				文本框10.内容 = "主题编辑"
			否则
				弹出错误提示("无法编辑白天主题，原因：未找到键LightColor，否则在代码编辑器会闪退")
			结束 如果
		结束 如果
	结束 方法

	//刷新列表
	方法 刷新列表()
		变量 json : JSON对象 = 读入文本文件(主题文件路径)
		如果 多选框1.选中 则
			变量 jsondark : JSON对象 = json["DarkColor"]
			加载编辑列表(jsondark)
		否则
			变量 jsondark : JSON对象 = json["LightColor"]
			加载编辑列表(jsondark)
		结束 如果
	结束 方法

	//加载列表
	方法 加载编辑列表(jsonlist : JSON对象)
		//转换为文本集合
		列表集合.清空()
		循环(i, 0, 取数组长度(jsonlist.键名))
			变量 键名称 : 文本  = 数组到集合(jsonlist.键名).取成员(i).到文本()
			列表集合.添加成员(键名称)
		结束 循环
		//加载列表
		事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 设置_代码编辑器_主题编辑列表?
			如果 项目布局 == 空 则
				布局 = 创建 设置_代码编辑器_主题编辑列表
			否则
				布局 = 项目布局
			结束 如果
			//显示到列表
			变量 列表键名 : 文本 = 列表集合[索引]
			布局.文本框1.内容 = 获取设置名称(列表键名)
			布局.线性布局1.背景颜色 = 颜色操作.文本到颜色值(jsonlist[列表键名].到文本())
			//列表被单击
			事件 布局.相对布局1:被单击()
				设置_编辑.颜色(jsonlist[列表键名].到文本())
				事件 设置_编辑:颜色选择器结果(颜色 : 文本,颜色2 : 整数)
					主题配置.设置(列表键名,颜色,多选框1.选中)
					刷新列表()
				结束 事件
			结束 事件
			返回 布局
		结束 事件
		自定义列表框1.更新项目(列表集合.长度)
	结束 方法

	方法 获取设置名称(键名 : 文本) : 文本
		变量 jsonname : JSON对象 = 读入资源文件(本对象,"editor/code_editor/scheme_name.json")
		如果 jsonname.是否存在(键名) 则
			返回 jsonname[键名].到文本()
		结束 如果
		返回 键名
	结束 方法


结束 类

类 设置_代码编辑器_其他编辑 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=15,高度DP=15,图片资源="../../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,字体大小=15,内容="代码编辑器设置",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局2,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0,卡片背景颜色=16251129]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,粗体=真,字体大小=16,内容="其他设置",字体颜色=-16777216]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,纵向布局=真,右内边距DP=10,左内边距DP=10]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,@上外边距DP=10,卡片阴影=0,圆角=5,可视=真,@下外边距DP=10]])
	变量 卡片布局4 : 卡片布局
	@布局配置([[父布局=卡片布局4,宽度=-1,高度=-1,背景颜色=-1,纵向布局=真]])
	变量 线性布局13 : 线性布局
	@布局配置([[父布局=线性布局13,宽度=-1,高度DP=40,对齐方式=8388627]])
	变量 线性布局14 : 线性布局
	@布局配置([[父布局=线性布局14,@左外边距DP=10,字体大小=15,字体颜色=-9671572,粗体=真,内容="设置"]])
	变量 文本框10 : 文本框
	@布局配置([[父布局=线性布局13,宽度=-1,高度=-1]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-1]])
	变量 下拉刷新布局1 : 下拉刷新布局
	@布局配置([[父布局=下拉刷新布局1,宽度=-1,@下外边距DP=0,显示滑块条=假,始终显示快速滚动条=假,分割线高度=0,背景颜色=-1,高度=-1]])
	变量 自定义列表框1 : 自定义列表框

	//声明
	变量 设置_设定 : 设置_设定
	变量 设置_编辑 : 设置_编辑
	变量 列表集合 : 文本集合

	变量 设置文件路径 : 文本

	事件 设置_代码编辑器_其他编辑:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//退出按钮
		事件 图片框1:被单击()
			关闭窗口()
		结束 事件
		事件 文本框2:被单击()
			关闭窗口()
		结束 事件
		//加载夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			本对象.状态栏颜色 = 0XFF333333
			本对象.状态栏字体黑色 = 假
			线性布局2.背景颜色 = 0XFF333333
			线性布局3.背景颜色 = 0XFF222222
			卡片布局1.卡片背景颜色 = 0XFF222222
			文本框2.字体颜色 = 0XFFFFFFFF
			文本框3.字体颜色 = 0XFFFFFFFF
			图片框1.图片资源 = 其他_资源.白色返回图标
			线性布局4.背景颜色 = 0XFF222222
			卡片布局4.卡片背景颜色 = 0XFF333333
			线性布局13.背景颜色 = 0XFF333333
			文本框10.字体颜色 = 0XFFE0E0E0
			自定义列表框1.背景颜色 = 0XFF333333
		结束 如果
		//初始化
		设置文件路径 = 其他_变量.根目录 + "options.json"
		变量 json : JSON对象 = 读入文本文件(设置文件路径)
		//加载列表
		加载编辑列表(json)
		//订阅事件
		订阅事件()
	结束 事件

	/*
	窗口被重新启动时触发该事件
	*/
	事件 设置_代码编辑器_其他编辑:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
	结束 事件

	//下拉刷新
	事件 下拉刷新布局1 :下拉被刷新()
		刷新列表()
		下拉刷新布局1.刷新(假)
		弹出成功提示("刷新成功！")
	结束 事件
	
	//刷新列表
	方法 刷新列表()
		设置文件路径 = 其他_变量.根目录 + "options.json"
		变量 json : JSON对象 = 读入文本文件(设置文件路径)
		加载编辑列表(json)
	结束 方法

	//加载列表
	方法 加载编辑列表(jsonlist : JSON对象)
		//转换为文本集合
		列表集合.清空()
		循环(i, 0, 取数组长度(jsonlist.键名))
			变量 键名称 : 文本  = 数组到集合(jsonlist.键名).取成员(i).到文本()
			如果 键名称 ? "CodeEditorOther" 则
				列表集合.添加成员(键名称)
			结束 如果
		结束 循环
		//加载列表
		事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 设置_代码编辑器_其他编辑列表?
			布局 = 创建 设置_代码编辑器_其他编辑列表
			如果 设置_设定.获取开关("NightMode") 则
				布局.文本框36.字体颜色 = 0XFFFFFFFF
				布局.文本框40.字体颜色 = 0XFFE0E0E0
				布局.文本框1.字体颜色 = 0XFFE0E0E0
			结束 如果
			//显示到列表
			变量 列表键名 : 文本 = 列表集合[索引]
			变量 设置属性 : 文本[] = 获取设置属性(列表键名).分割文本(" ")
			变量 设置属性类型 : 文本 = 设置属性[0]
			变量 设置属性名称 : 文本 = 设置属性[1]
			变量 设置属性描述 : 文本 = 设置属性[2]
			布局.文本框1.标记 = 列表键名
			布局.文本框36.内容 = 设置属性名称
			布局.文本框40.内容 = 设置属性描述
			如果 设置属性类型 == "null" 则
			否则
				如果 设置属性类型 == "boolean" 则
					布局.图片框17.可视 = 假
					布局.文本框1.可视 = 假
					布局.IOS开关1.可视 = 真
					布局.IOS开关1.选中 = jsonlist[列表键名].到文本().到逻辑值()
				否则
					布局.图片框17.可视 = 真
					布局.文本框1.可视 = 真
					布局.IOS开关1.可视 = 假
					布局.文本框1.内容 = jsonlist[列表键名].到文本()
				结束 如果
			结束 如果
			//按钮被点击
			事件 布局.IOS开关1:选中状态改变(选中 : 逻辑型)
				设置_设定.修改开关(列表键名,选中)
			结束 事件
			//列表被单击
			事件 布局.相对布局17:被单击()
				如果 设置属性类型 == "boolean" 则
				否则
					编辑(列表键名,jsonlist[列表键名].到文本(),设置属性类型,设置属性名称)
				结束 如果
			结束 事件
			返回 布局
		结束 事件
		自定义列表框1.更新项目(列表集合.长度)
	结束 方法

	方法 获取设置属性(键名 : 文本) : 文本
		变量 jsonname : JSON对象 = 读入资源文件(本对象,"editor/code_editor/other_option.json")
		如果 jsonname.是否存在(键名) 则
			返回 jsonname[键名].到文本()
		结束 如果
		返回 "null NO NO"
	结束 方法

	//打开编辑对话框
	方法 编辑(键名 : 文本,键值 : 文本,类型 : 文本,设置名称 : 文本)
		//对话框
		变量 对话框 : 对话框
		变量 对话框布局 : 设置_代码编辑器_其他编辑布局
		对话框.自定义布局 = 对话框布局
		对话框.可取消 = 假
		对话框.显示()
		//置圆角背景边框
		如果 设置_设定.获取开关("NightMode") 则
			组件样式操作.置圆角背景边框(对话框布局.编辑框1,0XFF333333,2,0XFF222222,5,5,5,5)
		否则
			组件样式操作.置圆角背景边框(对话框布局.编辑框1,0xF0FFFFFF,2,0xFFE8E8E8,5,5,5,5)
		结束 如果
		//修改布局
		如果 类型 == "int" 则
			对话框布局.文本框1.内容 = 设置名称
			对话框布局.文本框2.内容 = "类型：整数\n只能输入整数"
			对话框布局.编辑框1.输入方式 =  2
		否则 类型 == "float"
			对话框布局.文本框2.内容 = "类型：单精度小数\n请在每个数字的后方加上f，例如：1.0f"
			对话框布局.编辑框1.输入方式 =  1
		否则 
			对话框布局.文本框2.内容 = "类型：字符串\n支持任意的字符"
			对话框布局.编辑框1.输入方式 =  1
		结束 如果
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			对话框布局.线性布局1.背景颜色 = 0XFF333333
			对话框布局.文本框1.字体颜色 = 0XFFFFFFFF
			对话框布局.文本框2.字体颜色 = 0XFFE0E0E0
			对话框布局.卡片布局2.卡片背景颜色 = 0XFF222222 
			对话框布局.线性布局7.背景颜色 = 0XFF222222
			对话框布局.文本框4.字体颜色 = 0XFFE0E0E0
			对话框布局.编辑框1.字体颜色 = 0XFFFFFFFF
		结束 如果
		//读取数据
		对话框布局.编辑框1.内容 = 键值
		//保存事件
		事件 对话框布局.线性布局5:被单击()
			如果 类型 == "int" 则
				如果 对话框布局.编辑框1.内容.替换(" ","") == "" 则
					设置_设定.修改文本(键名,"")
				结束 如果
				设置_设定.修改整数(键名,对话框布局.编辑框1.内容.到整数())
			否则 
				设置_设定.修改文本(键名,对话框布局.编辑框1.内容)
			结束 如果
			刷新列表()
			对话框.关闭()
		结束 事件
		//取消事件
		事件 对话框布局.线性布局7:被单击()
			对话框.关闭()
		结束 事件
	结束 方法


结束 类

类 设置_代码编辑器_主题列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度DP=55,水波纹效果=真,可视=真]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,@左外边距DP=10,字体颜色=-16777216,内容="列表名称",粗体=真,字体大小=16]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局5,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="列表的描述"]])
	变量 文本框5 : 文本框
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=35,高度DP=35,@右外边距DP=10,图片资源="../../../../资源库/图标/setting/images_right_arrow.png"]])
	变量 图片框2s : 图片框

	变量 设置_设定 : 设置_设定

	事件 设置_代码编辑器_主题列表:创建完毕()
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	方法 设置夜间模式()
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框5.字体颜色 = 0XFFE0E0E0
	结束 方法	

结束 类

类 设置_代码编辑器_主题编辑列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度DP=55,水波纹效果=真,可视=真]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,@左外边距DP=10,字体颜色=-16777216,内容="列表名称",粗体=真,字体大小=16]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=80,高度DP=30,@右外边距DP=10]])
	变量 线性布局1 : 线性布局

	变量 设置_设定 : 设置_设定

	事件 设置_代码编辑器_主题编辑列表:创建完毕()
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	方法 设置夜间模式()
		文本框1.字体颜色 = 0XFFFFFFFF
	结束 方法	

结束 类

类 设置_代码编辑器_其他编辑列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度DP=55,水波纹效果=真]])
	变量 相对布局17 : 相对布局
	@布局配置([[父布局=相对布局17,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局41 : 线性布局
	@布局配置([[父布局=线性布局41,@左外边距DP=10,字体颜色=-16777216,内容="标题",粗体=真,字体大小=16]])
	变量 文本框36 : 文本框
	@布局配置([[父布局=线性布局41,@左外边距DP=10,字体颜色=-9145228,@上外边距DP=3,内容="标题"]])
	变量 文本框40 : 文本框
	@布局配置([[父布局=相对布局17,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局47 : 线性布局
	@布局配置([[父布局=线性布局47,字体颜色=-9145228,内容="No Text",单行显示=真,省略显示=5,宽度DP=100,对齐方式=8388613,可视=假]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局47,宽度DP=35,高度DP=35,@右外边距DP=10,图片资源="../../../../资源库/图标/setting/images_right_arrow.png",可视=假]])
	变量 图片框17 : 图片框
	@布局配置([[父布局=线性布局47,宽度DP=55,高度DP=35,@左外边距DP=0,@右外边距DP=10,可视=假]])
	变量 IOS开关1 : IOS开关

	变量 设置_设定 : 设置_设定

	事件 设置_代码编辑器_其他编辑列表:创建完毕()
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	方法 设置夜间模式()
		文本框36.字体颜色 = 0XFFFFFFFF
		文本框40.字体颜色 = 0XFFE0E0E0
		文本框1.字体颜色 = 0XFFE0E0E0
	结束 方法	

结束 类

类 设置_代码编辑器_其他编辑布局 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,纵向布局=真,背景颜色=-1]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,对齐方式=17]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,字体大小=20,内容="标题",字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,纵向布局=真]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,粗体=真,内容="描述",字体大小=15]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局3,@左外边距DP=20,@右外边距DP=20,宽度=-1,高度=-1,@上外边距DP=5,@下外边距DP=20,右内边距DP=8,左内边距DP=8,提示文本="留空则默认"]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=60,上内边距DP=8,下内边距DP=8]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-769226,对齐方式=17,水波纹效果=真]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,字体颜色=-1,字体大小=16,粗体=真,内容="确 定"]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=44,上内边距DP=0,下内边距DP=0,@下外边距DP=10]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度=-1,高度=-1,圆角=70,@左外边距DP=20,@右外边距DP=20,卡片阴影=0,@下外边距DP=0]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,背景颜色=-986897,对齐方式=17,水波纹效果=真]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,字体颜色=-12632257,字体大小=16,粗体=真,内容="取 消"]])
	变量 文本框4 : 文本框

结束 类

类 设置_代码编辑器_主题配置

	//变量
	变量 主题文件路径 : 文本 = 其他_变量.数据目录 + "code/schemes/"
	变量 返回文本型 : 文本
	变量 设定 : 设置_设定

	//修改文本
	方法 设置(键 : 文本,值: 文本,夜间模式 : 逻辑型)
		如果 设定.获取整数("CodeEditorSchemeType") == 0 则
			如果 夜间模式 则
				变量 json : JSON对象 = 读入文本文件(主题文件路径 + "default_scheme.json")
				变量 DarkColor : JSON对象 = json["DarkColor"]
				DarkColor[键] = 值
				json["DarkColor"] = DarkColor
				写出文本文件(主题文件路径 + "default_scheme.json",json.到文本(4))
			否则
				变量 json : JSON对象 = 读入文本文件(主题文件路径 + "default_scheme.json")
				变量 LightColor : JSON对象 = json["LightColor"]
				LightColor[键] = 值
				json["LightColor"] = LightColor
				写出文本文件(主题文件路径 + "default_scheme.json",json.到文本(4))
			结束 如果
		否则 设定.获取整数("CodeEditorSchemeType") == 8
			如果 夜间模式 则
				变量 json : JSON对象 = 读入文本文件(主题文件路径 + 设定.获取文本("CodeEditorSchemeName"))
				变量 DarkColor : JSON对象 = json["DarkColor"]
				DarkColor[键] = 值
				json["DarkColor"] = DarkColor
				写出文本文件(主题文件路径 + 设定.获取文本("CodeEditorSchemeName"),json.到文本(4))
			否则
				变量 json : JSON对象 = 读入文本文件(主题文件路径 + 设定.获取文本("CodeEditorSchemeName"))
				变量 LightColor : JSON对象 = json["LightColor"]
				LightColor[键] = 值
				json["LightColor"] = LightColor
				写出文本文件(主题文件路径 + 设定.获取文本("CodeEditorSchemeName"),json.到文本(4))
			结束 如果
		结束 如果
	结束 方法

	方法 获得(键 : 文本) : 文本
		如果 设定.获取整数("CodeEditorSchemeType") == 0 则
			如果 设定.获取开关("NightMode") 则
				变量 json : JSON对象 = 读入文本文件(主题文件路径 + "default_scheme.json")
				变量 json2 : JSON对象 = json["DarkColor"]
				返回文本型 = json2[键].到文本()
			否则
				变量 json : JSON对象 = 读入文本文件(主题文件路径 + "default_scheme.json")
				变量 json2 : JSON对象 = json["LightColor"]
				返回文本型 = json2[键].到文本()
			结束 如果
		否则 设定.获取整数("CodeEditorSchemeType") == 8
			如果 设定.获取开关("NightMode") 则
				变量 json : JSON对象 = 读入文本文件(主题文件路径 + 设定.获取文本("CodeEditorSchemeName"))
				变量 json2 : JSON对象 = json["DarkColor"]
				返回文本型 = json2[键].到文本()
			否则
				变量 json : JSON对象 = 读入文本文件(主题文件路径 + 设定.获取文本("CodeEditorSchemeName"))
				变量 json2 : JSON对象 = json["LightColor"]
				返回文本型 = json2[键].到文本()
			结束 如果
		结束 如果
		返回 返回文本型
	结束 方法

结束 类