类 项目管理_文件管理 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局01 : 线性布局
	@布局配置([[父布局=线性布局01,高度DP=50,宽度=-1]])
	变量 相对布局01 : 相对布局
	@布局配置([[父布局=相对布局01,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局02 : 线性布局
	@布局配置([[父布局=线性布局02,宽度DP=15,高度DP=15,图片资源="../../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框01 : 图片框
	@布局配置([[父布局=线性布局02,字体大小=15,内容="项目",字体颜色=-16777216]])
	变量 文本框02 : 文本框
	@布局配置([[父布局=线性布局02,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0]])
	变量 卡片布局01 : 卡片布局
	@布局配置([[父布局=卡片布局01,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局03 : 线性布局
	@布局配置([[父布局=线性布局02,@左外边距DP=10,粗体=真,字体大小=16,内容="文件夹查看",字体颜色=-16777216]])
	变量 文本框03 : 文本框
	@布局配置([[父布局=相对布局01,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,高度DP=50,宽度DP=50,纵向布局=真,对齐方式=17,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=25,高度DP=25,图片资源="../../../../资源库/图标/management/res/up.png"]])
	变量 图片框2 : 图片框
	@布局配置([[父布局=线性布局2,字体大小=12,字体颜色=-16777216,内容="上一级",对齐方式=17]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局01,宽度=-1,高度=-1,纵向布局=真,左内边距DP=5,右内边距DP=5,上内边距DP=5,下内边距DP=5]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度=-1,分割线高度=1]])
	变量 自定义列表框1 : 自定义列表框

	//声明
	变量 信息 : 启动信息
	变量 项目路径 : 文本
	变量 列表集合  : 文本集合
	变量 列表集合数量  : 文本集合
	变量 活动路径 : 文本
	变量 设置_设定 : 设置_设定

	事件 项目管理_文件管理:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//退出按钮
		事件 图片框01:被单击()
			关闭窗口()
		结束 事件
		事件 文本框02:被单击()
			关闭窗口()
		结束 事件
		//加载夜间模试
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局5,设置相关路径)
			结束 如果
		结束 如果
		//获取路径
		项目路径 = 其他_其他.读缓存("ProjectFolderView")
		//防止因为文件夹丢失而闪退
		写出文本文件(项目路径 + "/null","")
		删除文件(项目路径 + "/null")
		//加载列表
		加载列表(项目路径)
		//设置标题
		如果 项目路径 ? "resource" 则
			文本框03.内容 = "资源包文件夹查看"
		结束 如果
		如果 项目路径 ? "behaviour" 则
			文本框03.内容 = "行为包文件夹查看"
		结束 如果
	结束 事件

	//窗口被重新启动时触发该事件
	事件 项目管理_文件管理:被重新启动()
		//窗口切换动画
		播放默认切换动画(2)
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局02.背景颜色 = 0XFF333333
		线性布局03.背景颜色 = 0XFF222222
		卡片布局01.卡片背景颜色 = 0XFF222222
		文本框02.字体颜色 = 0XFFFFFFFF
		文本框03.字体颜色 = 0XFFFFFFFF
		图片框01.图片资源 = 其他_资源.白色返回图标
		图片框2.图片资源 = 项目管理_资源.白色返回上一级
		文本框1.字体颜色 = 0XFFFFFFFF
		线性布局5.背景颜色 = 0XFF222222
		自定义列表框1.背景颜色 = 0XFF333333
		自定义列表框1.分割线颜色 = 0XFF222222
	结束 方法

	//加载列表
	方法 加载列表(路径 : 文本,刷新 : 逻辑型 = 假)
		活动路径 = 路径
		如果 刷新 则
			列表集合 = 文件操作.取子文件集合(路径)
			自定义列表框1.更新项目(列表集合.长度)
		否则
			事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
				变量 布局 : 项目管理_文件管理列表?
				如果 项目布局 == 空 则
					布局 = 创建 项目管理_文件管理列表
				否则
					布局 = 项目布局
				结束 如果
				//显示到列表
				变量 文件路径 : 文本 = 列表集合[索引]
				如果 是否为目录(文件路径) 则
					布局.图片框1.图片资源 = 项目管理_资源.文件分类图标folder
					列表集合数量 = 文件操作.取子文件集合(文件路径)
					布局.文本框1.内容 = 取文件名(文件路径)
					布局.文本框2.内容 = 取文件修改时间(文件路径) + " - " + 列表集合数量.长度 + "项"
				否则
					变量 文件路径S : 文本 = 文件路径.到小写()
					//设置标题
					布局.文本框1.内容 = 取文件名(文件路径)
					//设置文件描述
					如果 读入文本文件(文件路径).替换(" ","") == "" 则
						布局.文本框2.内容 = 取文件修改时间(文件路径) + " - " + 其他_转换.转换文件大小(取文件大小(文件路径)) + " 空白文件"
					否则
						如果 取文件后缀名(文件路径S) == "json" 则
							布局.文本框2.内容 = 取文件修改时间(文件路径) + " - " + 其他_转换.转换文件大小(取文件大小(文件路径)) + " 没有异常"
							开始俘获异常()
							变量 json : JSON对象 = 读入文本文件(文件路径)
							调试输出(json.到文本(4))
							俘获所有异常()
							布局.文本框2.内容 = 取文件修改时间(文件路径) + " - " + 其他_转换.转换文件大小(取文件大小(文件路径)) + " 异常文件"
							变量 错误提示 : 文本[] = {"异常文件"}
							布局.文本框2.高亮(错误提示,0XFFFF0000)
							结束俘获异常()
						否则
							布局.文本框2.内容 = 取文件修改时间(文件路径) + " - " + 其他_转换.转换文件大小(取文件大小(文件路径)) + " 普通文件"
						结束 如果
					结束 如果
					//设置图标
					如果 取文件后缀名(文件路径S) == "jpeg" || 取文件后缀名(文件路径S) == "png" 则
						布局.图片框1.图片路径 = 文件路径
					否则 取文件后缀名(文件路径S) == "txt"
						布局.图片框1.图片资源 = 项目管理_资源.文件分类图标txt
					否则 取文件后缀名(文件路径S) == "mcfunction"
						布局.图片框1.图片资源 = 项目管理_资源.文件分类图标fn
					否则 取文件后缀名(文件路径S) == "js"
						布局.图片框1.图片资源 = 项目管理_资源.文件分类图标js
					否则 取文件后缀名(文件路径S) == "json"
						布局.图片框1.图片资源 = 项目管理_资源.文件分类图标json
					否则 取文件后缀名(文件路径S) == "lang"
						布局.图片框1.图片资源 = 项目管理_资源.文件分类图标lang
					否则
						布局.图片框1.图片资源 = 项目管理_资源.文件分类图标no		
					结束 如果
				结束 如果
				//列表被点击
				事件 布局.相对布局1:被单击()
					如果 是否为目录(文件路径) 则
						活动路径 = 文件路径
						加载列表(文件路径,真)
					结束 如果
				结束 事件
				返回 布局
			结束 事件
			列表集合 = 文件操作.取子文件集合(路径)
			自定义列表框1.更新项目(列表集合.长度)
		结束 如果
		//返回上一级
		事件 线性布局2:被单击()
			如果 活动路径 == 项目路径 则
				弹出警告提示("已到达根目录! ")
			否则
				变量 wj : 文件 = 活动路径
				变量 flj : 文本 = wj.取父目录路径()
				加载列表(flj,真)
			结束 如果
		结束 事件

	结束 方法

结束 类

类 项目管理_文件管理列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度DP=50,背景颜色=-1,水波纹效果=真]])
	变量 相对布局1 : 相对布局
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388627,@左外边距DP=10,@右外边距DP=10]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度DP=45,高度DP=45,对齐方式=17]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=35,高度DP=35]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,对齐方式=8388627,纵向布局=真]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,字体颜色=-16777216,字体大小=15,内容="文件名称",@左外边距DP=5,@右外边距DP=20]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局3,字体大小=12,内容="文件相关信息",@上外边距DP=3,@左外边距DP=5,@右外边距DP=20]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=相对布局1,宽度=-1,高度=-1,对齐方式=8388629]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度DP=20,高度DP=20,@右外边距DP=10,图片资源="../../../../资源库/图标/management/list_arrow.png"]])
	变量 图片框2 : 图片框

	//声明
	变量 设置_设定 : 设置_设定

	事件 项目管理_文件管理列表 : 创建完毕()
		//加载夜间模试
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置功能按钮颜色
	方法 设置夜间模式()
		相对布局1.背景颜色 = 0XFF333333
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类