类 项目管理_项目管理 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=15,高度DP=15,图片资源="../../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,字体大小=15,内容="项目",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局2,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,粗体=真,字体大小=16,内容="项目管理",字体颜色=-16777216]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度DP=50,对齐方式=17]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局5,宽度=-1,高度DP=38,@左外边距DP=10,@右外边距DP=10,卡片阴影=0,圆角=45]])
	变量 卡片布局2 : 卡片布局
	@布局配置([[父布局=卡片布局2,宽度=-1,高度=-1,背景颜色=-1]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,宽度DP=38,高度DP=38,对齐方式=17]])
	变量 线性布局7 : 线性布局
	@布局配置([[父布局=线性布局7,宽度DP=20,高度DP=20,图片资源="../../../../资源库/图标/mian/search.xml"]])
	变量 图片框2 : 图片框
	@布局配置([[父布局=线性布局6,宽度=-1,高度=-1,对齐方式=8388627]])
	变量 线性布局8 : 线性布局
	@布局配置([[父布局=线性布局8,宽度=-1,高度=-1,背景颜色=16777215,字体大小=15,左内边距DP=5,右内边距DP=5,提示文本="搜索UUID...",内容=""]])
	变量 编辑框1 : 编辑框
	@布局配置([[父布局=线性布局4,宽度=-1,高度DP=40,@左外边距DP=10,@右外边距DP=10]])
	变量 导航栏1 : 导航栏
	@布局配置([[父布局=线性布局4,宽度=-1,高度DP=25,对齐方式=8388629]])
	变量 线性布局9 : 线性布局
	@布局配置([[父布局=线性布局9,@左外边距DP=0,@右外边距DP=10,内容="共 0 项",字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局9,@右外边距DP=10,字体颜色=-16777216,内容="宫格列表"]])
	变量 多选框1 : 多选框
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,左内边距DP=10,右内边距DP=10,上内边距DP=5,下内边距DP=5]])
	变量 下拉刷新布局1 : 下拉刷新布局
	@布局配置([[父布局=下拉刷新布局1,宽度=-1,高度=-1,列数=1]])
	变量 自定义宫格列表框1 : 自定义宫格列表框

	//声明
	变量 设置_设定 : 设置_设定
	变量 列表集合 : 文本集合
	变量 结束集合 : 文本集合

	//变量
	变量 item_type : 整数 = 0

	事件 项目管理_项目管理:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//退出按钮
		事件 图片框1:被单击()
			关闭窗口()
		结束 事件
		事件 文本框2:被单击()
			关闭窗口()
		结束 事件
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局4,设置相关路径)
			结束 如果
		结束 如果
		//加载列表
		变量 列表路径 : 文本 = 其他_变量.项目目录 + 其他_其他.读缓存("ProjectName") + "/data/item"
		如果 文件是否存在(列表路径) 则
			加载列表(列表路径)
			否则
				写出文本文件(列表路径 + "/null","")
				删除文件(列表路径 + "/null")
				加载列表(列表路径)
		结束 如果
		//加载方法
		设置导航栏()
		//订阅事件
		订阅事件()
	结束 事件
	
	//刷新
	事件 下拉刷新布局1:下拉被刷新()
		下拉刷新布局1.刷新(假)
	结束 事件
	
	//切换普通列表与宫格列表
	事件 多选框1:选中状态改变(选中 : 逻辑型)
		如果 选中 则
			自定义宫格列表框1.列数 = 2
			否则
				自定义宫格列表框1.列数 = 1
		结束 如果
	结束 事件

	方法 设置导航栏()
		//设置导航栏
		变量 项目集 : 文本集合 = {"全部","资源包","行为包","Addon-on"}
		事件 导航栏1:导航文本样式(索引 : 整数,导航文本 : 文本) : 导航文本样式
			变量 文本样式 : 导航文本样式_渐变缩放
			文本样式.字体大小 = 18
			文本样式.缩小度 = 0.75
			文本样式.颜色_选中 = 0XFFE25656
			文本样式.颜色_未选中 = 0XFF40AAFF
			文本样式.对齐方式 = 对齐方式.居中
			返回 文本样式
		结束 事件
		事件 导航栏1:导航条样式() : 导航条样式
			变量 条样式 : 导航条样式_直线渐变
			条样式.高度 = 3
			条样式.偏移Y = 136
			条样式.渐变颜色组 = {0xfff57c00}
			返回 条样式
		结束 事件
		事件 导航栏1:导航被单击(索引 : 整数) : 逻辑型
			//设置变量
			item_type = 索引
			//重置编辑框
			编辑框1.内容 = ""
			//加载列表
			变量 列表路径 : 文本 = 其他_变量.项目目录 + 其他_其他.读缓存("ProjectName") + "/data/item"
			加载列表(列表路径)
			返回 假
		结束 事件
		导航栏1.导航背景颜色 = 透明色
		导航栏1.置文本集(项目集)
	结束 方法

	方法 加载列表(路径 : 文本)
		//加载自定义列表
		事件 自定义宫格列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 项目管理_项目管理_列表?
			如果 项目布局 == 空 则
				布局 = 创建 项目管理_项目管理_列表
			否则
				布局 = 项目布局
			结束 如果
			//变量
			变量 文件路径 : 文本 = 列表集合[索引]
			变量 图标文件路径 : 文本 = 文件路径 + "/icon.png"
			变量 清单文件路径 : 文本 = 文件路径 + "/manifest.json"
			//设置布局内容
			布局.图片框1.图片路径 = 图标文件路径
			布局.文本框1.内容 = 清单文件(清单文件路径,"name")
			布局.文本框2.内容 = "标识符：" + 清单文件(清单文件路径,"identifier") + " 类型：" + 清单文件(清单文件路径,"type")
			//列表被点击
			事件 布局.线性布局2:被单击()

			结束 事件
			返回 布局
		结束 事件
		//转换为集合
		列表集合 = 搜索(文件操作.取子文件集合(路径),item_type,"")
		自定义宫格列表框1.更新项目(列表集合.长度)
		//搜索
		事件 编辑框1:内容被改变()
			列表集合 = 搜索(文件操作.取子文件集合(路径),item_type,编辑框1.内容)
			自定义宫格列表框1.更新项目(列表集合.长度)
		结束 事件
		//统计数量
		文本框1.内容 = "共 " + 列表集合.长度 + " 项"
	结束 方法

	//搜索
	方法 搜索(项目集合 : 文本集合,项目类型 : 整数,搜索内容 : 文本) : 文本集合
		结束集合.清空()
		循环(项目集合 -> 项目)
			假如 项目类型
				是 0
					如果 项目.到文本() ? 搜索内容 则
						结束集合.添加成员(项目)
					结束 如果
				是 1
					如果 项目.到文本() ? 模块_项目种类.资源包 则
						如果 项目.到文本() ? 搜索内容 则
							结束集合.添加成员(项目)
						结束 如果
					结束 如果
				是 2
					如果 项目.到文本() ? 模块_项目种类.行为包 则
						如果 项目.到文本() ? 搜索内容 则
							结束集合.添加成员(项目)
						结束 如果
					结束 如果
				是 3
					如果 项目.到文本() ? 模块_项目种类.Addon 则
						如果 项目.到文本() ? 搜索内容 则
							结束集合.添加成员(项目)
						结束 如果
					结束 如果	
			结束 假如
		结束 循环
		返回 结束集合
	结束 方法
	
	变量 获取清单文件文本 : 文本 = ""
	方法 清单文件(路径 : 文本,名称 : 文本) : 文本
		变量 功能 : 其他_功能
		如果 文件是否存在(路径) 则
			如果 功能.JSON文件是否合法(路径) 则
				变量 json : JSON对象 = 读入文本文件(路径)
				获取清单文件文本 = json[名称].到文本()
				否则
					获取清单文件文本 = "null"
			结束 如果
			否则
				获取清单文件文本 = "path null"
		结束 如果
		返回 获取清单文件文本
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		线性布局3.背景颜色 = 0XFF222222
		卡片布局1.卡片背景颜色 = 0XFF222222
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
		图片框1.图片资源 = 其他_资源.白色返回图标
		线性布局4.背景颜色 = 0XFF222222
		图片框2.图片资源 = 项目管理_资源.白色搜索图标
		卡片布局2.卡片背景颜色 = 0XFF333333
		线性布局6.背景颜色 = 0XFF333333
		编辑框1.提示文本颜色 = 0XFF999999
		编辑框1.字体颜色 = 0XFFFFFFFF
		文本框1.字体颜色 = 0XFFFFFFFF
		多选框1.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类


类 项目管理_项目管理_列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,圆角=20,@左外边距DP=5,@右外边距DP=5,卡片阴影=0,@上外边距DP=5]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-1,水波纹效果=真]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=45,高度DP=45,对齐方式=17]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局3,宽度DP=30,高度DP=30]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,宽度=-1,高度=-1,纵向布局=真,对齐方式=8388627]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,字体大小=14,字体颜色=-16777216,单行显示=真,省略显示=2]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局4,字体大小=11,单行显示=真,省略显示=2]])
	变量 文本框2 : 文本框


	//声明
	变量 设置_设定 : 设置_设定

	事件 项目管理_项目管理_列表:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
	结束 事件

	//设置夜间模式
	方法 设置夜间模式()
		卡片布局1.卡片背景颜色 = 0XFF333333
		线性布局2.背景颜色 = 0XFF333333
		文本框1.字体颜色 = 0XFFFFFFFF
		文本框2.字体颜色 = 0XFFFFFFFF
	结束 方法

结束 类