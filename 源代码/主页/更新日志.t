类 更新日志 : 窗口

	@布局配置([[根布局=真,宽度=-1,高度=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=50,对齐方式=8388627,背景颜色=-1]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,宽度DP=15,高度DP=15,图片资源="../../../资源库/图标/back/Back_black.png",@左外边距DP=10]])
	变量 图片框1 : 图片框
	@布局配置([[父布局=线性布局2,字体大小=15,内容="设置",字体颜色=-16777216]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局2,宽度DP=2,高度DP=12,@左外边距DP=10,卡片阴影=0]])
	变量 卡片布局1 : 卡片布局
	@布局配置([[父布局=卡片布局1,宽度=-1,高度=-1,背景颜色=-526087]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,粗体=真,字体大小=16,内容="更新日志",字体颜色=-16777216]])
	变量 文本框3 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-1,纵向布局=真,对齐方式=49,内边距DP=10,背景颜色=-1]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,分割线高度=0,显示滑块条=真,始终显示快速滚动条=真]])
	变量 自定义列表框1 : 自定义列表框

	//声明
	变量 设置_设定 : 设置_设定

	变量 列表数组 : 文本集合	

	事件 更新日志:创建完毕()
		//设置主题
		本对象.显示标题栏 = 假
		本对象.状态栏颜色 = 0XFFFFFFFF
		本对象.状态栏字体黑色 = 真
		//窗口切换动画
		播放默认切换动画(2)
		//退出按钮
		事件 图片框1:被单击()
			关闭窗口()
		结束 事件
		事件 文本框2:被单击()
			关闭窗口()
		结束 事件
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			设置夜间模式()
		结束 如果
		//设置背景
		变量 设置相关路径 : 文本 = 设置_设定.获取文本("PersonalityBackground")
		如果 设置相关路径.替换(" ","") == "" 则
		否则
			如果 文件是否存在(设置相关路径) 则
				设置_设置.设置布局背景(本对象,线性布局4,设置相关路径)
			结束 如果
		结束 如果
		//加载
		变量 jsonlist : JSON数组 = 读入资源文件(本对象,"UpdateLog.json")
		加载列表(jsonlist)
		//订阅事件
		订阅事件()
	结束 事件


	方法 加载列表(数组内容 : JSON数组)
		//初始化
		列表数组.清空()
		//循环
		循环(i, 0, 数组内容.长度)
			列表数组.添加成员(数组内容.取文本(i).到文本())
		结束 循环
		//加载列表
		事件 自定义列表框1:加载布局(索引 : 整数,项目布局 : 组件容器) : 组件容器
			变量 布局 : 更新日志_列表?
			如果 项目布局 == 空 则
				布局 = 创建 更新日志_列表
			否则
				布局 = 项目布局
			结束 如果
			//变量
			变量 列表数据内容 : 文本 = 列表数组[索引]
			变量 json : JSON对象 = 列表数据内容
			//设置布局内容
			布局.文本框1.内容 = json["name"].到文本()
			布局.文本框2.内容 = json["time"].到文本()
			//
			变量 res_path : 文本 = "mores/update_log/" + json["path"].到文本()
			内容列表(读入资源文件(本对象,res_path),布局.线性布局7)
			返回 布局
		结束 事件
		//更新列表
		自定义列表框1.更新项目(列表数组.长度)
	结束 方法

	//
	方法 内容列表(内容 : 文本,列表布局 : 线性布局)
		变量 list : 文本[] = 内容.分割文本("\n")
		列表布局.移除所有组件()
		循环(i, 0, 取数组长度(list))
			变量 文本列表 : 文本框
			如果 设置_设定.获取开关("NightMode") 则
				文本列表.字体颜色 = 0XFFFFFFFF
				否则
					文本列表.字体颜色 = 0XFF000000
			结束 如果
			文本列表.内容 = "● " + list[i]
			文本列表.字体大小 = 15
			列表布局.添加组件(文本列表)
		结束 循环
	结束 方法

	//设置功能按钮颜色
	方法 设置夜间模式()
		本对象.状态栏颜色 = 0XFF333333
		本对象.状态栏字体黑色 = 假
		线性布局2.背景颜色 = 0XFF333333
		线性布局3.背景颜色 = 0XFF222222
		卡片布局1.卡片背景颜色 = 0XFF222222
		文本框2.字体颜色 = 0XFFFFFFFF
		文本框3.字体颜色 = 0XFFFFFFFF
		图片框1.图片资源 = 其他_资源.白色返回图标
		线性布局4.背景颜色 = 0XFF222222
		自定义列表框1.背景颜色 = 0XFF333333
	结束 方法

结束 类


类 更新日志_列表 : 组件容器

	@布局配置([[根布局=真,宽度=-1,高度=-2,背景颜色=-1,纵向布局=真]])
	变量 线性布局1 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,对齐方式=8388627]])
	变量 线性布局2 : 线性布局
	@布局配置([[父布局=线性布局2,@左外边距DP=10,粗体=真,字体大小=22,内容="v1.0.0",字体颜色=-16777216]])
	变量 文本框1 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=3,背景颜色=-1381137]])
	变量 线性布局3 : 线性布局
	@布局配置([[父布局=线性布局1,宽度=-1,高度DP=45,@上外边距DP=10]])
	变量 线性布局4 : 线性布局
	@布局配置([[父布局=线性布局4,高度=-1,宽度DP=3,背景颜色=-14441742]])
	变量 线性布局5 : 线性布局
	@布局配置([[父布局=线性布局4,宽度=-1,高度=-1,对齐方式=8388627,背景颜色=-591622]])
	变量 线性布局6 : 线性布局
	@布局配置([[父布局=线性布局6,@左外边距DP=10,字体颜色=-12230532,字体大小=15,内容="0000-00-00"]])
	变量 文本框2 : 文本框
	@布局配置([[父布局=线性布局1,宽度=-1,高度=-2,左内边距DP=10,下内边距DP=20,上内边距DP=15,右内边距DP=10,纵向布局=真]])
	变量 线性布局7 : 线性布局

	//声明
	变量 设置_设定 : 设置_设定

	事件 更新日志_列表:创建完毕()
		//设置夜间模式
		如果 设置_设定.获取开关("NightMode") 则
			线性布局1.背景颜色 = 0XFF333333
			线性布局3.背景颜色 = 0XFF222222
			文本框1.字体颜色 = 0XFFFFFFFF
			文本框2.字体颜色 = 0XFFFFFFFF
			线性布局6.背景颜色 = 0XFF4F4F4F
		结束 如果
	结束 事件

结束 类