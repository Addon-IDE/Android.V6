?=按页数列出命令用法。 【? <page: int>】
?=按命令名列出命令用法。 【? [command: CommandName]】
alwaysday=切换昼夜更替锁定。 【alwaysday [lock: Boolean]】
camera=重置玩家的摄像机。 【camera <players: target> clear】
camera=使玩家视角逐渐变为黑色，维持一段时间后逐渐恢复。 【camera <players: target> fade】
camera=使玩家视角逐渐变为指定的颜色，维持一段时间后逐渐恢复。 【camera <players: target> fade color <red: int> <green: int> <blue: int>】
camera=使玩家视角在指定的时间内逐渐变为黑色，维持指定时间后逐渐恢复。 【camera <players: target> fade time <fadeInSeconds: float> <holdSeconds: float> <fadeOutSeconds: float>】
camera=使玩家视角按在指定的时间内逐渐变为指定的颜色，维持指定时间后逐渐恢复。 【camera <players: target> fade time <fadeInSeconds: float> <holdSeconds: float> <fadeOutSeconds: float> color <red: int> <green: int> <blue: int>】
camera=将玩家的摄像机设置为指定预设。 【camera <players: target> set <preset: string> [default: default]】
camera=将玩家的摄像机平滑变换为指定预设。 【camera <players: target> set <preset: string> ease <easeTime: float> <easeType: Easing> [default: default]】
camera=将玩家的摄像机平滑变换为指定预设，并覆盖该预设的旋转角度，使其面向指定实体。 【camera <players: target> set <preset: string> ease <easeTime: float> <easeType: Easing> facing <lookAtEntity: target>】
camera=将玩家的摄像机平滑变换为指定预设，并覆盖该预设的旋转角度，使其面向指定坐标。 【camera <players: target> set <preset: string> ease <easeTime: float> <easeType: Easing> facing <lookAtPosition: x y z>】
camera=将玩家的摄像机平滑变换为指定预设，并覆盖该预设的位置。 【camera <players: target> set <preset: string> ease <easeTime: float> <easeType: Easing> pos <position: x y z>】
camera=将玩家的摄像机平滑变换为指定预设，并覆盖该预设的位置与旋转角度，使其面向指定实体。 【camera <players: target> set <preset: string> ease <easeTime: float> <easeType: Easing> pos <position: x y z> facing <lookAtEntity: target>】
camera=将玩家的摄像机平滑变换为指定预设，并覆盖该预设的位置与旋转角度，使其面向指定坐标。 【camera <players: target> set <preset: string> ease <easeTime: float> <easeType: Easing> pos <position: x y z> facing <lookAtPosition: x y z>】
camera=将玩家的摄像机平滑变换为指定预设，并覆盖该预设的位置与旋转角度。 【camera <players: target> set <preset: string> ease <easeTime: float> <easeType: Easing> pos <position: x y z> rot <xRot: value> <yRot: value>】
camera=将玩家的摄像机平滑变换为指定预设，并覆盖该预设的旋转角度。 【camera <players: target> set <preset: string> ease <easeTime: float> <easeType: Easing> rot <xRot: value> <yRot: value>】
camera=将玩家的摄像机设置为指定预设，并覆盖该预设的旋转角度，使其面向指定实体。 【camera <players: target> set <preset: string> facing <lookAtEntity: target>】
camera=将玩家的摄像机设置为指定预设，并覆盖该预设的旋转角度，使其面向指定坐标。 【camera <players: target> set <preset: string> facing <lookAtPosition: x y z>】
camera=将玩家的摄像机设置为指定预设，并覆盖该预设的位置。 【camera <players: target> set <preset: string> pos <position: x y z>】
camera=将玩家的摄像机设置为指定预设，并覆盖该预设的位置与旋转角度，使其面向指定实体。 【camera <players: target> set <preset: string> pos <position: x y z> facing <lookAtEntity: target>】
camera=将玩家的摄像机设置为指定预设，并覆盖该预设的位置与旋转角度，使其面向指定坐标。 【camera <players: target> set <preset: string> pos <position: x y z> facing <lookAtPosition: x y z>】
camera=将玩家的摄像机设置为指定预设，并覆盖该预设的位置与旋转角度。 【camera <players: target> set <preset: string> pos <position: x y z> rot <xRot: value> <yRot: value>】
camera=将玩家的摄像机设置为指定预设，并覆盖该预设的旋转角度。 【camera <players: target> set <preset: string> rot <xRot: value> <yRot: value>】
camerashake=为玩家应用镜头摇晃效果。 【camerashake add <player: target> [intensity: float] [seconds: float] [shakeType: CameraShakeType]】
camerashake=为玩家移除镜头摇晃效果。 【camerashake stop [player: target]】
clear=清除玩家物品栏中的物品。 【clear [player: target] [itemName: Item] [data: int] [maxCount: int]】
clearspawnpoint=重置玩家重生点。 【clearspawnpoint [player: target]】
clone=在区域间复制方块。 【clone <begin: x y z> <end: x y z> <destination: x y z> [maskMode: MaskMode] [cloneMode: CloneMode]】
clone=在区域间复制方块。 【clone <begin: x y z> <end: x y z> <destination: x y z> filtered <cloneMode: CloneMode> <tileName: Block> [blockStates: block states]】
connect=连接WebSocket服务器。 【connect <serverUri: text>】
damage=对实体造成伤害。 【damage <target: target> <amount: int> <cause: DamageCause> entity <damager: target>】
damage=对实体造成来源于特定实体的伤害。 【damage <target: target> <amount: int> [cause: DamageCause]】
daylock=切换昼夜更替锁定。 【daylock [lock: Boolean]】
deop=撤销管理员身份。 【deop <player: target>】
dialogue=更改与NPC的对话场景。 【dialogue change <npc: target> <sceneName: string> [players: target]】
dialogue=打开与NPC的对话场景。 【dialogue open <npc: target> <player: target> [sceneName: string]】
difficulty=更改游戏难度。 【difficulty <difficulty: Difficulty>】
difficulty=更改游戏难度。 【difficulty <difficulty: int>】
effect=为实体添加状态效果。 【effect <player: target> <effect: Effect> [seconds: int] [amplifier: int] [hideParticles: Boolean]】
effect=清除实体的状态效果。 【effect <player: target> clear】
enchant=对实体手持的物品进行附魔。 【enchant <player: target> <enchantmentId: int> [level: int]】
enchant=对实体手持的物品进行附魔。 【enchant <player: target> <enchantmentName: Enchant> [level: int]】
event=为实体触发实体事件。 【event entity <target: target> <eventName: string>】
execute=当指定坐标的方块满足条件时，执行后续子命令。 【execute <subcommand: Option_If_Unless> block <position: x y z> <block: Block> <blockStates: block states> [chainedCommand: ExecuteChainedOption_0]】
execute=当指定坐标的方块满足条件时，执行后续子命令。 【execute <subcommand: Option_If_Unless> block <position: x y z> <block: Block> [chainedCommand: ExecuteChainedOption_0]】
execute=当指定区域的方块满足条件时，执行后续子命令。 【execute <subcommand: Option_If_Unless> blocks <begin: x y z> <end: x y z> <destination: x y z> <scan mode: BlocksScanMode> [chainedCommand: ExecuteChainedOption_0]】
execute=当实体满足条件时，执行后续子命令。 【execute <subcommand: Option_If_Unless> entity <target: target> [chainedCommand: ExecuteChainedOption_0]】
execute=当记分项分数满足条件时，执行后续子命令。 【execute <subcommand: Option_If_Unless> score <target: target> <objective: string> <operation: compare operator> <source: target> <objective: string> [chainedCommand: ExecuteChainedOption_0]】
execute=当记分项分数满足条件时，执行后续子命令。 【execute <subcommand: Option_If_Unless> score <target: target> <objective: string> matches <range: integer range> [chainedCommand: ExecuteChainedOption_0]】
execute=将执行坐标的指定分量向下取整，并执行后续子命令。 【execute align <axes: string> <chainedCommand: ExecuteChainedOption_0>】
execute=改变执行定位基准点，并执行后续子命令。 【execute anchored <eyes|feet> <chainedCommand: ExecuteChainedOption_0>】
execute=改变执行者，并执行后续子命令。 【execute as <origin: target> <chainedCommand: ExecuteChainedOption_0>】
execute=改变执行位置，并执行后续子命令。 【execute at <origin: target> <chainedCommand: ExecuteChainedOption_0>】
execute=改变执行朝向为面向指定坐标，并执行后续子命令。 【execute facing <position: x y z> <chainedCommand: ExecuteChainedOption_0>】
execute=改变执行朝向为面向指定实体，并执行后续子命令。 【execute facing entity <origin: target> <eyes|feet> <chainedCommand: ExecuteChainedOption_0>】
execute=改变执行维度与执行坐标系，并执行后续子命令。 【execute in <dimension: Dimension> <chainedCommand: ExecuteChainedOption_0>】
execute=改变执行坐标为指定坐标，并执行后续子命令。 【execute positioned <position: x y z> <chainedCommand: ExecuteChainedOption_0>】
execute=改变执行坐标为指定实体的位置，并执行后续子命令。 【execute positioned as <origin: target> <chainedCommand: ExecuteChainedOption_0>】
execute=改变执行朝向为指定朝向，并执行后续子命令。 【execute rotated <yaw: value> <pitch: value> <chainedCommand: ExecuteChainedOption_0>】
execute=改变执行朝向为指定实体的朝向，并执行后续子命令。 【execute rotated as <origin: target> <chainedCommand: ExecuteChainedOption_0>】
execute=执行命令。 【execute run <command: command>】
fill=用指定方块填充区域。 【fill <from: x y z> <to: x y z> <tileName: Block> <blockStates: block states> [oldBlockHandling: FillMode]】
fill=用指定方块替换区域中的特定方块。 【fill <from: x y z> <to: x y z> <tileName: Block> <blockStates: block states> replace [replaceTileName: Block] [replaceBlockStates: block states]】
fill=用指定方块填充区域。 【fill <from: x y z> <to: x y z> <tileName: Block> [oldBlockHandling: FillMode]】
fill=用指定方块替换区域中的特定方块。 【fill <from: x y z> <to: x y z> <tileName: Block> replace [replaceTileName: Block] [replaceBlockStates: block states]】
fog=从玩家的迷雾栈中移除迷雾。 【fog <victim: target> <mode: delete> <userProvidedId: string>】
fog=向玩家的迷雾栈中添加迷雾。 【fog <victim: target> push <fogId: string> <userProvidedId: string>】
function=调用函数。 【function <name: filepath>】
gamemode=更改游戏模式。 【gamemode <gameMode: GameMode> [player: target]】
gamemode=更改游戏模式。 【gamemode <gameMode: int> [player: target]】
gamerule=查看所有游戏规则。 【gamerule】
gamerule=查看或修改特定布尔类型游戏规则。 【gamerule <rule: BoolGameRule> [value: Boolean]】
gamerule=查看或修改特定整型游戏规则。 【gamerule <rule: IntGameRule> [value: int]】
gametest=清除所有 GameTest 测试。 【gametest clearall】
gametest=为 GameTest 测试分配区域。 【gametest create <testName: string> [width: int] [height: int] [depth: int]】
gametest=查询最近的 GameTest 测试的位置。 【gametest pos】
gametest=运行指定的 GameTest 测试。 【gametest run <testName: string> <stopOnFailure: Boolean> <repeatCount: int> [rotationSteps: int]】
gametest=运行指定的 GameTest 测试。 【gametest run <testName: string> [rotationSteps: int]】
gametest=运行指定的 GameTest 测试集合。 【gametest runset [tag: string] [rotationSteps: int]】
gametest=运行指定的 GameTest 测试集合，若有一个测试未通过则立即停止。 【gametest runsetuntilfail [tag: string] [rotationSteps: int]】
gametest=运行附近所有的 GameTest 测试。 【gametest runthese】
gametest=运行最近的 GameTest 测试。 【gametest runthis】
gametest=停止全部 GameTest 测试。 【gametest stopall】
give=给予玩家特定物品。 【give <player: target> <itemName: Item> [amount: int] [data: int] [components: json]】
help=按页数列出命令用法。 【help <page: int>】
help=按命令名列出命令用法。 【help [command: CommandName]】
inputpermission=查询选中玩家的会话的操作输入权限。 【inputpermission query <targets: target> <permission: permission> [state: state]】
inputpermission=设置选中玩家的会话的操作输入权限。 【inputpermission set <targets: target> <permission: permission> <state: state>】
kick=踢出特定玩家。 【kick <name: target> <reason: message>】
kill=击杀或移除实体。 【kill [target: target]】
list=列出在线玩家。 【list】
locate=寻找并确定最近的特定生物群系的坐标。 【locate biome <biome: Biome>】
locate=寻找并确定最近的特定结构的坐标。 【locate structure <structure: Structure> [useNewChunksOnly: Boolean]】
loot=给予玩家特定实体被击杀所能获得的战利品。 【loot give <players: target> kill <entity: target> [<tool>|mainhand|offhand: string]】
loot=给予玩家通过特定战利品表所能获得的战利品。 【loot give <players: target> loot <loot_table: string> [<tool>|mainhand|offhand: string]】
loot=向指定容器方块中加入特定实体被击杀所能获得的战利品。 【loot insert <position: x y z> kill <entity: target> [<tool>|mainhand|offhand: string]】
loot=向指定容器方块中加入通过特定战利品表所能获得的战利品。 【loot insert <position: x y z> loot <loot_table: string> [<tool>|mainhand|offhand: string]】
loot=将指定方块的部分槽位替换为特定实体被击杀所能获得的战利品。 【loot replace block <position: x y z> slot.container <slotId: int> <count: int> kill <entity: target> [<tool>|mainhand|offhand: string]】
loot=将指定方块的部分槽位替换为通过特定战利品表所能获得的战利品。 【loot replace block <position: x y z> slot.container <slotId: int> <count: int> loot <loot_table: string> [<tool>|mainhand|offhand: string]】
loot=将指定方块的部分槽位替换为特定实体被击杀所能获得的战利品。 【loot replace block <position: x y z> slot.container <slotId: int> kill <entity: target> [<tool>|mainhand|offhand: string]】
loot=将指定方块的部分槽位替换为通过特定战利品表所能获得的战利品。 【loot replace block <position: x y z> slot.container <slotId: int> loot <loot_table: string> [<tool>|mainhand|offhand: string]】
loot=将指定实体的部分槽位替换为特定实体被击杀所能获得的战利品。 【loot replace entity <entity: target> <slotType: EntityEquipmentSlot> <slotId: int> <count: int> kill <entity: target> [<tool>|mainhand|offhand: string]】
loot=将指定实体的部分槽位替换为通过特定战利品表所能获得的战利品。 【loot replace entity <entity: target> <slotType: EntityEquipmentSlot> <slotId: int> <count: int> loot <loot_table: string> [<tool>|mainhand|offhand: string]】
loot=将指定实体的部分槽位替换为特定实体被击杀所能获得的战利品。 【loot replace entity <entity: target> <slotType: EntityEquipmentSlot> <slotId: int> kill <entity: target> [<tool>|mainhand|offhand: string]】
loot=将指定实体的部分槽位替换为通过特定战利品表所能获得的战利品。 【loot replace entity <entity: target> <slotType: EntityEquipmentSlot> <slotId: int> loot <loot_table: string> [<tool>|mainhand|offhand: string]】
loot=在指定位置掉落特定实体被击杀所能获得的战利品。 【loot spawn <position: x y z> kill <entity: target> [<tool>|mainhand|offhand: string]】
loot=在指定位置掉落通过特定战利品表所能获得的战利品。 【loot spawn <position: x y z> loot <loot_table: string> [<tool>|mainhand|offhand: string]】
me=发送一条关于自己的消息。 【me <message: message>】
mobevent=查询或设置生物事件的启用状态。 【mobevent <event: MobEvent> [value: Boolean]】
msg=向指定玩家发送私聊消息。 【msg <target: target> <message: message>】
music=播放指定的音乐。 【music play <trackName: string> [volume: float] [fadeSeconds: float] [repeatMode: MusicRepeatMode]】
music=将指定音乐加入播放队列。 【music queue <trackName: string> [volume: float] [fadeSeconds: float] [repeatMode: MusicRepeatMode]】
music=播放指定的音乐。 【music stop [fadeSeconds: float]】
music=设置音乐播放的音量。 【music volume <volume: float>】
op=赋予特定玩家管理员身份。 【op <player: target>】
particle=在指定位置生成粒子发射器。 【particle <effect: string> [position: x y z]】
playanimation=在特定实体上播放实体动画。 【playanimation <entity: target> <animation: string> [next_state: string] [blend_out_time: float] [stop_expression: string] [controller: string]】
playsound=在特定位置为指定玩家播放声音。 【playsound <sound: string> [player: target] [position: x y z] [volume: float] [pitch: float] [minimumVolume: float]】
recipe=向玩家赋予指定的配方。 【recipe give <player: target> <recipe: string>】
recipe=从玩家收回指定的配方。 【recipe take <player: target> <recipe: string>】
reload=重新加载行为包中的函数。 【reload】
replaceitem=替换指定方块容器中的物品。 【replaceitem block <position: x y z> slot.container <slotId: int> <itemName: Item> [amount: int] [data: int] [components: json]】
replaceitem=替换指定方块容器中的物品。 【replaceitem block <position: x y z> slot.container <slotId: int> <oldItemHandling: ReplaceMode> <itemName: Item> [amount: int] [data: int] [components: json]】
replaceitem=替换指定实体特定槽位中的物品。 【replaceitem entity <target: target> <slotType: EntityEquipmentSlot> <slotId: int> <itemName: Item> [amount: int] [data: int] [components: json]】
replaceitem=替换指定实体特定槽位中的物品。 【replaceitem entity <target: target> <slotType: EntityEquipmentSlot> <slotId: int> <oldItemHandling: ReplaceMode> <itemName: Item> [amount: int] [data: int] [components: json]】
ride=在骑手与坐骑间建立骑乘关系。 【ride <riders: target> start_riding <ride: target> [teleportRules: TeleportRules] [howToFill: FillType]】
ride=为骑手取消骑乘关系。 【ride <riders: target> stop_riding】
ride=为骑手生成坐骑。 【ride <riders: target> summon_ride <entityType: EntityType> [rideRules: RideRules] [spawnEvent: string] [nameTag: string]】
ride=为坐骑取消骑乘关系。 【ride <rides: target> evict_riders】
ride=为坐骑生成骑手。 【ride <rides: target> summon_rider <entityType: EntityType> [spawnEvent: string] [nameTag: string]】
say=向所有玩家广播消息。 【say <message: message>】
schedule=添加在区域被加载时计划执行的函数。 【schedule on_area_loaded add <from: x y z> <to: x y z> <function: filepath>】
schedule=添加在区域被加载时计划执行的函数。 【schedule on_area_loaded add circle <center: x y z> <radius: int> <function: filepath>】
schedule=添加在区域被加载时计划执行的函数。 【schedule on_area_loaded add tickingarea <name: string> <function: filepath>】
scoreboard=添加记分项。 【scoreboard objectives add <objective: string> dummy [displayName: string]】
scoreboard=列出记分项。 【scoreboard objectives list】
scoreboard=移除记分项。 【scoreboard objectives remove <objective: string>】
scoreboard=显示或隐藏记分项。 【scoreboard objectives setdisplay <list|sidebar> [objective: string] [ascending|descending]】
scoreboard=显示或隐藏记分项。 【scoreboard objectives setdisplay belowname [objective: string]】
scoreboard=修改记分板对象的分数。 【scoreboard players <set|add|remove> <player: target> <objective: string> <count: int>】
scoreboard=列出追踪的记分板对象。 【scoreboard players list [playername: target]】
scoreboard=对两个记分板对象的分数进行操作。 【scoreboard players operation <targetName: target> <targetObjective: string> <operation: operator> <selector: target> <objective: string>】
scoreboard=将记分板对象的分数修改为一个指定范围内的随机数。 【scoreboard players random <player: target> <objective: string> <min: int> <max: int>】
scoreboard=重置记分板对象的分数。 【scoreboard players reset <player: target> [objective: string]】
scoreboard=测试记分板对象的分数是否在指定范围。 【scoreboard players test <player: target> <objective: string> <min: wildcard int> [max: wildcard int]】
script=关闭脚本调试器。 【script debugger close】
script=以主动模式打开脚本调试器。 【script debugger connect [host: string] [port: int]】
script=以被动模式打开脚本调试器。 【script debugger listen <port: int>】
script=启动脚本性能分析。 【script profiler start】
script=停止脚本性能分析。 【script profiler stop】
script=导出看门狗计时器统计数据。 【script watchdog exportstats】
scriptevent=向 Script API 模块广播消息事件。 【scriptevent <messageId: string> <message: message>】
setblock=更改指定坐标位置的方块。 【setblock <position: x y z> <tileName: Block> <blockStates: block states> [replace|destroy|keep]】
setblock=更改指定坐标位置的方块。 【setblock <position: x y z> <tileName: Block> [replace|destroy|keep]】
setmaxplayers=设置世界的最大可加入玩家数。 【setmaxplayers <maxPlayers: int>】
setworldspawn=设置世界重生点。 【setworldspawn [spawnPoint: x y z]】
spawnpoint=设置玩家重生点。 【spawnpoint [player: target] [spawnPos: x y z]】
spreadplayers=将指定实体传送到区域内的随机位置。 【spreadplayers <x: value> <z: value> <spreadDistance: float> <maxRange: float> <victim: target>】
stopsound=为指定玩家停止播放声音。 【stopsound <player: target> [sound: string]】
structure=从存储中删除指定的结构。 【structure delete <name: string>】
structure=从存储中渐进加载指定的结构。 【structure load <name: string> <to: x y z> [rotation: Rotation] [mirror: Mirror] [animationMode: StructureAnimationMode] [animationSeconds: float] [includeEntities: Boolean] [includeBlocks: Boolean] [waterlogged: Boolean] [integrity: float] [seed: string]】
structure=从存储中加载指定的结构。 【structure load <name: string> <to: x y z> [rotation: Rotation] [mirror: Mirror] [includeEntities: Boolean] [includeBlocks: Boolean] [waterlogged: Boolean] [integrity: float] [seed: string]】
structure=将结构以指定名称存储。 【structure save <name: string> <from: x y z> <to: x y z> [includeEntities: Boolean] [saveMode: StructureSaveMode] [includeBlocks: Boolean]】
structure=将结构以指定名称存储。 【structure save <name: string> <from: x y z> <to: x y z> [saveMode: StructureSaveMode]】
summon=生成指定的实体并为其命名。 【summon <entityType: EntityType> <nameTag: string> [spawnPos: x y z]】
summon=生成指定的实体。 【summon <entityType: EntityType> [spawnPos: x y z] [yRot: value] [xRot: value] [spawnEvent: string] [nameTag: string]】
summon=生成指定的实体并使其面向另一实体。 【summon <entityType: EntityType> [spawnPos: x y z] facing <lookAtEntity: target> [spawnEvent: string] [nameTag: string]】
summon=生成指定的实体并使其面向指定位置。 【summon <entityType: EntityType> [spawnPos: x y z] facing <lookAtPosition: x y z> [spawnEvent: string] [nameTag: string]】
tag=修改实体拥有的标签。 【tag <entity: target> <add|remove> <name: string>】
tag=列出实体拥有的标签。 【tag <entity: target> list】
teleport=将自身传送至指定实体所在位置。 【teleport <destination: target>】
teleport=将自身传送到指定坐标。 【teleport <destination: x y z> [checkForBlocks: Boolean]】
teleport=将自身传送到指定坐标，并面向指定方向。 【teleport <destination: x y z> [yRot: value] [xRot: value] [checkForBlocks: Boolean]】
teleport=将自身传送到指定坐标，并面向指定实体。 【teleport <destination: x y z> facing <lookAtEntity: target> [checkForBlocks: Boolean]】
teleport=将自身传送到指定坐标，并面向另一坐标。 【teleport <destination: x y z> facing <lookAtPosition: x y z> [checkForBlocks: Boolean]】
teleport=将指定实体传送至另一实体所在位置。 【teleport <victim: target> <destination: target> [checkForBlocks: Boolean]】
teleport=将指定实体传送到指定坐标。 【teleport <victim: target> <destination: x y z> [checkForBlocks: Boolean]】
teleport=将指定实体传送到指定坐标，并面向指定方向。 【teleport <victim: target> <destination: x y z> [yRot: value] [xRot: value] [checkForBlocks: Boolean]】
teleport=将指定实体传送到指定坐标，并面向另一实体。 【teleport <victim: target> <destination: x y z> facing <lookAtEntity: target> [checkForBlocks: Boolean]】
teleport=将指定实体传送到指定坐标，并面向另一坐标。 【teleport <victim: target> <destination: x y z> facing <lookAtPosition: x y z> [checkForBlocks: Boolean]】
tell=向指定玩家发送私聊消息。 【tell <target: target> <message: message>】
tellraw=向指定玩家发送JSON文本消息。 【tellraw <target: target> <raw json message: json>】
testfor=测试指定的实体是否存在。 【testfor <victim: target>】
testforblock=测试指定坐标的方块是否满足条件。 【testforblock <position: x y z> <tileName: Block> [blockStates: block states]】
testforblocks=测试指定区域的方块是否满足条件。 【testforblocks <begin: x y z> <end: x y z> <destination: x y z> [masked|all]】
tickingarea=添加矩形常加载区域。 【tickingarea add <from: x y z> <to: x y z> [name: string] [preload: Boolean]】
tickingarea=添加圆形常加载区域。 【tickingarea add circle <center: x y z> <radius: int> [name: string] [preload: Boolean]】
tickingarea=列出常加载区域。 【tickingarea list [all-dimensions: AllDimensions]】
tickingarea=将指定常加载区域标记为预先加载。 【tickingarea preload <name: string> [preload: Boolean]】
tickingarea=将指定坐标所在的常加载区域标记为预先加载。 【tickingarea preload <position: x y z> [preload: Boolean]】
tickingarea=移除指定的常加载区域。 【tickingarea remove <name: string>】
tickingarea=移除指定坐标所在的常加载区域。 【tickingarea remove <position: x y z>】
tickingarea=移除全部常加载区域。 【tickingarea remove_all】
time=将当前时间加快指定时间值。 【time add <amount: int>】
time=查询当前时间。 【time query <time: TimeQuery>】
time=设置当前时间为指定时间点。 【time set <amount: int>】
time=设置当前时间为指定时间点。 【time set <time: TimeSpec>】
title=向指定玩家展示指定标题。 【title <player: target> <title|subtitle|actionbar> <titleText: message>】
title=清除指定玩家屏幕上显示的标题。 【title <player: target> clear】
title=重置指定玩家的标题时间设置。 【title <player: target> reset】
title=设置指定玩家的标题时间设置。 【title <player: target> times <fadeIn: int> <stay: int> <fadeOut: int>】
titleraw=向指定玩家展示指定JSON文本标题。 【titleraw <player: target> <titleLocation: TitleRawSet> <raw json titleText: json>】
titleraw=清除指定玩家屏幕上显示的JSON文本标题。 【titleraw <player: target> clear】
titleraw=重置指定玩家的JSON文本标题时间设置。 【titleraw <player: target> reset】
titleraw=设置指定玩家的JSON文本标题时间设置。 【titleraw <player: target> times <fadeIn: int> <stay: int> <fadeOut: int>】
toggledownfall=切换当前天气是否降雨。 【toggledownfall】
tp=将自身传送至指定实体所在位置。 【tp <destination: target>】
tp=将自身传送到指定坐标。 【tp <destination: x y z> [checkForBlocks: Boolean]】
tp=将自身传送到指定坐标，并面向指定方向。 【tp <destination: x y z> [yRot: value] [xRot: value] [checkForBlocks: Boolean]】
tp=将自身传送到指定坐标，并面向指定实体。 【tp <destination: x y z> facing <lookAtEntity: target> [checkForBlocks: Boolean]】
tp=将自身传送到指定坐标，并面向另一坐标。 【tp <destination: x y z> facing <lookAtPosition: x y z> [checkForBlocks: Boolean]】
tp=将指定实体传送至另一实体所在位置。 【tp <victim: target> <destination: target> [checkForBlocks: Boolean]】
tp=将指定实体传送到指定坐标。 【tp <victim: target> <destination: x y z> [checkForBlocks: Boolean]】
tp=将指定实体传送到指定坐标，并面向指定方向。 【tp <victim: target> <destination: x y z> [yRot: value] [xRot: value] [checkForBlocks: Boolean]】
tp=将指定实体传送到指定坐标，并面向另一实体。 【tp <victim: target> <destination: x y z> facing <lookAtEntity: target> [checkForBlocks: Boolean]】
tp=将指定实体传送到指定坐标，并面向另一坐标。 【tp <victim: target> <destination: x y z> facing <lookAtPosition: x y z> [checkForBlocks: Boolean]】
w=向指定玩家发送私聊消息。 【w <target: target> <message: message>】
weather=设置当前天气。 【weather <clear|rain|thunder> [duration: int]】
weather=查询当前天气。 【weather query】
wsserver=连接WebSocket服务器。 【wsserver <serverUri: text>】
xp=修改玩家的经验值。 【xp <amount: int> [player: target]】
xp=修改玩家的经验值。 【xp <amount: int>L [player: target]】